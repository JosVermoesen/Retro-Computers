 text
* #include "putchar2.c"
* #
* 
* /*
* 
* #ifndef ERROR
* #define ERROR   -1
* #endif
* 
* int     fout    = 1;
 data
 global fout
fout fdb 1
 text
* char    _obuf[512];
* char    *_opos  = _obuf;
 data
 global _opos
_opos fdb _obuf
 text
* 
* flush() {
 global flush
flush
 pshs y,u
 jmp 1f
2
*         int n;
* 
*         n = _opos - _obuf;
 leas -2,s
 ldd #_obuf
 pshs d
 ldd _opos
 subd ,s++
 std ,s
*         _opos = _obuf;
 ldx #_obuf
 stx _opos
*         if (n > 0)
 ldd ,s
 lble _1
*                 if (write(fout, _obuf, n) != n)
_2
 ldd ,s
 pshs d
 ldd #_obuf
 pshs d
 ldd fout
 pshs d
 jsr write
 leas 6,s
 cmpd ,s
 lbeq _3
*                         return(ERROR);
_4
 ldd #-1
 leas 2,s
 puls y,u,pc

*         return(0);
_3
_1
 ldd #0
 leas 2,s
 puls y,u,pc

* }
1 ldd #-142
 jsr _stkcheck
 jmp 2b


* 
* _flsbuf(c) {
 global _flsbuf
_flsbuf
 pshs y,u
 jmp 1f
2
*         if (flush() == ERROR)
 jsr flush
 cmpd #-1
 lbne _5
*                 return(ERROR);
_6
 ldd #-1
 puls y,u,pc

*         *_opos++ = c;
_5
 ldd 6,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
*         return(c);
 ldd 6,s
 puls y,u,pc

* }
1 ldd #-134
 jsr _stkcheck
 jmp 2b


* 
* #ifndef CLEANUP
* _cleanup() {
 global _cleanup
_cleanup
 pshs y,u
 jmp 1f
2
*         flush();
 jsr flush
* }
 puls y,u,pc

1 ldd #-134
 jsr _stkcheck
 jmp 2b


* #endif
* 
* putchar(c) {
 global putchar
putchar
 pshs y,u
 jmp 1f
2
* #define putchar(x) (_opos<&_obuf[sizeof _obuf]?((*_opos++=(x))&0377):_flsbuf((x)))
*         return(putchar(c));
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _7
_8
 ldd 6,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _9
_7
 ldd 6,s
 pshs d
 jsr _flsbuf
 leas 2,s
_9
 puls y,u,pc

* }
1 ldd #-136
 jsr _stkcheck
 jmp 2b


* #include "printf2.c"
* #
* 
* /*
* 
* #define F_Z     01      /* leading zeroes */
* #define F_S     02      /* signed */
* #define F_L     04      /* left-justify */
* 
* printf(args) {
 global printf
printf
 pshs y,u
 jmp 1f
2
*         extern fout;
*         int *ap, c;
*         char *s, *af;
*         int p, f, sfout;
* 
*         ap = &args;
 leas -14,s
 leax 20,s
 stx 12,s
*         f = *ap;
 ldd [12,s]
 std 2,s
*         sfout = -1;
 ldd #-1
 std ,s
*         if ((unsigned) f < 20) {
 ldd 2,s
 cmpd #20
 lbhs _10
_11
*                 ++ap;
 ldd 12,s
 addd #2
 std 12,s
*                 if (f != fout) {
 ldd 2,s
 cmpd fout
 lbeq _12
_13
*                         flush();
 jsr flush
*                         sfout = fout;
 ldd fout
 std ,s
*                         fout = f;
 ldd 2,s
 std fout
*                 }
*         }
_12
*         af = (char *) *ap++;
_10
 ldx 12,s
 leax 2,x
 stx 12,s
 ldd -2,x
 std 6,s
*         for (;;) {
_16
_14
*                 while ((c = *af++) != '%') {
_18
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
 cmpd #37
 lbeq _17
_19
*                         if (!c)
 ldd 10,s
 lbne _20
*                                 break;
_21
 jmp _17
*                         putchar(c);
_20
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _22
_23
 ldd 10,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _24
_22
 ldd 10,s
 pshs d
 jsr _flsbuf
 leas 2,s
_24
*                 }
*                 if (c == '\0')
 jmp _18
_17
 ldd 10,s
 lbne _25
*                         break;
_26
 jmp _15
*                 c = *af++;
_25
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                 p = 0;
 ldd #0
 std 4,s
*                 f = 0;
 ldd #0
 std 2,s
*                 if (c == '-') {
 ldd 10,s
 cmpd #45
 lbne _27
_28
*                         f |= F_L;
 ldd 2,s
 orb #4
 std 2,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                 }
*                 if (c == '0') {
_27
 ldd 10,s
 cmpd #48
 lbne _29
_30
*                         f |= F_Z;
 ldd 2,s
 orb #1
 std 2,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                 }
*                 while ('0' <= c && c <= '9') {
_29
_32
 ldd #48
 cmpd 10,s
 lbgt _31
_34
 ldd 10,s
 cmpd #57
 lbgt _31
_33
*                         p = p * 10 + c - '0';
 ldd 4,s
 pshs d
 ldd #10
 jsr ccmult
 addd 10,s
 subd #48
 std 4,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                 }
*                 if (c == '.') {
 jmp _32
_31
 ldd 10,s
 cmpd #46
 lbne _35
_36
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                         while ('0' <= c && c <= '9')
_38
 ldd #48
 cmpd 10,s
 lbgt _37
_40
 ldd 10,s
 cmpd #57
 lbgt _37
*                                 c = *af++;
_39
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 std 10,s
*                 }
 jmp _38
_37
*                 if (c == '\0')
_35
 ldd 10,s
 lbne _41
*                         break;
_42
 jmp _15
*                 switch (c) {
_41
 ldd 10,s
 jmp _44
*                 case 'd':
*                         f |= F_S;
_45
 ldd 2,s
 orb #2
 std 2,s
*                 case 'l':
*                 case 'u':
_46
*                         c = 10;
_47
 ldd #10
 std 10,s
*                         goto num;
 leax 14,s
 jmp _48
*                 case 'o':
*                         c = 8;
_49
 ldd #8
 std 10,s
*                         goto num;
 leax 14,s
 jmp _48
*                 case 'b':
*                         c = 2;
_50
 ldd #2
 std 10,s
*                         goto num;
 leax 14,s
 jmp _48
*                 case 'h':
*                 case 'x':
_51
*                         c = 16;
_52
 ldd #16
 std 10,s
*             num:        _num(*ap++, c, p, f);
 bra _53
_48
 leas -14,x
_53
 ldd 2,s
 pshs d
 ldd 6,s
 pshs d
 ldd 14,s
 pshs d
 ldx 18,s
 leax 2,x
 stx 18,s
 ldd -2,x
 pshs d
 jsr _num
 leas 8,s
*                         continue;
 jmp _16
*                 case 'c':
*                         c = *ap++ & 0177;
_54
 ldx 12,s
 leax 2,x
 stx 12,s
 ldd -2,x
 andb #127
 clra
 std 10,s
*                         if (f & F_Z)
 ldd 2,s
 andb #1
 clra
 cmpd #0
 lbeq _55
*                                 if (c < ' ' || c == 0177) {
_56
 ldd 10,s
 cmpd #32
 lblt _58
_59
 ldd 10,s
 cmpd #127
 lbne _57
_58
*                                         switch (c) {
 ldd 10,s
 jmp _61
*                                         case '\n':
*                                                 putchar('\\');
_62
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _63
_64
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _65
_63
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_65
*                                                 c = 'n';
 ldd #110
 std 10,s
*                                                 break;
 jmp _60
*                                         case '\r':
*                                                 putchar('\\');
_66
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _67
_68
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _69
_67
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_69
*                                                 c = 'r';
 ldd #114
 std 10,s
*                                                 break;
 jmp _60
*                                         case '\b':
*                                                 putchar('\\');
_70
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _71
_72
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _73
_71
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_73
*                                                 c = 'b';
 ldd #98
 std 10,s
*                                                 break;
 jmp _60
*                                         case '\f':
*                                                 putchar('\\');
_74
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _75
_76
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _77
_75
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_77
*                                                 c = 'f';
 ldd #102
 std 10,s
*                                                 break;
 jmp _60
*                                         case '\t':
*                                                 putchar('\\');
_78
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _79
_80
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _81
_79
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_81
*                                                 c = 't';
 ldd #116
 std 10,s
*                                                 break;
 jmp _60
*                                         case 033:
*                                                 putchar('\\');
_82
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _83
_84
 ldd #92
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _85
_83
 ldd #92
 pshs d
 jsr _flsbuf
 leas 2,s
_85
*                                                 c = 'e';
 ldd #101
 std 10,s
*                                                 break;
 jmp _60
*                                         default:
_86
*                                                 putchar('^');
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _87
_88
 ldd #94
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _89
_87
 ldd #94
 pshs d
 jsr _flsbuf
 leas 2,s
_89
*                                                 c ^= 0100;
 ldd 10,s
 eorb #64
 std 10,s
*                                         }
*                                         --p;
 jmp _60
_61
 cmpd #13
 lbeq _62
 cmpd #13
 lbeq _66
 cmpd #8
 lbeq _70
 cmpd #12
 lbeq _74
 cmpd #9
 lbeq _78
 cmpd #27
 lbeq _82
 jmp _86
_60
 ldd 4,s
 addd #-1
 std 4,s
*                                 }
*                         putchar(c);
_57
_55
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _90
_91
 ldd 10,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _92
_90
 ldd 10,s
 pshs d
 jsr _flsbuf
 leas 2,s
_92
*                         --p;
 ldd 4,s
 addd #-1
 std 4,s
*                         while (--p >= 0)
_94
 ldd 4,s
 addd #-1
 std 4,s
 lblt _93
*                                 putchar(' ');
_95
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _96
_97
 ldd #32
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _98
_96
 ldd #32
 pshs d
 jsr _flsbuf
 leas 2,s
_98
*                         continue;
 jmp _94
_93
 jmp _16
*                 case 's':
*                         s = (char *) *ap++;
_99
 ldx 12,s
 leax 2,x
 stx 12,s
 ldd -2,x
 std 8,s
*                         while (*s) {
_101
 ldb [8,s]
 lbeq _100
_102
*                                 c = *s++ & 0177;
 ldx 8,s
 leax 1,x
 stx 8,s
 ldb -1,x
 sex
 andb #127
 clra
 std 10,s
*                                 if (f & F_Z)
 ldd 2,s
 andb #1
 clra
 cmpd #0
 lbeq _103
*                                         if (c < ' ' || c == 0177) {
_104
 ldd 10,s
 cmpd #32
 lblt _106
_107
 ldd 10,s
 cmpd #127
 lbne _105
_106
*                                                 putchar('^');
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _108
_109
 ldd #94
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _110
_108
 ldd #94
 pshs d
 jsr _flsbuf
 leas 2,s
_110
*                                                 if (p && --p <= 0)
 ldd 4,s
 lbeq _111
_113
 ldd 4,s
 addd #-1
 std 4,s
 lbgt _111
*                                                         break;
_112
 jmp _100
*                                                 c ^= 0100;
_111
 ldd 10,s
 eorb #64
 std 10,s
*                                         }
*                                 putchar(c);
_105
_103
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _114
_115
 ldd 10,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _116
_114
 ldd 10,s
 pshs d
 jsr _flsbuf
 leas 2,s
_116
*                                 if (p && --p <= 0)
 ldd 4,s
 lbeq _117
_119
 ldd 4,s
 addd #-1
 std 4,s
 lbgt _117
*                                         break;
_118
 jmp _100
*                         }
_117
*                         while (--p >= 0)
 jmp _101
_100
_121
 ldd 4,s
 addd #-1
 std 4,s
 lblt _120
*                                 putchar(' ');
_122
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _123
_124
 ldd #32
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _125
_123
 ldd #32
 pshs d
 jsr _flsbuf
 leas 2,s
_125
*                         continue;
 jmp _121
_120
 jmp _16
*                 }
*                 putchar(c);
_44
 cmpd #100
 lbeq _45
 cmpd #108
 lbeq _46
 cmpd #117
 lbeq _47
 cmpd #111
 lbeq _49
 cmpd #98
 lbeq _50
 cmpd #104
 lbeq _51
 cmpd #120
 lbeq _52
 cmpd #99
 lbeq _54
 cmpd #115
 lbeq _99
_43
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _126
_127
 ldd 10,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _128
_126
 ldd 10,s
 pshs d
 jsr _flsbuf
 leas 2,s
_128
*         }
*         if (sfout >= 0) {
 jmp _16
_15
 ldd ,s
 lblt _129
_130
*                 flush();
 jsr flush
*                 fout = sfout;
 ldd ,s
 std fout
*         }
* }
_129
 leas 14,s
 puls y,u,pc

1 ldd #-156
 jsr _stkcheck
 jmp 2b


* 
* static _num(an, ab, ap, af) {
_num
 pshs y,u
 jmp 1f
2
*         unsigned n, b;
*         char *p;
*         int neg;
*         char buf[17];
* 
*         p = &buf[17];
 leas -25,s
 leax ,s
 leax 17,x
 stx 19,s
*         n = an;
 ldd 31,s
 std 23,s
*         b = ab;
 ldd 33,s
 std 21,s
*         neg = 0;
 ldd #0
 std 17,s
*         if ((af & F_S) && an < 0) {
 ldd 37,s
 andb #2
 clra
 cmpd #0
 lbeq _131
_133
 ldd 31,s
 lbge _131
_132
*                 neg++;
 ldd 17,s
 addd #1
 std 17,s
*                 n = -n;
 ldd 23,s
 nega
 negb
 sbca #0
 std 23,s
*                 --ap;
 ldd 35,s
 addd #-1
 std 35,s
*         }
*         *--p = '\0';
_131
 ldd #0
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         do {
_136
*                 *--p = "0123456789ABCDEF"[n % b];
 data
_137 fcb 48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0

 text
 ldd #_137
 pshs d
 ldd 25,s
 pshs d
 ldd 25,s
 jsr ccudiv
 exg d,x
 addd ,s++
 tfr d,x
 ldb ,x
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*                 --ap;
 ldd 35,s
 addd #-1
 std 35,s
*         } while (n /= b);
_134
 ldd 23,s
 pshs d
 ldd 23,s
 jsr ccdiv
 std 23,s
 lbne _136
_135
*         n = ' ';
 ldd #32
 std 23,s
*         if ((af & (F_Z | F_L)) == F_Z)
 ldd 37,s
 andb #5
 clra
 cmpd #1
 lbne _138
*                 n = '0';
_139
 ldd #48
 std 23,s
*         else if (neg) {
 jmp _140
_138
 ldd 17,s
 lbeq _141
_142
*                 *--p = '-';
 ldd #45
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*                 neg = 0;
 ldd #0
 std 17,s
*         }
*         if ((af & F_L) == 0)
_141
_140
 ldd 37,s
 andb #4
 clra
 cmpd #0
 lbne _143
*                 while (--ap >= 0)
_144
_146
 ldd 35,s
 addd #-1
 std 35,s
 lblt _145
*                         *--p = n;
_147
 ldb 23,s
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         if (neg)
 jmp _146
_145
_143
 ldd 17,s
 lbeq _148
*                 *--p = '-';
_149
 ldd #45
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         while (*p)
_148
_151
 ldb [19,s]
 lbeq _150
*                 putchar(*p++);
_152
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _153
_154
 ldx 19,s
 leax 1,x
 stx 19,s
 ldb -1,x
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _155
_153
 ldx 19,s
 leax 1,x
 stx 19,s
 ldb -1,x
 sex
 pshs d
 jsr _flsbuf
 leas 2,s
_155
*         while (--ap >= 0)
 jmp _151
_150
_157
 ldd 35,s
 addd #-1
 std 35,s
 lblt _156
*                 putchar(n);
_158
 ldd #_obuf
 addd #512
 cmpd _opos
 lbls _159
_160
 ldb 23,s
 ldx _opos
 leax 1,x
 stx _opos
 stb -1,x
 sex
 andb #255
 clra
 jmp _161
_159
 ldd 23,s
 pshs d
 jsr _flsbuf
 leas 2,s
_161
* }
 jmp _157
_156
 leas 25,s
 puls y,u,pc

1 ldd #-163
 jsr _stkcheck
 jmp 2b


* 
* #undef F_Z
* #undef F_S
* #undef F_L
* 
* main() {
 global main
main
 pshs y,u
 jmp 1f
2
*   int a,b;
* 
*   printf("This is a test!");
 leas -4,s
 data
_162 fcb 84,104,105,115,32,105,115,32,97,32,116,101,115,116,33,0
 text
 ldd #_162
 pshs d
 jsr printf
 leas 2,s
*   flush();
 jsr flush
* }
 leas 4,s
 puls y,u,pc

1 ldd #-140
 jsr _stkcheck
 jmp 2b


 bss
 name zap_c
putchar2 common
_obuf rmb 512
 endcom
