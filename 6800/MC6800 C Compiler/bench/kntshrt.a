 text
* #define N 6
* #define NSQ 25
* #define FALSE 0
* #define TRUE 1
* 
* int h[N][N];
* int a[9] = {0,2,1,-1,-2,-2,-1,1,2};
 data
 global a_
a_ fdb 0
 fdb 2
 fdb 1
 fdb -1
 fdb -2
 fdb -2
 fdb -1
 fdb 1
 fdb 2
 text
* int b[9] = {0,1,2,2,1,-1,-2,-2,-1};
 data
 global b_
b_ fdb 0
 fdb 1
 fdb 2
 fdb 2
 fdb 1
 fdb -1
 fdb -2
 fdb -2
 fdb -1
 text
* 
* main() {
 global main
main
 pshs y,u
 jmp 1f
2
*   int i,j,q;
* 
*   for (i=1; i<N; i++)
 leas -6,s
 ldd #1
 std 4,s
_3
 ldd 4,s
 cmpd #6
 lbge _2
*     for (j=1; j<N; j++)
_1
 ldd #1
 std 2,s
_7
 ldd 2,s
 cmpd #6
 lbge _6
*       h[i][j] = 0;
_5
 ldd 4,s
 pshs d
 ldd #12
 jsr ccmult
 ldx #h_
 leax d,x
 tfr x,d
 pshs d
 ldd 4,s
 aslb
 rola
 addd ,s++
 tfr d,x
 clra
 clrb
 std ,x
*   h[1][1] = 1;
_8
 ldd 2,s
 addd #1
 std 2,s
 jmp _7
_6
_4
 ldd 4,s
 addd #1
 std 4,s
 jmp _3
_2
 ldd #1
 std h_+14
*   try(2,1,1,&q);
 leax ,s
 pshs x
 ldd #1
 pshs d
 ldd #1
 pshs d
 ldd #2
 pshs d
 jsr try
 leas 8,s
* }
 leas 6,s
 puls y,u,pc

1 ldd #-148
 jsr _stkcheck
 jmp 2b


* 
* try(i,x,y,q)
* int i,x,y;
* int *q;
* {
 global try
try
 pshs y,u
 jmp 1f
2
*   int k,u,v,q1;
* 
*   k = 0;
 leas -8,s
 clra
 clrb
 std 6,s
*   do {
_11
*     k++;
 ldd 6,s
 addd #1
 std 6,s
*     q1 = FALSE;
 clra
 clrb
 std ,s
*     u = x + a[k];
 ldd 6,s
 aslb
 rola
 ldx #a_
 leax d,x
 ldd ,x
 addd 16,s
 std 4,s
*     v = y + b[k];
 ldd 6,s
 aslb
 rola
 ldx #b_
 leax d,x
 ldd ,x
 addd 18,s
 std 2,s
*     if (u>=1 && u<N && v>=1 && v<N)
*       if (!h[u][v]) {
 ldd 4,s
 cmpd #1
 lblt _13
_16
 ldd 4,s
 cmpd #6
 lbge _13
_15
 ldd 2,s
 cmpd #1
 lblt _13
_14
 ldd 2,s
 cmpd #6
 lbge _13
_12
 ldd 4,s
 pshs d
 ldd #12
 jsr ccmult
 ldx #h_
 leax d,x
 tfr x,d
 pshs d
 ldd 4,s
 aslb
 rola
 addd ,s++
 tfr d,x
 ldd ,x
 lbne _18
_17
*         h[u][v] = i;
 ldd 4,s
 pshs d
 ldd #12
 jsr ccmult
 ldx #h_
 leax d,x
 tfr x,d
 pshs d
 ldd 4,s
 aslb
 rola
 addd ,s++
 tfr d,x
 ldd 14,s
 std ,x
*         if (i<NSQ) {
 ldd 14,s
 cmpd #25
 lbge _20
_19
*           try(i+1, u, v, &q1);
 leax ,s
 pshs x
 ldd 4,s
 pshs d
 ldd 8,s
 pshs d
 ldd 20,s
 addd #1
 pshs d
 jsr try
 leas 8,s
*           if (!q1)
*             h[u][v] = 0;
 ldd ,s
 lbne _22
_21
 ldd 4,s
 pshs d
 ldd #12
 jsr ccmult
 ldx #h_
 leax d,x
 tfr x,d
 pshs d
 ldd 4,s
 aslb
 rola
 addd ,s++
 tfr d,x
 clra
 clrb
 std ,x
*         }
_22
*         else
*           q1 = TRUE;
 jmp _23
_20
 ldd #1
 std ,s
*       }
_23
*   } while (!q1 && k!=8);
_18
_13
_9
 ldd ,s
 lbne _10
_24
 ldd 6,s
 cmpd #8
 lbne _11
_10
*   *q = q1;
 ldd ,s
 std [20,s]
* }
 leas 8,s
 puls y,u,pc

1 ldd #-150
 jsr _stkcheck
 jmp 2b


 bss
 name kntshrt_c
 define
h_ rmb 72
 enddef
