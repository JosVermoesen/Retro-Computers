
 ttl Code generation - 6
 pag

*
* Assignment operators code generation
*

asgp lda moprtr,y get operator
 ldb #61 set default compare type
 stb comtyp (!=)
 cmpa #80 is it pure '='?
 beq asgop
 suba #30 find binary op part
 lbsr binrya
 bne asgopa error?
 rts return error

asgop lbsr asgchk check valid types
 beq asgopr error?
 clr revops no reverse allowed here
 lbsr ldsop load second operand
 lda matlev get current level
 inca
 cmpa xcont store from x?
 lbeq asgx
 cmpa ycont store from y?
 lbeq asgy
asgopa ldx #asgtb point to table
 ldb oppair get pairing type
 aslb
 ldx b,x point to routine
 pshs x
 ldx #op1loc point to op 1
 ldd 3,x get address
 std crdvar
 jsr [0,s++] go do routine
 lbra gtcuru set current type
asgopr rts return error

asgtb fdb asg0
 fdb asg1
 fdb asg2
 fdb asg3
 fdb asg4
 fdb asg5

* assign char = char

asg0

* assign char = int

asg1 pshs x
 lbsr otstb output "stb"
 puls x
 bra gsadr output store address

* assign int = char

asg2 pshs x
 lbsr otclra do char to int conversion
 puls x

* assign int = int

asg3 pshs x
 lbsr otstd output "std"
 puls x
 bra gsadr generate store address

* assign long = long

asg4 rts

* assign fp = fp

asg5 rts


*
* Generate store address
*

gsadr lda 0,x on stack?
 cmpa #STKLOC
 lbne gadr if not, do regular
 lbra ot0spi output "[0,s++]"

*
* assign from x or y
*

asgx lbsr otstx output 'stx'
 bra asgy2

asgy lbsr otsty output 'sty'
asgy2 ldx #op1loc point to op 1
 bsr gsadr gen address
 lbra gtcuru set current type


*
* check assignment operands
*

asgchk lbra pairs


