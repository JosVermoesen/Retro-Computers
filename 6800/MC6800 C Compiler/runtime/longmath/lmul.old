 lib sysdef

* long multiply routine

* local storage

mtrm rmb 1 multiplying term
mcry rmb 1 carry bit
inx0 rmb 1 index for multiplicand
inx1 rmb 1 index for multiplier
ini0 rmb 1 reset value for inx0
temp rmb 2 temp starage cell
mret rmb 2 return address
mrslt rmb 8 result register

* common long multiply

clmul pshs x,y,d
 ldd #$404
 sta inx1
 stb inx0
 stb ini0
 ldx #mrslt
 leay 7,x
 sty temp
 clra
clmul1 sta 0,x+
 cmpx temp
 bls clmul1
 sta mcry
clmul2 lda inx1
 deca
 bmi clmul5
 sta inx1
 leax 12,s
 lda a,x
 sta mtrm
 leax 8,s
clmul3 ldb inx0
 decb
 bmi clmul4
 stb inx0
 ldb b,x
 lda mtrm
 mul
 adda mcry
 pshs cc
 addd 0,-y
 std 0,y
 tfr cc,a
 ora 0,s+
 anda #1
 sta mcry
 bra clmul3
clmul4 lda ini0
 sta inx0
 deca
 leay a,y
 bra clmul2
clmul5 ldd mrslt+6
 std 14,s
 ldd mrslt+4
 std 12,s
 puls d,x,y,pc

* signed long multiply

rsign rmb 1

lmul pshs d
 ldd 2,s
 std mret
 lda 4,s
 eora 8,s
 anda #$80
 sta rsign
 tst 4,s
 bpl lmul2
 ldd #0
 subd 6,s
 std 6,s
 ldd #0
 sbcb 5,s
 sbca 4,s
 std 4,s
lmul2 tst 8,s
 bpl lmul4
 ldd #0
 subd 10,s
 std 10,s
 ldd #0
 sbcb 9,s
 sbca 8,s
 std 8,s
lmul4 puls d
 leas 2,s
 jsr clmul
 leas 4,s
 tst rsign
 bpl lmul6
 pshs d
 ldd #0
 subd 4,s
 std 4,s
 ldd #0
 sbcb 3,s
 sbca 2,s
 std 2,s
 puls d
lmul6 jmp [mret]

* unsigned long multiply

 global ulmul
ulmul pshs d
 ldd 2,s
 std mret
 puls d
 leas 2,s
 jsr clmul
 leas 4,s
 jmp [mret]

* driver

count rmb 2

start ldd #1000
 std count
1 ldd #10
 pshs d
 ldd #0
 pshs d
 ldd #10
 pshs d
 ldd #0
 pshs d
 jsr lmul
  ldd count
 subd #1
 std count
 bne 1b
 sys term
 end start
