
 ttl Code generation - 5
 pag

*
* process relational operators
*

relp lbsr pairs check pairing
 beq relpr error?
 lda moprtr,y get operator
 sta comtyp save type
 lbsr setsgn set sign flag for compare
 lbsr arng arrange opperands
 tst revops are they reversed?
 beq relp2
 lbsr revcon reverse conditional
relp2 lbsr ldfop load first operand
 ldx #reltb point to table
 lbsr dobop do binary operation
 lda MATSIZ,y get next operator
 beq relp8 is it term?
 cmpa #53 is it boolean?
 blo relp4
 cmpa #56
 bls relp8
 cmpa #90 is it '?'
 beq relp8
relp4 lbsr setzoc output zero-one code
relp8 andcc #$fb set true
relpr rts return

reltb fdb rel0
 fdb rel1
 fdb rel2
 fdb rel3
 fdb rel4
 fdb rel5

*
* compare char - char
*

rel0 pshs x
 lbsr otcmpb output "cmpb"
 puls x
 inc unscon make unsigned compare
 lbra gadr generat address field

* compare char - int

rel1 pshs x
 lbsr otclra output "clra"
 puls x
 bra rel3

* compare int - char

rel2 pshs x
 lbsr otcaiz output "cmpa #0"
 lbsr otbne output "bne"
 lbsr nxtlb1 get a new label
 puls x
 pshs d save label
 pshs x
 lbsr outlb output label
 puls x
 bsr rel0 do char-char compare
 puls d reset label
 lbra outlb output it

* compare int - int

rel3 pshs x
 lbsr otcmpd output "cmpd"
 puls x
 lbra gadr

* compare long - long

rel4 rts

* compare fp - fp

rel5 rts


*
* set flag for signed or unsigned compare
*

setsgn clr unscon zero for signed
 lda #UNSND set up bit mask for unsigned
 bita op1cls op 1 unsigned?
 bne setsg2
 bita op2cls op 2 unsigned?
 beq setsg4
setsg2 inc unscon set for unsigned
setsg4 rts return


*
* The following routines are used both by the relationals
* as well as the boolean ops in codgen4.
*

*
* generate true branch
*

gtbra bsr gcbra generate con bra
 ldd tlab get true label
 bne gtbra2 is it set?
 lbsr nxtlb1 get a new label
 std tlab set true label
gtbra2 lbsr outlb output it
 bra dellab process any delayed labels

*
* generate false branch
*

gfbra bsr gncbra generate ! con bra
 ldd flab get false label
 bne gfbra2 is it set?
 lbsr nxtlb1 get new label
 std flab set false label
gfbra2 lbsr outlb output it

*
* process any delayed labels
*

dellab tst dtlab delayed true label?
 beq della2
 clr dtlab clear flag
 bsr gtlab generate true label
della2 tst dflab delayed false label?
 beq della4
 clr dflab clear flag
 bsr gflab generate false label
della4 rts return


*
* generate true label
*

gtlab ldd tlab get true label
 beq gtlab2
 lbsr outlb output it
 ldd #0 clear tlab
 std tlab
gtlab2 rts return

*
* generate false label
*

gflab ldd flab get false label
 beq gflab2
 lbsr outlb output it
 ldd #0 clear flab
 std flab
gflab2 rts return


*
* generate not condition type bra
*

gncbra bsr revcon reverse conditional type
 bra gcbra2

*
* generate condition type branch
*

gcbra lda comtyp get conditional type
gcbra2 suba #60 remove bias
 asla
 tst unscon unsigned compare?
 beq gcbra4
 ldx #ubrtab point to unsigned table
 bra gcbra5
gcbra4 ldx #bratab point to signed table
gcbra5 ldx a,x point to bxx string
 lbra probj output it

bratab fdb xlbeq
 fdb xlbne
 fdb xlble
 fdb xlblt
 fdb xlbge
 fdb xlbgt

ubrtab fdb xlbeq
 fdb xlbne
 fdb xlbls
 fdb xlblo
 fdb xlbhs
 fdb xlbhi


*
* reverse sense of comparison
*

revcon lda comtyp get type
 suba #60 remove bias
 ldx #revtab point to table
 lda a,x get reversed type
 sta comtyp
 rts return

revtab fcb 61,60,65,64,63,62


*
* output 'set zero - one' code
*

setzoc ldd #0 clear temps
 std crdvar
 sta dtlab
 sta dflab
 lda matlev set d contents
 inca
 sta dcont
 lbsr gtbra output true branch
 lbsr gflab
 lbsr otldiz output "ldd #0"
 lbsr otbra output "bra"
 lbsr nxtlb1 get a label
 pshs d
 lbsr outlb output it
 lbsr gtlab generate true label
 lbsr otldio output "ldd #1"
 puls d reset label
 lbra outlb output it


