 text
* #
* 
* /*
* 
* #define F_Z     01      /* leading zeroes */
* #define F_S     02      /* signed */
* #define F_L     04      /* left-justify */
* 
* printf(args) {
 global printf
printf
 pshs y,u
 jmp 1f
2
*         extern fout;
*         register *ap, c;
*         register char *s, *af;
*         int p, f, sfout;
* 
*         ap = &args;
 leas -10,s
 leau 16,s
*         f = *ap;
 ldd ,u
 std 2,s
*         sfout = -1;
 ldd #-1
 std ,s
*         if ((unsigned) f < 20) {
 ldd 2,s
 cmpd #20
 lbhs _1
_2
*                 ++ap;
 leau 2,u
*                 if (f != fout) {
 ldd 2,s
 cmpd fout
 lbeq _3
_4
*                         flush();
 jsr flush
*                         sfout = fout;
 ldd fout
 std ,s
*                         fout = f;
 ldd 2,s
 std fout
*                 }
*         }
_3
*         af = (char *) *ap++;
_1
 leau 2,u
 ldd -2,u
 std 6,s
*         for (;;) {
_7
_5
*                 while ((c = *af++) != '%') {
_9
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
 tfr y,d
 cmpd #37
 lbeq _8
_10
*                         if (!c)
 cmpy #0
 lbne _11
*                                 break;
_12
 jmp _8
*                         putchar(c);
_11
 pshs y
 jsr putchar
 leas 2,s
*                 }
*                 if (c == '\0')
 jmp _9
_8
 cmpy #0
 lbne _13
*                         break;
_14
 jmp _6
*                 c = *af++;
_13
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                 p = 0;
 ldd #0
 std 4,s
*                 f = 0;
 ldd #0
 std 2,s
*                 if (c == '-') {
 cmpy #45
 lbne _15
_16
*                         f |= F_L;
 ldd 2,s
 orb #4
 std 2,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                 }
*                 if (c == '0') {
_15
 cmpy #48
 lbne _17
_18
*                         f |= F_Z;
 ldd 2,s
 orb #1
 std 2,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                 }
*                 while ('0' <= c && c <= '9') {
_17
_20
 cmpy #48
 lblt _19
_22
 cmpy #57
 lbgt _19
_21
*                         p = p * 10 + c - '0';
 ldd 4,s
 pshs d
 ldd #10
 jsr ccmult
 pshs d
 tfr y,d
 addd ,s++
 subd #48
 std 4,s
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                 }
*                 if (c == '.') {
 jmp _20
_19
 cmpy #46
 lbne _23
_24
*                         c = *af++;
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                         while ('0' <= c && c <= '9')
_26
 cmpy #48
 lblt _25
_28
 cmpy #57
 lbgt _25
*                                 c = *af++;
_27
 ldx 6,s
 leax 1,x
 stx 6,s
 ldb -1,x
 sex
 tfr d,y
*                 }
 jmp _26
_25
*                 if (c == '\0')
_23
 cmpy #0
 lbne _29
*                         break;
_30
 jmp _6
*                 switch (c) {
_29
 tfr y,d
 jmp _32
*                 case 'd':
*                         f |= F_S;
_33
 ldd 2,s
 orb #2
 std 2,s
*                 case 'l':
*                 case 'u':
_34
*                         c = 10;
_35
 ldy #10
*                         goto num;
 leax 10,s
 jmp _36
*                 case 'o':
*                         c = 8;
_37
 ldy #8
*                         goto num;
 leax 10,s
 jmp _36
*                 case 'b':
*                         c = 2;
_38
 ldy #2
*                         goto num;
 leax 10,s
 jmp _36
*                 case 'h':
*                 case 'x':
_39
*                         c = 16;
_40
 ldy #16
*             num:        _num(*ap++, c, p, f);
 bra _41
_36
 leas -10,x
_41
 ldd 2,s
 pshs d
 ldd 6,s
 pshs d
 pshs y
 leau 2,u
 ldd -2,u
 pshs d
 jsr _num
 leas 8,s
*                         continue;
 jmp _7
*                 case 'c':
*                         c = *ap++ & 0177;
_42
 leau 2,u
 ldd -2,u
 andb #127
 clra
 tfr d,y
*                         if (f & F_Z)
 ldd 2,s
 andb #1
 clra
 cmpd #0
 lbeq _43
*                                 if (c < ' ' || c == 0177) {
_44
 cmpy #32
 lblt _46
_47
 cmpy #127
 lbne _45
_46
*                                         switch (c) {
 tfr y,d
 jmp _49
*                                         case '\n':
*                                                 putchar('\\');
_50
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 'n';
 ldy #110
*                                                 break;
 jmp _48
*                                         case '\r':
*                                                 putchar('\\');
_51
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 'r';
 ldy #114
*                                                 break;
 jmp _48
*                                         case '\b':
*                                                 putchar('\\');
_52
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 'b';
 ldy #98
*                                                 break;
 jmp _48
*                                         case '\f':
*                                                 putchar('\\');
_53
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 'f';
 ldy #102
*                                                 break;
 jmp _48
*                                         case '\t':
*                                                 putchar('\\');
_54
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 't';
 ldy #116
*                                                 break;
 jmp _48
*                                         case 033:
*                                                 putchar('\\');
_55
 ldd #92
 pshs d
 jsr putchar
 leas 2,s
*                                                 c = 'e';
 ldy #101
*                                                 break;
 jmp _48
*                                         default:
_56
*                                                 putchar('^');
 ldd #94
 pshs d
 jsr putchar
 leas 2,s
*                                                 c ^= 0100;
 tfr y,d
 eorb #64
 tfr d,y
*                                         }
*                                         --p;
 jmp _48
_49
 cmpd #13
 lbeq _50
 cmpd #13
 lbeq _51
 cmpd #8
 lbeq _52
 cmpd #12
 lbeq _53
 cmpd #9
 lbeq _54
 cmpd #27
 lbeq _55
 jmp _56
_48
 ldd 4,s
 addd #-1
 std 4,s
*                                 }
*                         putchar(c);
_45
_43
 pshs y
 jsr putchar
 leas 2,s
*                         --p;
 ldd 4,s
 addd #-1
 std 4,s
*                         while (--p >= 0)
_58
 ldd 4,s
 addd #-1
 std 4,s
 lblt _57
*                                 putchar(' ');
_59
 ldd #32
 pshs d
 jsr putchar
 leas 2,s
*                         continue;
 jmp _58
_57
 jmp _7
*                 case 's':
*                         s = (char *) *ap++;
_60
 leau 2,u
 ldd -2,u
 std 8,s
*                         while (*s) {
_62
 ldb [8,s]
 lbeq _61
_63
*                                 c = *s++ & 0177;
 ldx 8,s
 leax 1,x
 stx 8,s
 ldb -1,x
 sex
 andb #127
 clra
 tfr d,y
*                                 if (f & F_Z)
 ldd 2,s
 andb #1
 clra
 cmpd #0
 lbeq _64
*                                         if (c < ' ' || c == 0177) {
_65
 cmpy #32
 lblt _67
_68
 cmpy #127
 lbne _66
_67
*                                                 putchar('^');
 ldd #94
 pshs d
 jsr putchar
 leas 2,s
*                                                 if (p && --p <= 0)
 ldd 4,s
 lbeq _69
_71
 ldd 4,s
 addd #-1
 std 4,s
 lbgt _69
*                                                         break;
_70
 jmp _61
*                                                 c ^= 0100;
_69
 tfr y,d
 eorb #64
 tfr d,y
*                                         }
*                                 putchar(c);
_66
_64
 pshs y
 jsr putchar
 leas 2,s
*                                 if (p && --p <= 0)
 ldd 4,s
 lbeq _72
_74
 ldd 4,s
 addd #-1
 std 4,s
 lbgt _72
*                                         break;
_73
 jmp _61
*                         }
_72
*                         while (--p >= 0)
 jmp _62
_61
_76
 ldd 4,s
 addd #-1
 std 4,s
 lblt _75
*                                 putchar(' ');
_77
 ldd #32
 pshs d
 jsr putchar
 leas 2,s
*                         continue;
 jmp _76
_75
 jmp _7
*                 }
*                 putchar(c);
_32
 cmpd #100
 lbeq _33
 cmpd #108
 lbeq _34
 cmpd #117
 lbeq _35
 cmpd #111
 lbeq _37
 cmpd #98
 lbeq _38
 cmpd #104
 lbeq _39
 cmpd #120
 lbeq _40
 cmpd #99
 lbeq _42
 cmpd #115
 lbeq _60
_31
 pshs y
 jsr putchar
 leas 2,s
*         }
*         if (sfout >= 0) {
 jmp _7
_6
 ldd ,s
 lblt _78
_79
*                 flush();
 jsr flush
*                 fout = sfout;
 ldd ,s
 std fout
*         }
* }
_78
 leas 10,s
 puls y,u,pc

1 ldd #-152
 jsr _stkcheck
 jmp 2b


* 
* static _num(an, ab, ap, af) {
_num
 pshs y,u
 jmp 1f
2
*         register unsigned n, b;
*         register char *p;
*         int neg;
*         char buf[17];
* 
*         p = &buf[17];
 leas -21,s
 leax ,s
 tfr x,d
 addd #17
 std 19,s
*         n = an;
 ldu 27,s
*         b = ab;
 ldy 29,s
*         neg = 0;
 ldd #0
 std 17,s
*         if ((af & F_S) && an < 0) {
 ldd 33,s
 andb #2
 clra
 cmpd #0
 lbeq _80
_82
 ldd 27,s
 lbge _80
_81
*                 neg++;
 ldd 17,s
 addd #1
 std 17,s
*                 n = -n;
 tfr u,d
 nega
 negb
 sbca #0
 tfr d,u
*                 --ap;
 ldd 31,s
 addd #-1
 std 31,s
*         }
*         *--p = '\0';
_80
 ldd #0
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         do {
_85
*                 *--p = "0123456789ABCDEF"[n % b];
 data
_86
 fcb 48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0
 text
 ldd #_86
 pshs d
 pshs u
 tfr y,d
 jsr ccdiv
 exg d,x
 addd ,s++
 tfr d,x
 ldb ,x
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*                 --ap;
 ldd 31,s
 addd #-1
 std 31,s
*         } while (n /= b);
_83
 pshs u
 tfr y,d
 jsr ccdiv
 tfr d,u
 lbne _85
_84
*         n = ' ';
 ldu #32
*         if ((af & (F_Z | F_L)) == F_Z)
 ldd 33,s
 andb #5
 clra
 cmpd #1
 lbne _87
*                 n = '0';
_88
 ldu #48
*         else if (neg) {
 jmp _89
_87
 ldd 17,s
 lbeq _90
_91
*                 *--p = '-';
 ldd #45
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*                 neg = 0;
 ldd #0
 std 17,s
*         }
*         if ((af & F_L) == 0)
_90
_89
 ldd 33,s
 andb #4
 clra
 cmpd #0
 lbne _92
*                 while (--ap >= 0)
_93
_95
 ldd 31,s
 addd #-1
 std 31,s
 lblt _94
*                         *--p = n;
_96
 tfr u,d
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         if (neg)
 jmp _95
_94
_92
 ldd 17,s
 lbeq _97
*                 *--p = '-';
_98
 ldd #45
 ldx 19,s
 leax -1,x
 stx 19,s
 stb ,x
*         while (*p)
_97
_100
 ldb [19,s]
 lbeq _99
*                 putchar(*p++);
_101
 ldx 19,s
 leax 1,x
 stx 19,s
 ldb -1,x
 sex
 pshs d
 jsr putchar
 leas 2,s
*         while (--ap >= 0)
 jmp _100
_99
_103
 ldd 31,s
 addd #-1
 std 31,s
 lblt _102
*                 putchar(n);
_104
 pshs u
 jsr putchar
 leas 2,s
* }
 jmp _103
_102
 leas 21,s
 puls y,u,pc

1 ldd #-159
 jsr _stkcheck
 jmp 2b


* 
* #undef F_Z
* #undef F_S
* #undef F_L
 bss
 name printf_c
 text
