                        ; ------------------------------------------------------------------------------
                        ; XRAMTEST.ASM - Extended RAM Test
                        ; RETRO-EP4CE15 card has (2) 8KB windows with 64 banks in each window
                        ; Tests all banks in both windows
                        ; Prints:
                        ;	S0++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        ;	1+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++D
                        ;	S = start
                        ;	0/1 = block number
                        ;	+ = block good
                        ;	X = bad
                        ;	D = done
                        ; Hit a key at end to avoid resetting the Serial port until done
                        ; Jumps to SmithBUG when done
                        ; 
                        ; Assembled using A68 assembler
                        ; 	"..\..\A68 6800 Assembler\a68.exe" XRAMTEST.ASM -l XRAMTEST.LST -s XRAMTEST.SRE
                        ;
                        ; Memory Map
                        ;	0xA000-0xBFFF - 512KB External SRAM
                        ;		8KB Windows, 64 frames
                        ;		MMU1 provides additional address bits
                        ;		MMU1 initialized to 0
                        ;	0xC000-0xDFFF - 512KB External SRAM
                        ;		8KB Window, 64 frames
                        ;		MMU2 provides additional address bits
                        ;		MMU2 initialized to 0
                        ;	0xFC18-0xFC19 - VDU  (serSelect J3 JUMPER REMOVED)
                        ;	0xFC28-0xFC19 - ACIA (serSelect J3 JUMPER INSTALLED)
                        ;	0xFC30 - MMU0 Latch 6-bits
                        ;	0xFC31 - MMU1 Latch 6-bits
                        ; ------------------------------------------------------------------------------
                        
                        ; I/O
   fc18                 ACIACS:		EQU	$FC18
   fc19                 ACIADA:		EQU	$FC19
   fc30                 MMUREG0:	EQU $FC30
   fc31                 MMUREG1:	EQU $FC31
                        ; MEMORY RANGES
   a000                 XRAMST0:	EQU	$A000
   bfff                 XRAMEND0:	EQU	$BFFF
   c000                 XRAMST1:	EQU	$C000
   dfff                 XRAMEND1:	EQU	$DFFF
   003f                 TOPBANKNUM:	EQU	$3F
                        ; SmithBUG re-start address
   f01f                 SMITHBUGSTART:	EQU $f01f
                        
                        ; The variables memory
   0000                 	ORG	$0
   0000                 STARTADR:	RMB	2
   0002                 ENDADR:		RMB	2
   0004                 BANKNUM:	RMB 1
   0005                 BANK0VAL:	RMB	1
   0006                 BANK1VAL:	RMB	1
                        
   0100                 	ORG	$100		; Program starts here
   0100   bd 01 c0      	jsr	CRLF
   0103   86 53         	lda	a	#'S'	; Start test
   0105   bd 01 dc      	jsr OUTEEE
   0108   86 30         	lda	a	#'0'	; Print Bank Number
   010a   bd 01 dc      	jsr OUTEEE
                        
                        ; Inits
   010d   86 00         	lda	a #0		; init bank number, bank values
   010f   97 04         	sta a BANKNUM
   0111   97 05         	sta a BANK0VAL
                        ; loop through the first bank
   0113                 LOOP_BNK0:
   0113   bd 01 7b      	jsr	SETENDS
   0116   bd 01 a1      	jsr	testRAM		; Do RAM test
   0119   81 00         	cmp a #0
   011b   26 4a         	bne	GOTERR
   011d   86 2b         	lda a #'+'
   011f   bd 01 dc      	jsr	OUTEEE
   0122   96 05         	lda a BANK0VAL
   0124   4c            	inc a
   0125   97 05         	sta a BANK0VAL
   0127   81 3f         	cmp a #TOPBANKNUM
   0129   2f e8         	ble	LOOP_BNK0
                        ; Init for 2nd bank
   012b   bd 01 c0      	jsr	CRLF
   012e   86 31         	lda	a	#'1'	; Print Bank Number
   0130   bd 01 dc      	jsr OUTEEE
   0133   86 01         	lda	a #1		; init bank number, bank values
   0135   97 04         	sta a BANKNUM
   0137   97 06         	sta a BANK1VAL
                        ; loop through the second bank
   0139                 LOOP_BNK1:
   0139   bd 01 7b      	jsr	SETENDS
   013c   bd 01 a1      	jsr	testRAM		; Do RAM test
   013f   81 00         	cmp a #0
   0141   26 24         	bne	GOTERR
   0143   86 2b         	lda a #'+'
   0145   bd 01 dc      	jsr	OUTEEE
   0148   96 06         	lda a BANK1VAL
   014a   4c            	inc a
   014b   97 06         	sta a BANK1VAL
   014d   81 3f         	cmp a #TOPBANKNUM
   014f   2f e8         	ble	LOOP_BNK1
                        	
   0151                 DONETEST:
   0151   86 00         	lda a #0
   0153   b7 fc 30      	sta a MMUREG0		; Reset back bank
   0156   b7 fc 31      	sta a MMUREG1
   0159   86 44         	lda	a	#'D'		; PASSED TEST
   015b   bd 01 dc      	jsr OUTEEE
   015e   bd 01 c0      	jsr	CRLF
   0161   bd 01 cb      	jsr	INEEE			; Hit a char to end
   0164   7e f0 1f      	JMP	SMITHBUGSTART	; Restart SmithBUG
                        
   0167                 GOTERR:
   0167   86 00         	lda a #0
   0169   b7 fc 30      	sta a MMUREG0		; Reset back bank
   016c   b7 fc 31      	sta a MMUREG1
   016f   86 58         	lda	a	#'X'	; Error
   0171   bd 01 dc      	jsr OUTEEE
   0174   bd 01 c0      	jsr	CRLF
   0177   bd 01 cb      	jsr	INEEE			; Hit a char to end
   017a   39            	rts
                        
                        ; Set up the RAM variables for the test boundaries
   017b                 SETENDS:
   017b   96 04         	lda	a BANKNUM
   017d   81 00         	cmp	a #0
   017f   26 10         	bne	BANK1
   0181   96 05         	lda	a BANK0VAL	; BANK0 SETUP
   0183   b7 fc 30      	sta	a MMUREG0
   0186   ce a0 00      	ldx	#XRAMST0	; set start ADDRESS
   0189   df 00         	stx	STARTADR
   018b   ce bf ff      	ldx	#XRAMEND0
   018e   df 02         	stx	ENDADR
   0190   39            	rts
   0191                 BANK1:				; BANK1 SETUP
   0191   96 06         	lda	a BANK1VAL
   0193   b7 fc 31      	sta	a MMUREG1
   0196   ce c0 00      	ldx	#XRAMST1	; set start number
   0199   df 00         	stx	STARTADR
   019b   ce df ff      	ldx	#XRAMEND1
   019e   df 02         	stx	ENDADR
   01a0   39            	rts
                        
                        ; Do the RAM Test
                        ; BANKNUM = 0,1
                        ; STARTADR = START ADDRESS OF THE TEST
                        ; ENDADR - END ADDRESS OF THE TEST
                        ; Returns
                        ;	0 = Pass
                        ;	1 - False
                        
   01a1                 testRAM:
   01a1   de 00         	ldx	STARTADR
   01a3   86 00         	lda a  #0
   01a5                 FILLOOP:
   01a5   a7 00         	sta	a x
   01a7   08            	inx
   01a8   4c            	inc a
   01a9   9c 02         	cpx	ENDADR
   01ab   2f f8         	ble	FILLOOP
                        ; Check
   01ad   de 00         	ldx	STARTADR
   01af   86 00         	lda a #0
   01b1                 GOODRD:
   01b1   a1 00         	cmp a x
   01b3   26 08         	bne	BADREAD
   01b5                 OKREAD:
   01b5   08            	inx
   01b6   4c            	inc a
   01b7   9c 02         	cpx	ENDADR
   01b9   2f f6         	ble	GOODRD
   01bb   4f            	clr a			; Finished check
   01bc   39            	rts
   01bd                 BADREAD:
   01bd   86 01         	lda a #1		; Bad
   01bf   39            	rts
                        
   01c0                 CRLF:
   01c0   86 0a         	lda	a #$0a
   01c2   bd 01 dc      	jsr	OUTEEE
   01c5   86 0d         	lda	a #$0d
   01c7   bd 01 dc      	jsr	OUTEEE
   01ca   39            	rts
                        
   01cb   01            INEEE:	NOP
   01cc   b6 fc 18      IN1	LDA A	ACIACS
   01cf   47            	ASRA
   01d0   24 fa         	BCC	IN1	;RECEIVE NOT READY
   01d2   b6 fc 19      	LDA A	ACIADA	;INPUT CHARACTER
   01d5   84 7f         	ANDA	#$7F	;RESET PARITY BIT
   01d7   81 7f         	CMPA	#$7F
   01d9   27 f1         	BEQ	IN1	;IF RUBOUT, GET NEXT CHAR
   01db   39            	RTS
                        ;
                        ;	OUTPUT ONE CHAR IN REG A
                        ;
   01dc   36            OUTEEE:	PSH	A
   01dd   b6 fc 18      OUTEEE1 LDA A	ACIACS
   01e0   47            	ASR A
   01e1   47            	ASR A
   01e2   24 f9         	BCC	OUTEEE1
   01e4   32            	PUL A
   01e5   b7 fc 19      	STA A	ACIADA
   01e8   39            	RTS
                        ;
                        
   01e9                 	END
fc18  ACIACS        fc19  ACIADA        01bd  BADREAD       0005  BANK0VAL  
0191  BANK1         0006  BANK1VAL      0004  BANKNUM       01c0  CRLF      
0151  DONETEST      0002  ENDADR        01a5  FILLOOP       01b1  GOODRD    
0167  GOTERR        01cc  IN1           01cb  INEEE         0113  LOOP_BNK0 
0139  LOOP_BNK1     fc30  MMUREG0       fc31  MMUREG1       01b5  OKREAD    
01dc  OUTEEE        01dd  OUTEEE1       017b  SETENDS       f01f  SMITHBUGSTART
0000  STARTADR      003f  TOPBANKNUM    bfff  XRAMEND0      dfff  XRAMEND1  
a000  XRAMST0       c000  XRAMST1       01a1  testRAM       
