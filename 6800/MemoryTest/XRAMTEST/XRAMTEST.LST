                        ; ------------------------------------------------------------------------------
                        ; XRAMTEST.ASM - Extended RAM Test
                        ; RETRO-EP4CE15 card has (2) 8KB windows with 64 banks in each window
                        ; Tests both banks in both windows
                        ; Prints:
                        ; S0++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        ; 1+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++D
                        ; S = start
                        ; 0/1 = block numbers
                        ; + = block good
                        ; D - done 
                        ; 
                        ; Assembled using A68 assembler
                        ; "..\..\A68 6800 Assembler\a68.exe" XRAMTEST.ASM -l XRAMTEST.LST -s XRAMTEST.SRE
                        ;
                        ; Memory Map
                        ;	0xA000-0xBFFF - 512KB External SRAM
                        ;		8KB Windows, 64 frames
                        ;		MMU1 provides additional address bits
                        ;		MMU1 initialized to 0
                        ;	0xC000-0xDFFF - 512KB External SRAM
                        ;		8KB Window, 64 frames
                        ;		MMU2 provides additional address bits
                        ;		MMU2 initialized to 0
                        ;	0xFC18-0xFC19 - VDU (serSelect J3 JUMPER REMOVED)
                        ;	0xFC28-0xFC19 - ACIA (serSelect J3 JUMPER INSTALLED)
                        ;	0xFC30 - MMU1 Latch 7-bits
                        ;	0xFC31 - MMU2 Latch 7-bits
                        ; ------------------------------------------------------------------------------
                        
                        ; I/O
   fc18                 ACIACS:		EQU	$FC18
   fc19                 ACIADA:		EQU	$FC19
   fc30                 MMUREG0:	EQU $FC30
   fc31                 MMUREG1:	EQU $FC31
                        ; MEMORY RANGES
   a000                 XRAMST0:	EQU	$A000
   bfff                 XRAMEND0:	EQU	$BFFF
   c000                 XRAMST1:	EQU	$C000
   dfff                 XRAMEND1:	EQU	$DFFF
   003f                 TOPBANKNUM:	EQU	$3F
                        ; 
   f01f                 SMITHBUGSTART:	EQU $f01f
   0000                 	ORG	$0
   0000                 STARTADR:	RMB	2
   0002                 ENDADR:		RMB	2
   0004                 BANKNUM:	RMB 1
   0005                 BANK0VAL:	RMB	1
   0006                 BANK1VAL:	RMB	1
                        
   0100                 	ORG	$100
                        ; Print out space S
   0100   bd 01 a7      	jsr	CRLF
   0103   86 53         	lda	a	#'S'	; Start test
   0105   bd 01 c3      	jsr OUTEEE
   0108   86 30         	lda	a	#'0'	; Start test
   010a   bd 01 c3      	jsr OUTEEE
                        
                        ; Inits
   010d   86 00         	lda	a #0		; init bank number, bank values
   010f   97 04         	sta a BANKNUM
   0111   97 05         	sta a BANK0VAL
                        ; loop through the banks
   0113                 LOOP_BNK0:
   0113   bd 01 62      	jsr	SETENDS
   0116   bd 01 88      	jsr	testRAM		; Do RAM test
   0119   81 00         	cmp a #0
   011b   26 3f         	bne	GOTERR
   011d   86 2b         	lda a #'+'
   011f   bd 01 c3      	jsr	OUTEEE
   0122   96 05         	lda a BANK0VAL
   0124   4c            	inc a
   0125   97 05         	sta a BANK0VAL
   0127   81 3f         	cmp a #TOPBANKNUM
   0129   2f e8         	ble	LOOP_BNK0
                        	
   012b   bd 01 a7      	jsr	CRLF
   012e   86 31         	lda	a	#'1'	; Start test
   0130   bd 01 c3      	jsr OUTEEE
   0133   86 01         	lda	a #1		; init bank number, bank values
   0135   97 04         	sta a BANKNUM
   0137   97 06         	sta a BANK1VAL
                        ; loop through the banks
   0139                 LOOP_BNK1:
   0139   bd 01 62      	jsr	SETENDS
   013c   bd 01 88      	jsr	testRAM		; Do RAM test
   013f   81 00         	cmp a #0
   0141   26 19         	bne	GOTERR
   0143   86 2b         	lda a #'+'
   0145   bd 01 c3      	jsr	OUTEEE
   0148   96 06         	lda a BANK1VAL
   014a   4c            	inc a
   014b   97 06         	sta a BANK1VAL
   014d   81 3f         	cmp a #TOPBANKNUM
   014f   2f e8         	ble	LOOP_BNK1
                        	
   0151                 DONETEST:
   0151   86 44         	lda	a	#'D'		; PASSED TEST
   0153   bd 01 c3      	jsr OUTEEE
   0156   bd 01 b2      	jsr	INEEE			; Hit a char to end
   0159   7e f0 1f      	JMP	SMITHBUGSTART	; Restart SmithBUG
                        
   015c                 GOTERR:
   015c   86 58         	lda	a	#'X'	; Error
   015e   bd 01 c3      	jsr OUTEEE
   0161   39            	rts
                        
   0162                 SETENDS:
   0162   96 04         	lda	a BANKNUM
   0164   81 00         	cmp	a #0
   0166   26 10         	bne	BANK1
   0168   96 05         	lda	a BANK0VAL	; BANK0 SETUP
   016a   b7 fc 30      	sta	a MMUREG0
   016d   ce a0 00      	ldx	#XRAMST0	; set start ADDRESS
   0170   df 00         	stx	STARTADR
   0172   ce bf ff      	ldx	#XRAMEND0
   0175   df 02         	stx	ENDADR
   0177   39            	rts
   0178                 BANK1:				; BANK1 SETUP
   0178   96 06         	lda	a BANK1VAL
   017a   b7 fc 31      	sta	a MMUREG1
   017d   ce c0 00      	ldx	#XRAMST1	; set start number
   0180   df 00         	stx	STARTADR
   0182   ce df ff      	ldx	#XRAMEND1
   0185   df 02         	stx	ENDADR
   0187   39            	rts
                        
                        ; Do the RAM Test
                        ; BANKNUM = 0,1
                        ; STARTADR = START ADDRESS OF THE TEST
                        ; ENDADR - END ADDRESS OF THE TEST
                        ; Returns
                        ;	0 = Pass
                        ;	1 - False
                        
   0188                 testRAM:
   0188   de 00         	ldx	STARTADR
   018a   86 00         	lda a  #0
   018c                 FILLOOP:
   018c   a7 00         	sta	a x
   018e   08            	inx
   018f   4c            	inc a
   0190   9c 02         	cpx	ENDADR
   0192   2f f8         	ble	FILLOOP
                        ; Check
   0194   de 00         	ldx	STARTADR
   0196   86 00         	lda a #0
   0198                 GOODRD:
   0198   a1 00         	cmp a x
   019a   26 08         	bne	BADREAD
   019c                 OKREAD:
   019c   08            	inx
   019d   4c            	inc a
   019e   9c 02         	cpx	ENDADR
   01a0   2f f6         	ble	GOODRD
   01a2   4f            	clr a			; Finished check
   01a3   39            	rts
   01a4                 BADREAD:
   01a4   86 01         	lda a #1		; Bad
   01a6   39            	rts
                        
   01a7                 CRLF:
   01a7   86 0a         	lda	a #$0a
   01a9   bd 01 c3      	jsr	OUTEEE
   01ac   86 0d         	lda	a #$0d
   01ae   bd 01 c3      	jsr	OUTEEE
   01b1   39            	rts
                        
   01b2   01            INEEE:	NOP
   01b3   b6 fc 18      IN1	LDA A	ACIACS
   01b6   47            	ASRA
   01b7   24 fa         	BCC	IN1	;RECEIVE NOT READY
   01b9   b6 fc 19      	LDA A	ACIADA	;INPUT CHARACTER
   01bc   84 7f         	ANDA	#$7F	;RESET PARITY BIT
   01be   81 7f         	CMPA	#$7F
   01c0   27 f1         	BEQ	IN1	;IF RUBOUT, GET NEXT CHAR
   01c2   39            	RTS
                        ;
                        ;	OUTPUT ONE CHAR IN REG A
                        ;
   01c3   36            OUTEEE:	PSH	A
   01c4   b6 fc 18      OUTEEE1 LDA A	ACIACS
   01c7   47            	ASR A
   01c8   47            	ASR A
   01c9   24 f9         	BCC	OUTEEE1
   01cb   32            	PUL A
   01cc   b7 fc 19      	STA A	ACIADA
   01cf   39            	RTS
                        ;
                        
   01d0                 	END
fc18  ACIACS        fc19  ACIADA        01a4  BADREAD       0005  BANK0VAL  
0178  BANK1         0006  BANK1VAL      0004  BANKNUM       01a7  CRLF      
0151  DONETEST      0002  ENDADR        018c  FILLOOP       0198  GOODRD    
015c  GOTERR        01b3  IN1           01b2  INEEE         0113  LOOP_BNK0 
0139  LOOP_BNK1     fc30  MMUREG0       fc31  MMUREG1       019c  OKREAD    
01c3  OUTEEE        01c4  OUTEEE1       0162  SETENDS       f01f  SMITHBUGSTART
0000  STARTADR      003f  TOPBANKNUM    bfff  XRAMEND0      dfff  XRAMEND1  
a000  XRAMST0       c000  XRAMST1       0188  testRAM       
