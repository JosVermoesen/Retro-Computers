
;****** TAPE FILE ASSEMBLER SOURCE SAMPLE **********************************************

headerflag:     equ     0
dataflag:       equ     $ff

tCLEAR          equ     $FD                     ; token CLEAR
tLOAD           equ     $EF                     ; token LOAD
tCODE           equ     $AF                     ; token CODE
tPRINT          equ     $F5                     ; token PRINT
tUSR            equ     $C0                     ; token USR

#target         tap

;------ PROGRAM HEADER -----------------------------------------------------------------
#code           0,17,headerflag
                defb    0                       ; program
                defm    "testloader"            ; make sure these are 10 bytes!
                defw    programsize             ; length of basic program and variables
                defw    10                      ; line number for auto start
                defw    programsize             ; length of basic program without variables


;------ PROGRAM DATA -------------------------------------------------------------------
#code           0,$100,dataflag                 ; size is truncated as required

; 10 CLEAR 24000
                defb    0,10                    ; line number
                defb    end10-($+1)             ; line length
                defb    0                       ; statement number
                defb    tCLEAR                  ; token CLEAR
                defm    '24000',$0e0000c05d00   ; number 24000, ascii and internal format
end10:          defb    $0d                     ; line end marker

; 20 LOAD "" CODE 24000         
                defb    0,20                    ; line number
                defb    end20-($+1)             ; line length
                defb    0                       ; statement number
                defb    tLOAD,'"','"',tCODE     ; token LOAD, 2 quotes, token CODE
                defm    '24000',$0e0000c05d00   ; number 24000, ascii and internal format
end20:          defb    $0d                     ; line end marker

; 30 PRINT USR 24000
                defb    0,30                    ; line number
                defb    end30-($+1)             ; line length
                defb    0                       ; statement number
                defb    tPRINT,tUSR             ; token PRINT, token USR
                defm    '24000',$0e0000c05d00   ; number 24000, ascii and internal format
end30:          defb    $0d                     ; line end marker
programsize     equ     $


;------ CODE HEADER -------------------------------------------------------------------
#code           0,17,headerflag

                defb    3                       ; code
                defm    "samplecode"            ; make sure these are 10 bytes!
                defw    codeend-24000           ; length of data block
                defw    24000                   ; original position
                defw    0                       ; unused


;------ CODE DATA ---------------------------------------------------------------------
#code           24000,40000,dataflag

                ret                             ; insert your machine code here
                defs    15,$E5

codeend:
#end
;****** END OF CODE SAMPLE *************************************************************
