zcc - Frontend for the z88dk Cross-C Compiler - v13913-9abd768-20190119

Usage: zcc +[target] {options} {files}

Options:

-z80-verb             Make the assembler more verbose
-cleanup              (default) Cleanup temporary files
-no-cleanup           Don't cleanup temporary files
-preserve             Don't remove zcc_opt.def at start of run
-create-app           Run appmake on the resulting binary to create emulator usable file
-specs                Print out compiler specs
-compiler             Set the compiler type from the command line (sccz80, sdcc)
-mz80-zxn             Target the zx next z80 cpu
-mz180                Target the z180 cpu
-mr2k                 Target the Rabbit 2000 cpu
-mr3k                 Target the Rabbit 3000 cpu
-crt0                 Override the crt0 assembler file to use
-startuplib           Override STARTUPLIB - compiler base support routines
--no-crt              Link without crt0 file
-pragma-redirect      Redirect a function
-pragma-define        Define the option in zcc_opt.def
-pragma-output        Define the option in zcc_opt.def (same as above)
-pragma-export        Define the option in zcc_opt.def and export as public
-pragma-need          NEED the option in zcc_opt.def
-pragma-bytes         Dump a string of bytes zcc_opt.def
-pragma-include       Process include file containing pragmas
-alias                Define a command line alias
-subtype              Set the target subtype
-clib                 Set the target clib type
-startupoffset        Startup offset value (internal)
-startup              Set the startup type
-zorg                 Set the origin (only certain targets)
-nostdlib             If set ignore INCPATH, STARTUPLIB
-Cm                   Add an option to m4
-Cp                   Add an option to the preprocessor
-Cc                   Add an option to sccz80
-Cg                   Add an option to clang
-Cs                   Add an option to sdcc
-Ca                   Add an option to the assembler
-Cl                   Add an option to the linker
-Co                   Add an option to llvm-opt
-Cv                   Add an option to llvm-cbe
-Cz                   Add an option to appmake
-m4                   Stop after processing m4 files
-clang                Stop after translating .c files to llvm ir
-llvm                 Stop after llvm-cbe generates new .cbe.c files
-E                    Stop after preprocessing files
-R                    Generate relocatable code (deprecated)
--reloc-info          Generate binary file relocation information
-D                    Define a preprocessor option
-U                    Undefine a preprocessor option
-I                    Add an include directory for the preprocessor
-iquote               Add a quoted include path for the preprocessor
-isystem              Add a system include path for the preprocessor
-L                    Add a library search path
-l                    Add a library
-O                    Set the peephole optimiser setting for copt
-SO                   Set the peephole optimiser setting for sdcc-peephole
-h                    Display this text
-v                    Output all commands that are run (-vn suppresses)
-bn                   Set the output file for the linker stage
-vn                   Run the compile stages silently
-c                    Stop after compiling .c .s .asm files to .o files
-a                    Stop after compiling .c .s files to .asm files
-S                    Stop after compiling .c .s files to .asm files
--lstcwd              Paths in .lst files are relative to the current working dir
-x                    Make a library out of source files
--c-code-in-asm       Add C code to .asm files
--opt-code-size       Optimize for code size (sdcc only)
--opt-code-speed      Optimize for code speed (sccz80 only)
-custom-copt-rules    Custom user copy rules
-zopt                 Enable llvm-optimizer (clang only)
-m                    Generate an output map of the final executable
-g                    Generate a global defc file of the final executable (-g, -gp, -gpf filename)
-s                    Generate a symbol map of the final executable
--list                Generate list files
-o                    Set the output files
-set-r2l-by-default   (sccz80) Use r2l calling convention by default

Argument Aliases:

--generic-console    -pragma-redirect:fputc_cons=fputc_cons_generic
--hardware-keyboard  -pragma-redirect:fgetc_cons=fgetc_cons_inkey