= LB-Z80-01 =

<img src="http://land-boards.com/blwiki/images/9/9c/LB-Z80_P1090715-720px.jpg"></img>

* [http://land-boards.com/blwiki/index.php?title=LB-Z80-01#ACIA_Loopback_Test LB-Z80-01 Wiki Page]

== Features ==

* Z80 CPU
* Oscillator 8 MHz nominal on card
* Reset switch/power monitor
* Address decoder PLD drives RAM/ROM/IO chip selects
* 100x50mm card

=== Memory Map ===

* 0x0000-0x1FFF 8KB ROM
*  32KB or 56KB SRAM
** 0x8000-0xFFFF Using [[LB-MEM-02]] has 32 KB SRAM
** 0x2000-0xFFFF Using [[LB-MEM-03]] has 128KB or 512 KB of SRAM so 56 KB can be available
* I/O
** 0x00-0x7F - Free
** 0x80-0x81 - Serial port (ACIA)

== Software ==

=== Toolchain ===

* TASM.EXE - Telemark Assembler
** [https://www.cpcalive.com/docs/TASMMAN.HTM The Telemark Assembler (TASM) User's Manual]
** '''The version of TASM in Grant's build zip file doesn't run under Win 11'''
*** [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/NASCOM_BASIC TASM version that runs on Win 11]
** TASM80.TAB
*** [Probably need] [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/NASCOM_BASIC the updated TASM80.TAB to run on Win 11]

=== ACIA Loopback Test Code ===

* [https://github.com/douggilliland/Retro-Computers/blob/master/Z80/LB-Z80/AciaTest/AciaTest.asm AciaTest.asm] - Source code
* Type a character, get it back
** 115,200 baud, 1 stop bit, no parity
* Works

=== String Test Code ===

* [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/StringTest StringTest.asm] - Source code
* String write code
* Includes loopback code
* Works

=== String Read/Interpreter Code ===

* [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/ReadStringTest ReadStringTest.asm] - Source code
* Adds a string read function
* Adds an interpreter skeleton
* Works

=== NASCOM 2 BASIC ===

* Microsoft BASIC 4.7 modified to remove all hardware-specific code
** Use [http://searle.x10host.com/z80/SimpleZ80_32K.html Grant Searle's 32KB SRAM version] if the [[LB-MEM-02]] card is used
** Use [http://searle.x10host.com/z80/SimpleZ80.html Grant's 56KB version] if the [[LB-MEM-03]] card is used
* Needed to make some minor changes to get the code to run
* [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/NASCOM_BASIC Code Repo]
* Works

[[FILE:NASCOM_BOOT.PNG]]

==== Short Test Program ====

<pre>
10 I=0
20 PRINTI:I=I+1:GOTO 20

</pre>

==== Build Details ====

* TASM assembler (see above)
* S Record and Hex file manipulation
** [https://carta.tech/man-pages/man1/srec_examples.1.html Examples of srec_cat utility]
** [https://srecord.sourceforge.net/man/man1/srec_cat.1.html srec_cat man page]
* Adds srec_cat to combine files into one Intel Hex file
** Combine [https://github.com/douggilliland/Retro-Computers/blob/master/Z80/LB-Z80/NASCOM_BASIC/INT32K.HEX int32k.hex] and [https://github.com/douggilliland/Retro-Computers/blob/master/Z80/LB-Z80/NASCOM_BASIC/BAS32K.HEX BAS32K.HEX] into [https://github.com/douggilliland/Retro-Computers/blob/master/Z80/LB-Z80/NASCOM_BASIC/rom32.hex rom32.hex] using srec-cat
** Command line
*** srec_cat.exe int32k.hex -Intel BAS32K.HEX -Intel -fill 0xff 0x0144 0x014f -o rom32.hex -Intel
* _ASSEMBLE.BAT - double-click in Windows to run the assembly if needed

==== NASCOM BASIC - Code Repository ====

* [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/NASCOM_BASIC NASCOM BASIC Source Code] - 32KB version
* [https://github.com/douggilliland/Retro-Computers/tree/master/Z80/LB-Z80/NASCOM_BASIC/NASCOM_56K NASCOM BASIC Source Code] - 56KB version

==== Source files ====

* intmini.asm - the interupt driven mini startup program needed to boot into BASIC
* basic.asm - BASIC 4.7b - a conversion of Microsoft BASIC 4.7, as used on the Nascom computers (see below for details)

==== Output files ====

* List files
** INTMINI.LST
** BASIC.LST
* Hex files
** INTMINI.HEX
** BASIC.HEX
** ROM32.HEX - the complete 8K ROM ready for burning to an EPROM
*** The unused contents are filled with FF values.
*** Within the ROM, the serial handler is first (starting at address 0000H), followed by the BASIC interpreter (starting at 0100H).
* [https://en.wikipedia.org/wiki/Intel_HEX Hex file format]

[[file:IntelHexRecordFormat.png]]

* ASCII Table

[[file:ASCII_TABLE.PNG]]

==== Acknowledgements ====

* BASIC is Microsoft BASIC 4.7 for the NASCOM, heavily modified by Grant to remove references to different monitors, screen handlers and keyboard matrix reading
* TASM assembler is a partial distribution of the package from Speech Technology Incorporated

=== References ===

* [https://ia800203.us.archive.org/27/items/Z80_Assembly_Language_Programming/Z80_Assembly_Language_Programming.pdf Z80 Assembly Language Programming] - Concise  description of the register set, Chapter 3 page 1-42 of Z80, assembly language programming by Leventhal, Lance A.
* [https://ia803204.us.archive.org/4/items/Programming_the_Z-80_2nd_Edition_1980_Rodnay_Zaks/Programming_the_Z-80_2nd_Edition_1980_Rodnay_Zaks.pdf Programming the Z80] 1980 Rodnay Zaks
* [https://archive.org/details/Z80_Assembly_Language_Programming_1979_Leventhal Z80, assembly language programming by Leventhal, Lance A., 1945-]
