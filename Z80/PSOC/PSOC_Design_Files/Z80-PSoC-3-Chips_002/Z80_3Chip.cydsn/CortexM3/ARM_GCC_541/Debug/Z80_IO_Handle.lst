ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Z80_IO_Handle.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HandleZ80IO,"ax",%progbits
  20              		.align	2
  21              		.global	HandleZ80IO
  22              		.thumb
  23              		.thumb_func
  24              		.type	HandleZ80IO, %function
  25              	HandleZ80IO:
  26              	.LFB63:
  27              		.file 1 "Z80_IO_Handle.c"
   1:Z80_IO_Handle.c **** /* ========================================
   2:Z80_IO_Handle.c **** *
   3:Z80_IO_Handle.c **** * Copyright LAND BOARDS, LLC, 2019
   4:Z80_IO_Handle.c **** * All Rights Reserved
   5:Z80_IO_Handle.c **** * UNPUBLISHED, LICENSED SOFTWARE.
   6:Z80_IO_Handle.c **** *
   7:Z80_IO_Handle.c **** * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Z80_IO_Handle.c **** * WHICH IS THE PROPERTY OF Land Boards, LLC.
   9:Z80_IO_Handle.c **** *
  10:Z80_IO_Handle.c **** * ========================================
  11:Z80_IO_Handle.c **** */
  12:Z80_IO_Handle.c **** 
  13:Z80_IO_Handle.c **** #include <project.h>
  14:Z80_IO_Handle.c **** #include <Z80_PSoC_3Chips.h>
  15:Z80_IO_Handle.c **** 
  16:Z80_IO_Handle.c **** void HandleZ80IO(void)
  17:Z80_IO_Handle.c **** {
  28              		.loc 1 17 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  18:Z80_IO_Handle.c **** 	volatile uint8 ioCrtlRegVal;
  19:Z80_IO_Handle.c **** 	volatile uint8 ioZ80Addr;
  20:Z80_IO_Handle.c **** 	
  21:Z80_IO_Handle.c **** 	ioCrtlRegVal = IO_Stat_Reg_Read();
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 2


  37              		.loc 1 21 0
  38 0004 FFF7FEFF 		bl	IO_Stat_Reg_Read
  39              	.LVL0:
  40 0008 8DF80700 		strb	r0, [sp, #7]
  22:Z80_IO_Handle.c **** #ifdef USING_SIO
  23:Z80_IO_Handle.c **** 	if ((ioCrtlRegVal & IACK_MASK) == IN_IACK_CYCLE)
  24:Z80_IO_Handle.c **** 	{
  25:Z80_IO_Handle.c **** 		SioReadIntRegB();
  26:Z80_IO_Handle.c **** 		return;
  27:Z80_IO_Handle.c **** 	}
  28:Z80_IO_Handle.c **** #endif
  29:Z80_IO_Handle.c **** #ifdef USING_6850
  30:Z80_IO_Handle.c **** 	if ((ioCrtlRegVal & IACK_MASK) == IN_IACK_CYCLE)
  41              		.loc 1 30 0
  42 000c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  43 0010 03F01903 		and	r3, r3, #25
  44 0014 102B     		cmp	r3, #16
  45 0016 02D1     		bne	.L2
  31:Z80_IO_Handle.c **** 	{
  32:Z80_IO_Handle.c **** 		M6850ReadIntReg();
  46              		.loc 1 32 0
  47 0018 FFF7FEFF 		bl	M6850ReadIntReg
  48              	.LVL1:
  33:Z80_IO_Handle.c **** 		return;
  49              		.loc 1 33 0
  50 001c C4E1     		b	.L1
  51              	.L2:
  34:Z80_IO_Handle.c **** 	}
  35:Z80_IO_Handle.c **** #endif
  36:Z80_IO_Handle.c **** 	ioZ80Addr = AdrLowIn_Read();        // gets the I/O address that the Z80 is accessing
  52              		.loc 1 36 0
  53 001e FFF7FEFF 		bl	AdrLowIn_Read
  54              	.LVL2:
  55 0022 8DF80600 		strb	r0, [sp, #6]
  37:Z80_IO_Handle.c **** 	switch (ioZ80Addr)                  // call appropriate functions based on the address
  56              		.loc 1 37 0
  57 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
  58 002a 183B     		subs	r3, r3, #24
  59 002c 742B     		cmp	r3, #116
  60 002e 00F2BB81 		bhi	.L1
  61 0032 DFE813F0 		tbh	[pc, r3, lsl #1]
  62              	.L5:
  63 0036 3A01     		.2byte	(.L4-.L5)/2
  64 0038 4C01     		.2byte	(.L6-.L5)/2
  65 003a 5E01     		.2byte	(.L7-.L5)/2
  66 003c 7001     		.2byte	(.L8-.L5)/2
  67 003e B901     		.2byte	(.L1-.L5)/2
  68 0040 B901     		.2byte	(.L1-.L5)/2
  69 0042 B901     		.2byte	(.L1-.L5)/2
  70 0044 B901     		.2byte	(.L1-.L5)/2
  71 0046 8A01     		.2byte	(.L9-.L5)/2
  72 0048 A201     		.2byte	(.L10-.L5)/2
  73 004a 9A01     		.2byte	(.L11-.L5)/2
  74 004c B201     		.2byte	(.L12-.L5)/2
  75 004e B901     		.2byte	(.L1-.L5)/2
  76 0050 B901     		.2byte	(.L1-.L5)/2
  77 0052 B901     		.2byte	(.L1-.L5)/2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 3


  78 0054 B901     		.2byte	(.L1-.L5)/2
  79 0056 B901     		.2byte	(.L1-.L5)/2
  80 0058 B901     		.2byte	(.L1-.L5)/2
  81 005a B901     		.2byte	(.L1-.L5)/2
  82 005c B901     		.2byte	(.L1-.L5)/2
  83 005e B901     		.2byte	(.L1-.L5)/2
  84 0060 B901     		.2byte	(.L1-.L5)/2
  85 0062 B901     		.2byte	(.L1-.L5)/2
  86 0064 B901     		.2byte	(.L1-.L5)/2
  87 0066 B901     		.2byte	(.L1-.L5)/2
  88 0068 B901     		.2byte	(.L1-.L5)/2
  89 006a B901     		.2byte	(.L1-.L5)/2
  90 006c B901     		.2byte	(.L1-.L5)/2
  91 006e B901     		.2byte	(.L1-.L5)/2
  92 0070 B901     		.2byte	(.L1-.L5)/2
  93 0072 B901     		.2byte	(.L1-.L5)/2
  94 0074 B901     		.2byte	(.L1-.L5)/2
  95 0076 8201     		.2byte	(.L13-.L5)/2
  96 0078 B901     		.2byte	(.L1-.L5)/2
  97 007a B901     		.2byte	(.L1-.L5)/2
  98 007c B901     		.2byte	(.L1-.L5)/2
  99 007e B901     		.2byte	(.L1-.L5)/2
 100 0080 B901     		.2byte	(.L1-.L5)/2
 101 0082 B901     		.2byte	(.L1-.L5)/2
 102 0084 B901     		.2byte	(.L1-.L5)/2
 103 0086 B901     		.2byte	(.L1-.L5)/2
 104 0088 B901     		.2byte	(.L1-.L5)/2
 105 008a B901     		.2byte	(.L1-.L5)/2
 106 008c B901     		.2byte	(.L1-.L5)/2
 107 008e B901     		.2byte	(.L1-.L5)/2
 108 0090 B901     		.2byte	(.L1-.L5)/2
 109 0092 B901     		.2byte	(.L1-.L5)/2
 110 0094 B901     		.2byte	(.L1-.L5)/2
 111 0096 B901     		.2byte	(.L1-.L5)/2
 112 0098 B901     		.2byte	(.L1-.L5)/2
 113 009a B901     		.2byte	(.L1-.L5)/2
 114 009c B901     		.2byte	(.L1-.L5)/2
 115 009e B901     		.2byte	(.L1-.L5)/2
 116 00a0 B901     		.2byte	(.L1-.L5)/2
 117 00a2 B901     		.2byte	(.L1-.L5)/2
 118 00a4 B901     		.2byte	(.L1-.L5)/2
 119 00a6 B901     		.2byte	(.L1-.L5)/2
 120 00a8 B901     		.2byte	(.L1-.L5)/2
 121 00aa B901     		.2byte	(.L1-.L5)/2
 122 00ac B901     		.2byte	(.L1-.L5)/2
 123 00ae B901     		.2byte	(.L1-.L5)/2
 124 00b0 B901     		.2byte	(.L1-.L5)/2
 125 00b2 B901     		.2byte	(.L1-.L5)/2
 126 00b4 B901     		.2byte	(.L1-.L5)/2
 127 00b6 B901     		.2byte	(.L1-.L5)/2
 128 00b8 B901     		.2byte	(.L1-.L5)/2
 129 00ba B901     		.2byte	(.L1-.L5)/2
 130 00bc B901     		.2byte	(.L1-.L5)/2
 131 00be B901     		.2byte	(.L1-.L5)/2
 132 00c0 B901     		.2byte	(.L1-.L5)/2
 133 00c2 B901     		.2byte	(.L1-.L5)/2
 134 00c4 B901     		.2byte	(.L1-.L5)/2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 4


 135 00c6 7500     		.2byte	(.L14-.L5)/2
 136 00c8 8600     		.2byte	(.L15-.L5)/2
 137 00ca 9700     		.2byte	(.L16-.L5)/2
 138 00cc A800     		.2byte	(.L17-.L5)/2
 139 00ce B901     		.2byte	(.L1-.L5)/2
 140 00d0 B901     		.2byte	(.L1-.L5)/2
 141 00d2 B901     		.2byte	(.L1-.L5)/2
 142 00d4 B901     		.2byte	(.L1-.L5)/2
 143 00d6 B901     		.2byte	(.L1-.L5)/2
 144 00d8 B901     		.2byte	(.L1-.L5)/2
 145 00da B901     		.2byte	(.L1-.L5)/2
 146 00dc B901     		.2byte	(.L1-.L5)/2
 147 00de B901     		.2byte	(.L1-.L5)/2
 148 00e0 B901     		.2byte	(.L1-.L5)/2
 149 00e2 B901     		.2byte	(.L1-.L5)/2
 150 00e4 B901     		.2byte	(.L1-.L5)/2
 151 00e6 B901     		.2byte	(.L1-.L5)/2
 152 00e8 B901     		.2byte	(.L1-.L5)/2
 153 00ea B901     		.2byte	(.L1-.L5)/2
 154 00ec B901     		.2byte	(.L1-.L5)/2
 155 00ee B901     		.2byte	(.L1-.L5)/2
 156 00f0 B901     		.2byte	(.L1-.L5)/2
 157 00f2 B901     		.2byte	(.L1-.L5)/2
 158 00f4 B901     		.2byte	(.L1-.L5)/2
 159 00f6 B901     		.2byte	(.L1-.L5)/2
 160 00f8 B901     		.2byte	(.L1-.L5)/2
 161 00fa B901     		.2byte	(.L1-.L5)/2
 162 00fc B901     		.2byte	(.L1-.L5)/2
 163 00fe B901     		.2byte	(.L1-.L5)/2
 164 0100 B901     		.2byte	(.L1-.L5)/2
 165 0102 B901     		.2byte	(.L1-.L5)/2
 166 0104 B901     		.2byte	(.L1-.L5)/2
 167 0106 0701     		.2byte	(.L18-.L5)/2
 168 0108 F600     		.2byte	(.L19-.L5)/2
 169 010a 2901     		.2byte	(.L20-.L5)/2
 170 010c 1801     		.2byte	(.L21-.L5)/2
 171 010e B901     		.2byte	(.L1-.L5)/2
 172 0110 B901     		.2byte	(.L1-.L5)/2
 173 0112 B901     		.2byte	(.L1-.L5)/2
 174 0114 B901     		.2byte	(.L1-.L5)/2
 175 0116 CA00     		.2byte	(.L22-.L5)/2
 176 0118 B900     		.2byte	(.L23-.L5)/2
 177 011a DB00     		.2byte	(.L24-.L5)/2
 178 011c E400     		.2byte	(.L25-.L5)/2
 179 011e ED00     		.2byte	(.L26-.L5)/2
 180              		.p2align 1
 181              	.L14:
  38:Z80_IO_Handle.c **** 	{
  39:Z80_IO_Handle.c **** #ifdef USING_SIO
  40:Z80_IO_Handle.c **** 	case SIOA_D:
  41:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
  42:Z80_IO_Handle.c **** 		{
  43:Z80_IO_Handle.c **** 			SioReadDataA();
  44:Z80_IO_Handle.c **** 			return;
  45:Z80_IO_Handle.c **** 		}
  46:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  47:Z80_IO_Handle.c **** 		{
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 5


  48:Z80_IO_Handle.c **** 			SioWriteDataA();
  49:Z80_IO_Handle.c **** 			return;
  50:Z80_IO_Handle.c **** 		}
  51:Z80_IO_Handle.c **** 		break;
  52:Z80_IO_Handle.c **** 	case SIOA_C:    // Control register
  53:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  54:Z80_IO_Handle.c **** 		{
  55:Z80_IO_Handle.c **** 			SioWriteCtrlA();
  56:Z80_IO_Handle.c **** 			return;
  57:Z80_IO_Handle.c **** 		}
  58:Z80_IO_Handle.c **** 		break;
  59:Z80_IO_Handle.c **** 	case SIOB_D:
  60:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
  61:Z80_IO_Handle.c **** 		{
  62:Z80_IO_Handle.c **** 			SioReadDataB();
  63:Z80_IO_Handle.c **** 			return;
  64:Z80_IO_Handle.c **** 		}
  65:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  66:Z80_IO_Handle.c **** 		{
  67:Z80_IO_Handle.c **** 			SioWriteDataB();
  68:Z80_IO_Handle.c **** 			return;
  69:Z80_IO_Handle.c **** 		}
  70:Z80_IO_Handle.c **** 		break;
  71:Z80_IO_Handle.c **** 	case SIOB_C:
  72:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  73:Z80_IO_Handle.c **** 		{
  74:Z80_IO_Handle.c **** 			SioWriteCtrlB();
  75:Z80_IO_Handle.c **** 			return;
  76:Z80_IO_Handle.c **** 		}
  77:Z80_IO_Handle.c **** 		break;
  78:Z80_IO_Handle.c **** #endif
  79:Z80_IO_Handle.c **** 	case RTC_DATA:
  80:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 182              		.loc 1 80 0
 183 0120 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 184 0124 DBB2     		uxtb	r3, r3
 185 0126 1C2B     		cmp	r3, #28
 186 0128 02D1     		bne	.L27
  81:Z80_IO_Handle.c **** 		{
  82:Z80_IO_Handle.c **** 			readRTC();
 187              		.loc 1 82 0
 188 012a FFF7FEFF 		bl	readRTC
 189              	.LVL3:
 190 012e 3BE1     		b	.L1
 191              	.L27:
  83:Z80_IO_Handle.c **** 		}
  84:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 192              		.loc 1 84 0
 193 0130 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 194 0134 DBB2     		uxtb	r3, r3
 195 0136 1A2B     		cmp	r3, #26
 196 0138 40F03681 		bne	.L1
  85:Z80_IO_Handle.c **** 		{
  86:Z80_IO_Handle.c **** 			writeRTC();
 197              		.loc 1 86 0
 198 013c FFF7FEFF 		bl	writeRTC
 199              	.LVL4:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 6


 200 0140 32E1     		b	.L1
 201              	.L15:
  87:Z80_IO_Handle.c **** 		}
  88:Z80_IO_Handle.c **** 		break;
  89:Z80_IO_Handle.c **** 	case RTC_CSR:
  90:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 202              		.loc 1 90 0
 203 0142 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 204 0146 DBB2     		uxtb	r3, r3
 205 0148 1C2B     		cmp	r3, #28
 206 014a 02D1     		bne	.L28
  91:Z80_IO_Handle.c **** 		{
  92:Z80_IO_Handle.c **** 			readCmdRTC();
 207              		.loc 1 92 0
 208 014c FFF7FEFF 		bl	readCmdRTC
 209              	.LVL5:
 210 0150 2AE1     		b	.L1
 211              	.L28:
  93:Z80_IO_Handle.c **** 		}
  94:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 212              		.loc 1 94 0
 213 0152 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 214 0156 DBB2     		uxtb	r3, r3
 215 0158 1A2B     		cmp	r3, #26
 216 015a 40F02581 		bne	.L1
  95:Z80_IO_Handle.c **** 		{
  96:Z80_IO_Handle.c **** 			writeCmdRTC();
 217              		.loc 1 96 0
 218 015e FFF7FEFF 		bl	writeCmdRTC
 219              	.LVL6:
 220 0162 21E1     		b	.L1
 221              	.L16:
  97:Z80_IO_Handle.c **** 		}
  98:Z80_IO_Handle.c **** 		break;            
  99:Z80_IO_Handle.c **** 	case DAC_DATA:
 100:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 222              		.loc 1 100 0
 223 0164 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 224 0168 DBB2     		uxtb	r3, r3
 225 016a 1C2B     		cmp	r3, #28
 226 016c 02D1     		bne	.L29
 101:Z80_IO_Handle.c **** 		{
 102:Z80_IO_Handle.c **** 			readDAC();
 227              		.loc 1 102 0
 228 016e FFF7FEFF 		bl	readDAC
 229              	.LVL7:
 230 0172 19E1     		b	.L1
 231              	.L29:
 103:Z80_IO_Handle.c **** 		}
 104:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 232              		.loc 1 104 0
 233 0174 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 234 0178 DBB2     		uxtb	r3, r3
 235 017a 1A2B     		cmp	r3, #26
 236 017c 40F01481 		bne	.L1
 105:Z80_IO_Handle.c **** 		{
 106:Z80_IO_Handle.c **** 			writeDAC();
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 7


 237              		.loc 1 106 0
 238 0180 FFF7FEFF 		bl	writeDAC
 239              	.LVL8:
 240 0184 10E1     		b	.L1
 241              	.L17:
 107:Z80_IO_Handle.c **** 		}
 108:Z80_IO_Handle.c **** 		break;
 109:Z80_IO_Handle.c **** 	case DAC_CSR:
 110:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 242              		.loc 1 110 0
 243 0186 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 244 018a DBB2     		uxtb	r3, r3
 245 018c 1C2B     		cmp	r3, #28
 246 018e 02D1     		bne	.L30
 111:Z80_IO_Handle.c **** 		{
 112:Z80_IO_Handle.c **** 			readStatDAC();
 247              		.loc 1 112 0
 248 0190 FFF7FEFF 		bl	readStatDAC
 249              	.LVL9:
 250 0194 08E1     		b	.L1
 251              	.L30:
 113:Z80_IO_Handle.c **** 		}
 114:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 252              		.loc 1 114 0
 253 0196 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 254 019a DBB2     		uxtb	r3, r3
 255 019c 1A2B     		cmp	r3, #26
 256 019e 40F00381 		bne	.L1
 115:Z80_IO_Handle.c **** 		{
 116:Z80_IO_Handle.c **** 			writeCmdDAC();
 257              		.loc 1 116 0
 258 01a2 FFF7FEFF 		bl	writeCmdDAC
 259              	.LVL10:
 260 01a6 FFE0     		b	.L1
 261              	.L23:
 117:Z80_IO_Handle.c **** 		}
 118:Z80_IO_Handle.c **** 		break;            
 119:Z80_IO_Handle.c **** #ifdef USING_SDCARD
 120:Z80_IO_Handle.c **** 	case SD_CONTROL: // 0x89 - write command also also includes read status
 121:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 262              		.loc 1 121 0
 263 01a8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 264 01ac DBB2     		uxtb	r3, r3
 265 01ae 1C2B     		cmp	r3, #28
 266 01b0 02D1     		bne	.L31
 122:Z80_IO_Handle.c **** 		{
 123:Z80_IO_Handle.c **** 			SDReadStatus();
 267              		.loc 1 123 0
 268 01b2 FFF7FEFF 		bl	SDReadStatus
 269              	.LVL11:
 270 01b6 F7E0     		b	.L1
 271              	.L31:
 124:Z80_IO_Handle.c **** 		}
 125:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 272              		.loc 1 125 0
 273 01b8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 274 01bc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 8


 275 01be 1A2B     		cmp	r3, #26
 276 01c0 40F0F280 		bne	.L1
 126:Z80_IO_Handle.c **** 		{
 127:Z80_IO_Handle.c **** 			SDWriteCommand();
 277              		.loc 1 127 0
 278 01c4 FFF7FEFF 		bl	SDWriteCommand
 279              	.LVL12:
 280 01c8 EEE0     		b	.L1
 281              	.L22:
 128:Z80_IO_Handle.c **** 		}
 129:Z80_IO_Handle.c **** 		break;
 130:Z80_IO_Handle.c **** 	case SD_DATA:           // 0x88
 131:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 282              		.loc 1 131 0
 283 01ca 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 284 01ce DBB2     		uxtb	r3, r3
 285 01d0 1C2B     		cmp	r3, #28
 286 01d2 02D1     		bne	.L32
 132:Z80_IO_Handle.c **** 		{
 133:Z80_IO_Handle.c **** 			SDReadData();
 287              		.loc 1 133 0
 288 01d4 FFF7FEFF 		bl	SDReadData
 289              	.LVL13:
 290 01d8 E6E0     		b	.L1
 291              	.L32:
 134:Z80_IO_Handle.c **** 		}
 135:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 292              		.loc 1 135 0
 293 01da 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 294 01de DBB2     		uxtb	r3, r3
 295 01e0 1A2B     		cmp	r3, #26
 296 01e2 40F0E180 		bne	.L1
 136:Z80_IO_Handle.c **** 		{
 137:Z80_IO_Handle.c **** 			SDWriteData();
 297              		.loc 1 137 0
 298 01e6 FFF7FEFF 		bl	SDWriteData
 299              	.LVL14:
 300 01ea DDE0     		b	.L1
 301              	.L24:
 138:Z80_IO_Handle.c **** 		}
 139:Z80_IO_Handle.c **** 		break;
 140:Z80_IO_Handle.c **** 	case SD_LBA0:    // 0x8A
 141:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 302              		.loc 1 141 0
 303 01ec 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 304 01f0 DBB2     		uxtb	r3, r3
 305 01f2 1A2B     		cmp	r3, #26
 306 01f4 40F0D880 		bne	.L1
 142:Z80_IO_Handle.c **** 		{
 143:Z80_IO_Handle.c **** 			SDWriteLBA0();
 307              		.loc 1 143 0
 308 01f8 FFF7FEFF 		bl	SDWriteLBA0
 309              	.LVL15:
 310 01fc D4E0     		b	.L1
 311              	.L25:
 144:Z80_IO_Handle.c **** 		}
 145:Z80_IO_Handle.c **** 		break;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 9


 146:Z80_IO_Handle.c **** 	case SD_LBA1:   // 0x8B
 147:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 312              		.loc 1 147 0
 313 01fe 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 314 0202 DBB2     		uxtb	r3, r3
 315 0204 1A2B     		cmp	r3, #26
 316 0206 40F0CF80 		bne	.L1
 148:Z80_IO_Handle.c **** 		{
 149:Z80_IO_Handle.c **** 			SDWriteLBA1();
 317              		.loc 1 149 0
 318 020a FFF7FEFF 		bl	SDWriteLBA1
 319              	.LVL16:
 320 020e CBE0     		b	.L1
 321              	.L26:
 150:Z80_IO_Handle.c **** 		}
 151:Z80_IO_Handle.c **** 		break;
 152:Z80_IO_Handle.c **** 	case SD_LBA2:    // 0x8C
 153:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 322              		.loc 1 153 0
 323 0210 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 324 0214 DBB2     		uxtb	r3, r3
 325 0216 1A2B     		cmp	r3, #26
 326 0218 40F0C680 		bne	.L1
 154:Z80_IO_Handle.c **** 		{
 155:Z80_IO_Handle.c **** 			SDWriteLBA2();
 327              		.loc 1 155 0
 328 021c FFF7FEFF 		bl	SDWriteLBA2
 329              	.LVL17:
 330 0220 C2E0     		b	.L1
 331              	.L19:
 156:Z80_IO_Handle.c **** 		}
 157:Z80_IO_Handle.c **** 		break;
 158:Z80_IO_Handle.c **** #endif
 159:Z80_IO_Handle.c **** #ifdef USING_6850
 160:Z80_IO_Handle.c **** 	case M6850_D:
 161:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 332              		.loc 1 161 0
 333 0222 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 334 0226 DBB2     		uxtb	r3, r3
 335 0228 1C2B     		cmp	r3, #28
 336 022a 02D1     		bne	.L33
 162:Z80_IO_Handle.c **** 		{
 163:Z80_IO_Handle.c **** 			M6850ReadData();
 337              		.loc 1 163 0
 338 022c FFF7FEFF 		bl	M6850ReadData
 339              	.LVL18:
 164:Z80_IO_Handle.c **** 			return;
 340              		.loc 1 164 0
 341 0230 BAE0     		b	.L1
 342              	.L33:
 165:Z80_IO_Handle.c **** 		}
 166:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 343              		.loc 1 166 0
 344 0232 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 345 0236 DBB2     		uxtb	r3, r3
 346 0238 1A2B     		cmp	r3, #26
 347 023a 40F0B580 		bne	.L1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 10


 167:Z80_IO_Handle.c **** 		{
 168:Z80_IO_Handle.c **** 			M6850WriteData();
 348              		.loc 1 168 0
 349 023e FFF7FEFF 		bl	M6850WriteData
 350              	.LVL19:
 169:Z80_IO_Handle.c **** 			return;
 351              		.loc 1 169 0
 352 0242 B1E0     		b	.L1
 353              	.L18:
 170:Z80_IO_Handle.c **** 		}
 171:Z80_IO_Handle.c **** 		break;
 172:Z80_IO_Handle.c **** 	case  M6850_C:    // Control register
 173:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 354              		.loc 1 173 0
 355 0244 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 356 0248 DBB2     		uxtb	r3, r3
 357 024a 1C2B     		cmp	r3, #28
 358 024c 02D1     		bne	.L34
 174:Z80_IO_Handle.c **** 		{
 175:Z80_IO_Handle.c **** 			M6850ReadStatus();
 359              		.loc 1 175 0
 360 024e FFF7FEFF 		bl	M6850ReadStatus
 361              	.LVL20:
 176:Z80_IO_Handle.c **** 			return;
 362              		.loc 1 176 0
 363 0252 A9E0     		b	.L1
 364              	.L34:
 177:Z80_IO_Handle.c **** 		}
 178:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 365              		.loc 1 178 0
 366 0254 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 367 0258 DBB2     		uxtb	r3, r3
 368 025a 1A2B     		cmp	r3, #26
 369 025c 40F0A480 		bne	.L1
 179:Z80_IO_Handle.c **** 		{
 180:Z80_IO_Handle.c **** 			M6850WriteCtrl();
 370              		.loc 1 180 0
 371 0260 FFF7FEFF 		bl	M6850WriteCtrl
 372              	.LVL21:
 181:Z80_IO_Handle.c **** 			return;
 373              		.loc 1 181 0
 374 0264 A0E0     		b	.L1
 375              	.L21:
 182:Z80_IO_Handle.c **** 		}
 183:Z80_IO_Handle.c **** 		break;
 184:Z80_IO_Handle.c ****         #ifdef MULTIBOOT_CPM
 185:Z80_IO_Handle.c ****         case M6850_B:   // Baud rate register - do nothing in this configuration
 186:Z80_IO_Handle.c ****             {
 187:Z80_IO_Handle.c ****                 ackIO();
 188:Z80_IO_Handle.c ****             }
 189:Z80_IO_Handle.c ****             break;
 190:Z80_IO_Handle.c ****         #endif
 191:Z80_IO_Handle.c **** #endif
 192:Z80_IO_Handle.c **** #ifdef USING_6850_2
 193:Z80_IO_Handle.c **** 	case M6850_2_D:
 194:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 376              		.loc 1 194 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 11


 377 0266 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 378 026a DBB2     		uxtb	r3, r3
 379 026c 1C2B     		cmp	r3, #28
 380 026e 02D1     		bne	.L35
 195:Z80_IO_Handle.c **** 		{
 196:Z80_IO_Handle.c **** 			M6850_2_ReadData();
 381              		.loc 1 196 0
 382 0270 FFF7FEFF 		bl	M6850_2_ReadData
 383              	.LVL22:
 197:Z80_IO_Handle.c **** 			return;
 384              		.loc 1 197 0
 385 0274 98E0     		b	.L1
 386              	.L35:
 198:Z80_IO_Handle.c **** 		}
 199:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 387              		.loc 1 199 0
 388 0276 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 389 027a DBB2     		uxtb	r3, r3
 390 027c 1A2B     		cmp	r3, #26
 391 027e 40F09380 		bne	.L1
 200:Z80_IO_Handle.c **** 		{
 201:Z80_IO_Handle.c **** 			M6850_2_WriteData();
 392              		.loc 1 201 0
 393 0282 FFF7FEFF 		bl	M6850_2_WriteData
 394              	.LVL23:
 202:Z80_IO_Handle.c **** 			return;
 395              		.loc 1 202 0
 396 0286 8FE0     		b	.L1
 397              	.L20:
 203:Z80_IO_Handle.c **** 		}
 204:Z80_IO_Handle.c **** 		break;
 205:Z80_IO_Handle.c **** 	case  M6850_2_C:    // Control register
 206:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 398              		.loc 1 206 0
 399 0288 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 400 028c DBB2     		uxtb	r3, r3
 401 028e 1C2B     		cmp	r3, #28
 402 0290 02D1     		bne	.L36
 207:Z80_IO_Handle.c **** 		{
 208:Z80_IO_Handle.c **** 			M6850_2_ReadStatus();
 403              		.loc 1 208 0
 404 0292 FFF7FEFF 		bl	M6850_2_ReadStatus
 405              	.LVL24:
 209:Z80_IO_Handle.c **** 			return;
 406              		.loc 1 209 0
 407 0296 87E0     		b	.L1
 408              	.L36:
 210:Z80_IO_Handle.c **** 		}
 211:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 409              		.loc 1 211 0
 410 0298 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 411 029c DBB2     		uxtb	r3, r3
 412 029e 1A2B     		cmp	r3, #26
 413 02a0 40F08280 		bne	.L1
 212:Z80_IO_Handle.c **** 		{
 213:Z80_IO_Handle.c **** 			M6850_2_WriteCtrl();
 414              		.loc 1 213 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 12


 415 02a4 FFF7FEFF 		bl	M6850_2_WriteCtrl
 416              	.LVL25:
 214:Z80_IO_Handle.c **** 			return;
 417              		.loc 1 214 0
 418 02a8 7EE0     		b	.L1
 419              	.L4:
 215:Z80_IO_Handle.c **** 		}
 216:Z80_IO_Handle.c **** 		break;
 217:Z80_IO_Handle.c ****         #ifdef MULTIBOOT_CPM
 218:Z80_IO_Handle.c ****         case M6850_2_B: // Baud rate register - do nothing in this configuration
 219:Z80_IO_Handle.c ****             {
 220:Z80_IO_Handle.c ****                 ackIO();
 221:Z80_IO_Handle.c ****             }
 222:Z80_IO_Handle.c ****             break;
 223:Z80_IO_Handle.c ****         #endif
 224:Z80_IO_Handle.c **** #endif
 225:Z80_IO_Handle.c **** #ifdef USING_FRONT_PANEL
 226:Z80_IO_Handle.c **** 	case FR_PNL_IO_LO:
 227:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 420              		.loc 1 227 0
 421 02aa 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 422 02ae DBB2     		uxtb	r3, r3
 423 02b0 1C2B     		cmp	r3, #28
 424 02b2 03D1     		bne	.L37
 228:Z80_IO_Handle.c **** 		{
 229:Z80_IO_Handle.c **** 			FrontPanelZ80Read(0);
 425              		.loc 1 229 0
 426 02b4 0020     		movs	r0, #0
 427 02b6 FFF7FEFF 		bl	FrontPanelZ80Read
 428              	.LVL26:
 230:Z80_IO_Handle.c **** 			return;
 429              		.loc 1 230 0
 430 02ba 75E0     		b	.L1
 431              	.L37:
 231:Z80_IO_Handle.c **** 		}
 232:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 432              		.loc 1 232 0
 433 02bc 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 434 02c0 DBB2     		uxtb	r3, r3
 435 02c2 1A2B     		cmp	r3, #26
 436 02c4 70D1     		bne	.L1
 233:Z80_IO_Handle.c **** 		{
 234:Z80_IO_Handle.c **** 			FrontPanelZ80Write(0);
 437              		.loc 1 234 0
 438 02c6 0020     		movs	r0, #0
 439 02c8 FFF7FEFF 		bl	FrontPanelZ80Write
 440              	.LVL27:
 235:Z80_IO_Handle.c **** 			return;
 441              		.loc 1 235 0
 442 02cc 6CE0     		b	.L1
 443              	.L6:
 236:Z80_IO_Handle.c **** 		}
 237:Z80_IO_Handle.c **** 		break;
 238:Z80_IO_Handle.c **** 	case FR_PNL_IO_LO_MID:
 239:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 444              		.loc 1 239 0
 445 02ce 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 13


 446 02d2 DBB2     		uxtb	r3, r3
 447 02d4 1C2B     		cmp	r3, #28
 448 02d6 03D1     		bne	.L38
 240:Z80_IO_Handle.c **** 		{
 241:Z80_IO_Handle.c **** 			FrontPanelZ80Read(1);
 449              		.loc 1 241 0
 450 02d8 0120     		movs	r0, #1
 451 02da FFF7FEFF 		bl	FrontPanelZ80Read
 452              	.LVL28:
 242:Z80_IO_Handle.c **** 			return;
 453              		.loc 1 242 0
 454 02de 63E0     		b	.L1
 455              	.L38:
 243:Z80_IO_Handle.c **** 		}
 244:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 456              		.loc 1 244 0
 457 02e0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 458 02e4 DBB2     		uxtb	r3, r3
 459 02e6 1A2B     		cmp	r3, #26
 460 02e8 5ED1     		bne	.L1
 245:Z80_IO_Handle.c **** 		{
 246:Z80_IO_Handle.c **** 			FrontPanelZ80Write(1);
 461              		.loc 1 246 0
 462 02ea 0120     		movs	r0, #1
 463 02ec FFF7FEFF 		bl	FrontPanelZ80Write
 464              	.LVL29:
 247:Z80_IO_Handle.c **** 			return;
 465              		.loc 1 247 0
 466 02f0 5AE0     		b	.L1
 467              	.L7:
 248:Z80_IO_Handle.c **** 		}
 249:Z80_IO_Handle.c **** 		break;
 250:Z80_IO_Handle.c **** 	case FR_PNL_IO_HI_MID:
 251:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 468              		.loc 1 251 0
 469 02f2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 470 02f6 DBB2     		uxtb	r3, r3
 471 02f8 1C2B     		cmp	r3, #28
 472 02fa 03D1     		bne	.L39
 252:Z80_IO_Handle.c **** 		{
 253:Z80_IO_Handle.c **** 			FrontPanelZ80Read(2);
 473              		.loc 1 253 0
 474 02fc 0220     		movs	r0, #2
 475 02fe FFF7FEFF 		bl	FrontPanelZ80Read
 476              	.LVL30:
 254:Z80_IO_Handle.c **** 			return;
 477              		.loc 1 254 0
 478 0302 51E0     		b	.L1
 479              	.L39:
 255:Z80_IO_Handle.c **** 		}
 256:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 480              		.loc 1 256 0
 481 0304 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 482 0308 DBB2     		uxtb	r3, r3
 483 030a 1A2B     		cmp	r3, #26
 484 030c 4CD1     		bne	.L1
 257:Z80_IO_Handle.c **** 		{
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 14


 258:Z80_IO_Handle.c **** 			FrontPanelZ80Write(2);
 485              		.loc 1 258 0
 486 030e 0220     		movs	r0, #2
 487 0310 FFF7FEFF 		bl	FrontPanelZ80Write
 488              	.LVL31:
 259:Z80_IO_Handle.c **** 			return;
 489              		.loc 1 259 0
 490 0314 48E0     		b	.L1
 491              	.L8:
 260:Z80_IO_Handle.c **** 		}
 261:Z80_IO_Handle.c **** 		break;
 262:Z80_IO_Handle.c **** 	case FR_PNL_IO_HI:
 263:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 492              		.loc 1 263 0
 493 0316 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 494 031a DBB2     		uxtb	r3, r3
 495 031c 1C2B     		cmp	r3, #28
 496 031e 03D1     		bne	.L40
 264:Z80_IO_Handle.c **** 		{
 265:Z80_IO_Handle.c **** 			FrontPanelZ80Read(3);
 497              		.loc 1 265 0
 498 0320 0320     		movs	r0, #3
 499 0322 FFF7FEFF 		bl	FrontPanelZ80Read
 500              	.LVL32:
 266:Z80_IO_Handle.c **** 			return;
 501              		.loc 1 266 0
 502 0326 3FE0     		b	.L1
 503              	.L40:
 267:Z80_IO_Handle.c **** 		}
 268:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 504              		.loc 1 268 0
 505 0328 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 506 032c DBB2     		uxtb	r3, r3
 507 032e 1A2B     		cmp	r3, #26
 508 0330 3AD1     		bne	.L1
 269:Z80_IO_Handle.c **** 		{
 270:Z80_IO_Handle.c **** 			FrontPanelZ80Write(3);
 509              		.loc 1 270 0
 510 0332 0320     		movs	r0, #3
 511 0334 FFF7FEFF 		bl	FrontPanelZ80Write
 512              	.LVL33:
 271:Z80_IO_Handle.c **** 			return;
 513              		.loc 1 271 0
 514 0338 36E0     		b	.L1
 515              	.L13:
 272:Z80_IO_Handle.c **** 		}
 273:Z80_IO_Handle.c **** 		break;
 274:Z80_IO_Handle.c **** #endif
 275:Z80_IO_Handle.c **** #ifdef USING_MEM_MAP_1
 276:Z80_IO_Handle.c **** 	case MEM_MAP_SWAP:
 277:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 516              		.loc 1 277 0
 517 033a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 518 033e DBB2     		uxtb	r3, r3
 519 0340 1A2B     		cmp	r3, #26
 520 0342 02D1     		bne	.L9
 278:Z80_IO_Handle.c **** 		{
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 15


 279:Z80_IO_Handle.c **** 			swap_out_ROM_space();
 521              		.loc 1 279 0
 522 0344 FFF7FEFF 		bl	swap_out_ROM_space
 523              	.LVL34:
 280:Z80_IO_Handle.c **** 			return;
 524              		.loc 1 280 0
 525 0348 2EE0     		b	.L1
 526              	.L9:
 281:Z80_IO_Handle.c **** 		}
 282:Z80_IO_Handle.c **** #endif
 283:Z80_IO_Handle.c **** #ifdef USING_MMU4
 284:Z80_IO_Handle.c **** 	case MMUSELECT:
 285:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 286:Z80_IO_Handle.c **** 		{
 287:Z80_IO_Handle.c **** 			wrMMU4SelectReg();
 288:Z80_IO_Handle.c **** 			return;
 289:Z80_IO_Handle.c **** 		}
 290:Z80_IO_Handle.c ****         break;
 291:Z80_IO_Handle.c ****     case MMUFRAME:
 292:Z80_IO_Handle.c ****         {
 293:Z80_IO_Handle.c ****             wrMMU4Bank();
 294:Z80_IO_Handle.c ****             return;
 295:Z80_IO_Handle.c ****         }
 296:Z80_IO_Handle.c ****         break;
 297:Z80_IO_Handle.c **** #endif
 298:Z80_IO_Handle.c **** #ifdef USING_EXP_MCCP23017
 299:Z80_IO_Handle.c **** 	case PIOA_D:
 300:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 527              		.loc 1 300 0
 528 034a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 529 034e DBB2     		uxtb	r3, r3
 530 0350 1C2B     		cmp	r3, #28
 531 0352 02D1     		bne	.L41
 301:Z80_IO_Handle.c **** 		{
 302:Z80_IO_Handle.c **** 			PioReadDataA();
 532              		.loc 1 302 0
 533 0354 FFF7FEFF 		bl	PioReadDataA
 534              	.LVL35:
 303:Z80_IO_Handle.c **** 			return;
 535              		.loc 1 303 0
 536 0358 26E0     		b	.L1
 537              	.L41:
 304:Z80_IO_Handle.c **** 		}
 305:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 538              		.loc 1 305 0
 539 035a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 540 035e DBB2     		uxtb	r3, r3
 541 0360 1A2B     		cmp	r3, #26
 542 0362 21D1     		bne	.L1
 306:Z80_IO_Handle.c **** 		{
 307:Z80_IO_Handle.c **** 			PioWriteDataA();
 543              		.loc 1 307 0
 544 0364 FFF7FEFF 		bl	PioWriteDataA
 545              	.LVL36:
 308:Z80_IO_Handle.c **** 			return;
 546              		.loc 1 308 0
 547 0368 1EE0     		b	.L1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 16


 548              	.L11:
 309:Z80_IO_Handle.c **** 		}
 310:Z80_IO_Handle.c **** 		break;
 311:Z80_IO_Handle.c **** 	case PIOA_C:    // Control register
 312:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 549              		.loc 1 312 0
 550 036a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 551 036e DBB2     		uxtb	r3, r3
 552 0370 1A2B     		cmp	r3, #26
 553 0372 19D1     		bne	.L1
 313:Z80_IO_Handle.c **** 		{
 314:Z80_IO_Handle.c **** 			PioWriteCtrlA();
 554              		.loc 1 314 0
 555 0374 FFF7FEFF 		bl	PioWriteCtrlA
 556              	.LVL37:
 315:Z80_IO_Handle.c **** 			return;
 557              		.loc 1 315 0
 558 0378 16E0     		b	.L1
 559              	.L10:
 316:Z80_IO_Handle.c **** 		}
 317:Z80_IO_Handle.c **** 		break;
 318:Z80_IO_Handle.c **** 	case PIOB_D:
 319:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 560              		.loc 1 319 0
 561 037a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 562 037e DBB2     		uxtb	r3, r3
 563 0380 1C2B     		cmp	r3, #28
 564 0382 02D1     		bne	.L42
 320:Z80_IO_Handle.c **** 		{
 321:Z80_IO_Handle.c **** 			PioReadDataB();
 565              		.loc 1 321 0
 566 0384 FFF7FEFF 		bl	PioReadDataB
 567              	.LVL38:
 322:Z80_IO_Handle.c **** 			return;
 568              		.loc 1 322 0
 569 0388 0EE0     		b	.L1
 570              	.L42:
 323:Z80_IO_Handle.c **** 		}
 324:Z80_IO_Handle.c **** 		else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 571              		.loc 1 324 0
 572 038a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 573 038e DBB2     		uxtb	r3, r3
 574 0390 1A2B     		cmp	r3, #26
 575 0392 09D1     		bne	.L1
 325:Z80_IO_Handle.c **** 		{
 326:Z80_IO_Handle.c **** 			PioWriteDataB();
 576              		.loc 1 326 0
 577 0394 FFF7FEFF 		bl	PioWriteDataB
 578              	.LVL39:
 327:Z80_IO_Handle.c **** 			return;
 579              		.loc 1 327 0
 580 0398 06E0     		b	.L1
 581              	.L12:
 328:Z80_IO_Handle.c **** 		}
 329:Z80_IO_Handle.c **** 		break;
 330:Z80_IO_Handle.c **** 	case PIOB_C:
 331:Z80_IO_Handle.c **** 		if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 17


 582              		.loc 1 331 0
 583 039a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 584 039e DBB2     		uxtb	r3, r3
 585 03a0 1A2B     		cmp	r3, #26
 586 03a2 01D1     		bne	.L1
 332:Z80_IO_Handle.c **** 		{
 333:Z80_IO_Handle.c **** 			PioWriteCtrlB();
 587              		.loc 1 333 0
 588 03a4 FFF7FEFF 		bl	PioWriteCtrlB
 589              	.LVL40:
 590              	.L1:
 334:Z80_IO_Handle.c **** 			return;
 335:Z80_IO_Handle.c **** 		}
 336:Z80_IO_Handle.c **** 		break;
 337:Z80_IO_Handle.c **** #endif
 338:Z80_IO_Handle.c **** 	default:    // Handle other cases
 339:Z80_IO_Handle.c ****                 // If I ackIO() then it would makes cases which are not handled
 340:Z80_IO_Handle.c **** 		break;
 341:Z80_IO_Handle.c **** 	}
 342:Z80_IO_Handle.c **** }
 591              		.loc 1 342 0
 592 03a8 03B0     		add	sp, sp, #12
 593              		.cfi_def_cfa_offset 4
 594              		@ sp needed
 595 03aa 5DF804FB 		ldr	pc, [sp], #4
 596              		.cfi_endproc
 597              	.LFE63:
 598              		.size	HandleZ80IO, .-HandleZ80IO
 599 03ae 00BF     		.section	.text.ackIO,"ax",%progbits
 600              		.align	2
 601              		.global	ackIO
 602              		.thumb
 603              		.thumb_func
 604              		.type	ackIO, %function
 605              	ackIO:
 606              	.LFB64:
 343:Z80_IO_Handle.c **** 
 344:Z80_IO_Handle.c **** void ackIO(void)
 345:Z80_IO_Handle.c **** {
 607              		.loc 1 345 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 08B5     		push	{r3, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 3, -8
 614              		.cfi_offset 14, -4
 346:Z80_IO_Handle.c **** 	IO_Ctrl_Reg_Write(IO_Ctrl_Reg_Read() | CLR_IO_INT_BIT);
 615              		.loc 1 346 0
 616 0002 FFF7FEFF 		bl	IO_Ctrl_Reg_Read
 617              	.LVL41:
 618 0006 40F00100 		orr	r0, r0, #1
 619 000a C0B2     		uxtb	r0, r0
 620 000c FFF7FEFF 		bl	IO_Ctrl_Reg_Write
 621              	.LVL42:
 622 0010 08BD     		pop	{r3, pc}
 623              		.cfi_endproc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 18


 624              	.LFE64:
 625              		.size	ackIO, .-ackIO
 626 0012 00BF     		.section	.text.waitNextIORq,"ax",%progbits
 627              		.align	2
 628              		.global	waitNextIORq
 629              		.thumb
 630              		.thumb_func
 631              		.type	waitNextIORq, %function
 632              	waitNextIORq:
 633              	.LFB65:
 347:Z80_IO_Handle.c **** }
 348:Z80_IO_Handle.c **** 
 349:Z80_IO_Handle.c **** void waitNextIORq(void)
 350:Z80_IO_Handle.c **** {
 634              		.loc 1 350 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 642              	.L47:
 351:Z80_IO_Handle.c **** 	while ((IO_Stat_Reg_Read() & IOBUSY_BIT) == 0x00);
 643              		.loc 1 351 0 discriminator 1
 644 0002 FFF7FEFF 		bl	IO_Stat_Reg_Read
 645              	.LVL43:
 646 0006 10F0100F 		tst	r0, #16
 647 000a FAD0     		beq	.L47
 352:Z80_IO_Handle.c **** }
 648              		.loc 1 352 0
 649 000c 08BD     		pop	{r3, pc}
 650              		.cfi_endproc
 651              	.LFE65:
 652              		.size	waitNextIORq, .-waitNextIORq
 653 000e 00BF     		.text
 654              	.Letext0:
 655              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 656              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 657              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 658              		.file 5 "Generated_Source\\PSoC5/IO_Stat_Reg.h"
 659              		.file 6 "./Z80_6850_Emul.h"
 660              		.file 7 "Generated_Source\\PSoC5/AdrLowIn.h"
 661              		.file 8 "./Z80_RTC.h"
 662              		.file 9 "./Z80_DAC.h"
 663              		.file 10 "./Z80_SDCard_Emul.h"
 664              		.file 11 "./Z80_6850_2_Emul.h"
 665              		.file 12 "./FrontPanel.h"
 666              		.file 13 "./Z80_Mem_Mappers.h"
 667              		.file 14 "./Z80_PIO_emul.h"
 668              		.file 15 "Generated_Source\\PSoC5/IO_Ctrl_Reg.h"
 669              		.file 16 "Generated_Source\\PSoC5/core_cm3.h"
 670              		.section	.debug_info,"",%progbits
 671              	.Ldebug_info0:
 672 0000 96040000 		.4byte	0x496
 673 0004 0400     		.2byte	0x4
 674 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 19


 675 000a 04       		.byte	0x4
 676 000b 01       		.uleb128 0x1
 677 000c 52030000 		.4byte	.LASF59
 678 0010 0C       		.byte	0xc
 679 0011 1C040000 		.4byte	.LASF60
 680 0015 5E000000 		.4byte	.LASF61
 681 0019 00000000 		.4byte	.Ldebug_ranges0+0
 682 001d 00000000 		.4byte	0
 683 0021 00000000 		.4byte	.Ldebug_line0
 684 0025 02       		.uleb128 0x2
 685 0026 01       		.byte	0x1
 686 0027 06       		.byte	0x6
 687 0028 15020000 		.4byte	.LASF0
 688 002c 02       		.uleb128 0x2
 689 002d 01       		.byte	0x1
 690 002e 08       		.byte	0x8
 691 002f 07020000 		.4byte	.LASF1
 692 0033 02       		.uleb128 0x2
 693 0034 02       		.byte	0x2
 694 0035 05       		.byte	0x5
 695 0036 3C000000 		.4byte	.LASF2
 696 003a 02       		.uleb128 0x2
 697 003b 02       		.byte	0x2
 698 003c 07       		.byte	0x7
 699 003d CA020000 		.4byte	.LASF3
 700 0041 03       		.uleb128 0x3
 701 0042 18030000 		.4byte	.LASF9
 702 0046 02       		.byte	0x2
 703 0047 3F       		.byte	0x3f
 704 0048 4C000000 		.4byte	0x4c
 705 004c 02       		.uleb128 0x2
 706 004d 04       		.byte	0x4
 707 004e 05       		.byte	0x5
 708 004f A9010000 		.4byte	.LASF4
 709 0053 02       		.uleb128 0x2
 710 0054 04       		.byte	0x4
 711 0055 07       		.byte	0x7
 712 0056 EA020000 		.4byte	.LASF5
 713 005a 02       		.uleb128 0x2
 714 005b 08       		.byte	0x8
 715 005c 05       		.byte	0x5
 716 005d 6D010000 		.4byte	.LASF6
 717 0061 02       		.uleb128 0x2
 718 0062 08       		.byte	0x8
 719 0063 07       		.byte	0x7
 720 0064 21020000 		.4byte	.LASF7
 721 0068 04       		.uleb128 0x4
 722 0069 04       		.byte	0x4
 723 006a 05       		.byte	0x5
 724 006b 696E7400 		.ascii	"int\000"
 725 006f 02       		.uleb128 0x2
 726 0070 04       		.byte	0x4
 727 0071 07       		.byte	0x7
 728 0072 E0030000 		.4byte	.LASF8
 729 0076 03       		.uleb128 0x3
 730 0077 95020000 		.4byte	.LASF10
 731 007b 03       		.byte	0x3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 20


 732 007c 2C       		.byte	0x2c
 733 007d 41000000 		.4byte	0x41
 734 0081 05       		.uleb128 0x5
 735 0082 3F030000 		.4byte	.LASF11
 736 0086 04       		.byte	0x4
 737 0087 E401     		.2byte	0x1e4
 738 0089 2C000000 		.4byte	0x2c
 739 008d 02       		.uleb128 0x2
 740 008e 04       		.byte	0x4
 741 008f 04       		.byte	0x4
 742 0090 67010000 		.4byte	.LASF12
 743 0094 02       		.uleb128 0x2
 744 0095 08       		.byte	0x8
 745 0096 04       		.byte	0x4
 746 0097 FC020000 		.4byte	.LASF13
 747 009b 02       		.uleb128 0x2
 748 009c 01       		.byte	0x1
 749 009d 08       		.byte	0x8
 750 009e 7E020000 		.4byte	.LASF14
 751 00a2 06       		.uleb128 0x6
 752 00a3 81000000 		.4byte	0x81
 753 00a7 02       		.uleb128 0x2
 754 00a8 08       		.byte	0x8
 755 00a9 04       		.byte	0x4
 756 00aa FB010000 		.4byte	.LASF15
 757 00ae 02       		.uleb128 0x2
 758 00af 04       		.byte	0x4
 759 00b0 07       		.byte	0x7
 760 00b1 55000000 		.4byte	.LASF16
 761 00b5 07       		.uleb128 0x7
 762 00b6 01010000 		.4byte	.LASF19
 763 00ba 01       		.byte	0x1
 764 00bb 10       		.byte	0x10
 765 00bc 00000000 		.4byte	.LFB63
 766 00c0 AE030000 		.4byte	.LFE63-.LFB63
 767 00c4 01       		.uleb128 0x1
 768 00c5 9C       		.byte	0x9c
 769 00c6 A8020000 		.4byte	0x2a8
 770 00ca 08       		.uleb128 0x8
 771 00cb 21000000 		.4byte	.LASF17
 772 00cf 01       		.byte	0x1
 773 00d0 12       		.byte	0x12
 774 00d1 A2000000 		.4byte	0xa2
 775 00d5 02       		.uleb128 0x2
 776 00d6 91       		.byte	0x91
 777 00d7 77       		.sleb128 -9
 778 00d8 08       		.uleb128 0x8
 779 00d9 2C010000 		.4byte	.LASF18
 780 00dd 01       		.byte	0x1
 781 00de 13       		.byte	0x13
 782 00df A2000000 		.4byte	0xa2
 783 00e3 02       		.uleb128 0x2
 784 00e4 91       		.byte	0x91
 785 00e5 76       		.sleb128 -10
 786 00e6 09       		.uleb128 0x9
 787 00e7 08000000 		.4byte	.LVL0
 788 00eb 02030000 		.4byte	0x302
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 21


 789 00ef 09       		.uleb128 0x9
 790 00f0 1C000000 		.4byte	.LVL1
 791 00f4 0D030000 		.4byte	0x30d
 792 00f8 09       		.uleb128 0x9
 793 00f9 22000000 		.4byte	.LVL2
 794 00fd 18030000 		.4byte	0x318
 795 0101 09       		.uleb128 0x9
 796 0102 2E010000 		.4byte	.LVL3
 797 0106 23030000 		.4byte	0x323
 798 010a 09       		.uleb128 0x9
 799 010b 40010000 		.4byte	.LVL4
 800 010f 2E030000 		.4byte	0x32e
 801 0113 09       		.uleb128 0x9
 802 0114 50010000 		.4byte	.LVL5
 803 0118 39030000 		.4byte	0x339
 804 011c 09       		.uleb128 0x9
 805 011d 62010000 		.4byte	.LVL6
 806 0121 44030000 		.4byte	0x344
 807 0125 09       		.uleb128 0x9
 808 0126 72010000 		.4byte	.LVL7
 809 012a 4F030000 		.4byte	0x34f
 810 012e 09       		.uleb128 0x9
 811 012f 84010000 		.4byte	.LVL8
 812 0133 5A030000 		.4byte	0x35a
 813 0137 09       		.uleb128 0x9
 814 0138 94010000 		.4byte	.LVL9
 815 013c 65030000 		.4byte	0x365
 816 0140 09       		.uleb128 0x9
 817 0141 A6010000 		.4byte	.LVL10
 818 0145 70030000 		.4byte	0x370
 819 0149 09       		.uleb128 0x9
 820 014a B6010000 		.4byte	.LVL11
 821 014e 7B030000 		.4byte	0x37b
 822 0152 09       		.uleb128 0x9
 823 0153 C8010000 		.4byte	.LVL12
 824 0157 86030000 		.4byte	0x386
 825 015b 09       		.uleb128 0x9
 826 015c D8010000 		.4byte	.LVL13
 827 0160 91030000 		.4byte	0x391
 828 0164 09       		.uleb128 0x9
 829 0165 EA010000 		.4byte	.LVL14
 830 0169 9C030000 		.4byte	0x39c
 831 016d 09       		.uleb128 0x9
 832 016e FC010000 		.4byte	.LVL15
 833 0172 A7030000 		.4byte	0x3a7
 834 0176 09       		.uleb128 0x9
 835 0177 0E020000 		.4byte	.LVL16
 836 017b B2030000 		.4byte	0x3b2
 837 017f 09       		.uleb128 0x9
 838 0180 20020000 		.4byte	.LVL17
 839 0184 BD030000 		.4byte	0x3bd
 840 0188 09       		.uleb128 0x9
 841 0189 30020000 		.4byte	.LVL18
 842 018d C8030000 		.4byte	0x3c8
 843 0191 09       		.uleb128 0x9
 844 0192 42020000 		.4byte	.LVL19
 845 0196 D3030000 		.4byte	0x3d3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 22


 846 019a 09       		.uleb128 0x9
 847 019b 52020000 		.4byte	.LVL20
 848 019f DE030000 		.4byte	0x3de
 849 01a3 09       		.uleb128 0x9
 850 01a4 64020000 		.4byte	.LVL21
 851 01a8 E9030000 		.4byte	0x3e9
 852 01ac 09       		.uleb128 0x9
 853 01ad 74020000 		.4byte	.LVL22
 854 01b1 F4030000 		.4byte	0x3f4
 855 01b5 09       		.uleb128 0x9
 856 01b6 86020000 		.4byte	.LVL23
 857 01ba FF030000 		.4byte	0x3ff
 858 01be 09       		.uleb128 0x9
 859 01bf 96020000 		.4byte	.LVL24
 860 01c3 0A040000 		.4byte	0x40a
 861 01c7 09       		.uleb128 0x9
 862 01c8 A8020000 		.4byte	.LVL25
 863 01cc 15040000 		.4byte	0x415
 864 01d0 0A       		.uleb128 0xa
 865 01d1 BA020000 		.4byte	.LVL26
 866 01d5 20040000 		.4byte	0x420
 867 01d9 E3010000 		.4byte	0x1e3
 868 01dd 0B       		.uleb128 0xb
 869 01de 01       		.uleb128 0x1
 870 01df 50       		.byte	0x50
 871 01e0 01       		.uleb128 0x1
 872 01e1 30       		.byte	0x30
 873 01e2 00       		.byte	0
 874 01e3 0A       		.uleb128 0xa
 875 01e4 CC020000 		.4byte	.LVL27
 876 01e8 2B040000 		.4byte	0x42b
 877 01ec F6010000 		.4byte	0x1f6
 878 01f0 0B       		.uleb128 0xb
 879 01f1 01       		.uleb128 0x1
 880 01f2 50       		.byte	0x50
 881 01f3 01       		.uleb128 0x1
 882 01f4 30       		.byte	0x30
 883 01f5 00       		.byte	0
 884 01f6 0A       		.uleb128 0xa
 885 01f7 DE020000 		.4byte	.LVL28
 886 01fb 20040000 		.4byte	0x420
 887 01ff 09020000 		.4byte	0x209
 888 0203 0B       		.uleb128 0xb
 889 0204 01       		.uleb128 0x1
 890 0205 50       		.byte	0x50
 891 0206 01       		.uleb128 0x1
 892 0207 31       		.byte	0x31
 893 0208 00       		.byte	0
 894 0209 0A       		.uleb128 0xa
 895 020a F0020000 		.4byte	.LVL29
 896 020e 2B040000 		.4byte	0x42b
 897 0212 1C020000 		.4byte	0x21c
 898 0216 0B       		.uleb128 0xb
 899 0217 01       		.uleb128 0x1
 900 0218 50       		.byte	0x50
 901 0219 01       		.uleb128 0x1
 902 021a 31       		.byte	0x31
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 23


 903 021b 00       		.byte	0
 904 021c 0A       		.uleb128 0xa
 905 021d 02030000 		.4byte	.LVL30
 906 0221 20040000 		.4byte	0x420
 907 0225 2F020000 		.4byte	0x22f
 908 0229 0B       		.uleb128 0xb
 909 022a 01       		.uleb128 0x1
 910 022b 50       		.byte	0x50
 911 022c 01       		.uleb128 0x1
 912 022d 32       		.byte	0x32
 913 022e 00       		.byte	0
 914 022f 0A       		.uleb128 0xa
 915 0230 14030000 		.4byte	.LVL31
 916 0234 2B040000 		.4byte	0x42b
 917 0238 42020000 		.4byte	0x242
 918 023c 0B       		.uleb128 0xb
 919 023d 01       		.uleb128 0x1
 920 023e 50       		.byte	0x50
 921 023f 01       		.uleb128 0x1
 922 0240 32       		.byte	0x32
 923 0241 00       		.byte	0
 924 0242 0A       		.uleb128 0xa
 925 0243 26030000 		.4byte	.LVL32
 926 0247 20040000 		.4byte	0x420
 927 024b 55020000 		.4byte	0x255
 928 024f 0B       		.uleb128 0xb
 929 0250 01       		.uleb128 0x1
 930 0251 50       		.byte	0x50
 931 0252 01       		.uleb128 0x1
 932 0253 33       		.byte	0x33
 933 0254 00       		.byte	0
 934 0255 0A       		.uleb128 0xa
 935 0256 38030000 		.4byte	.LVL33
 936 025a 2B040000 		.4byte	0x42b
 937 025e 68020000 		.4byte	0x268
 938 0262 0B       		.uleb128 0xb
 939 0263 01       		.uleb128 0x1
 940 0264 50       		.byte	0x50
 941 0265 01       		.uleb128 0x1
 942 0266 33       		.byte	0x33
 943 0267 00       		.byte	0
 944 0268 09       		.uleb128 0x9
 945 0269 48030000 		.4byte	.LVL34
 946 026d 36040000 		.4byte	0x436
 947 0271 09       		.uleb128 0x9
 948 0272 58030000 		.4byte	.LVL35
 949 0276 41040000 		.4byte	0x441
 950 027a 09       		.uleb128 0x9
 951 027b 68030000 		.4byte	.LVL36
 952 027f 4C040000 		.4byte	0x44c
 953 0283 09       		.uleb128 0x9
 954 0284 78030000 		.4byte	.LVL37
 955 0288 57040000 		.4byte	0x457
 956 028c 09       		.uleb128 0x9
 957 028d 88030000 		.4byte	.LVL38
 958 0291 62040000 		.4byte	0x462
 959 0295 09       		.uleb128 0x9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 24


 960 0296 98030000 		.4byte	.LVL39
 961 029a 6D040000 		.4byte	0x46d
 962 029e 09       		.uleb128 0x9
 963 029f A8030000 		.4byte	.LVL40
 964 02a3 78040000 		.4byte	0x478
 965 02a7 00       		.byte	0
 966 02a8 0C       		.uleb128 0xc
 967 02a9 DE000000 		.4byte	.LASF20
 968 02ad 01       		.byte	0x1
 969 02ae 5801     		.2byte	0x158
 970 02b0 00000000 		.4byte	.LFB64
 971 02b4 12000000 		.4byte	.LFE64-.LFB64
 972 02b8 01       		.uleb128 0x1
 973 02b9 9C       		.byte	0x9c
 974 02ba D1020000 		.4byte	0x2d1
 975 02be 09       		.uleb128 0x9
 976 02bf 06000000 		.4byte	.LVL41
 977 02c3 83040000 		.4byte	0x483
 978 02c7 09       		.uleb128 0x9
 979 02c8 10000000 		.4byte	.LVL42
 980 02cc 8E040000 		.4byte	0x48e
 981 02d0 00       		.byte	0
 982 02d1 0C       		.uleb128 0xc
 983 02d2 B2010000 		.4byte	.LASF21
 984 02d6 01       		.byte	0x1
 985 02d7 5D01     		.2byte	0x15d
 986 02d9 00000000 		.4byte	.LFB65
 987 02dd 0E000000 		.4byte	.LFE65-.LFB65
 988 02e1 01       		.uleb128 0x1
 989 02e2 9C       		.byte	0x9c
 990 02e3 F1020000 		.4byte	0x2f1
 991 02e7 09       		.uleb128 0x9
 992 02e8 06000000 		.4byte	.LVL43
 993 02ec 02030000 		.4byte	0x302
 994 02f0 00       		.byte	0
 995 02f1 0D       		.uleb128 0xd
 996 02f2 45030000 		.4byte	.LASF62
 997 02f6 10       		.byte	0x10
 998 02f7 1207     		.2byte	0x712
 999 02f9 FD020000 		.4byte	0x2fd
 1000 02fd 06       		.uleb128 0x6
 1001 02fe 76000000 		.4byte	0x76
 1002 0302 0E       		.uleb128 0xe
 1003 0303 9D020000 		.4byte	.LASF22
 1004 0307 9D020000 		.4byte	.LASF22
 1005 030b 05       		.byte	0x5
 1006 030c 30       		.byte	0x30
 1007 030d 0E       		.uleb128 0xe
 1008 030e 89010000 		.4byte	.LASF23
 1009 0312 89010000 		.4byte	.LASF23
 1010 0316 06       		.byte	0x6
 1011 0317 18       		.byte	0x18
 1012 0318 0E       		.uleb128 0xe
 1013 0319 7B010000 		.4byte	.LASF24
 1014 031d 7B010000 		.4byte	.LASF24
 1015 0321 07       		.byte	0x7
 1016 0322 30       		.byte	0x30
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 25


 1017 0323 0E       		.uleb128 0xe
 1018 0324 5F010000 		.4byte	.LASF25
 1019 0328 5F010000 		.4byte	.LASF25
 1020 032c 08       		.byte	0x8
 1021 032d 21       		.byte	0x21
 1022 032e 0E       		.uleb128 0xe
 1023 032f 22030000 		.4byte	.LASF26
 1024 0333 22030000 		.4byte	.LASF26
 1025 0337 08       		.byte	0x8
 1026 0338 20       		.byte	0x20
 1027 0339 0E       		.uleb128 0xe
 1028 033a 61020000 		.4byte	.LASF27
 1029 033e 61020000 		.4byte	.LASF27
 1030 0342 08       		.byte	0x8
 1031 0343 22       		.byte	0x22
 1032 0344 0E       		.uleb128 0xe
 1033 0345 20010000 		.4byte	.LASF28
 1034 0349 20010000 		.4byte	.LASF28
 1035 034d 08       		.byte	0x8
 1036 034e 1F       		.byte	0x1f
 1037 034f 0E       		.uleb128 0xe
 1038 0350 2B030000 		.4byte	.LASF29
 1039 0354 2B030000 		.4byte	.LASF29
 1040 0358 09       		.byte	0x9
 1041 0359 14       		.byte	0x14
 1042 035a 0E       		.uleb128 0xe
 1043 035b 0F030000 		.4byte	.LASF30
 1044 035f 0F030000 		.4byte	.LASF30
 1045 0363 09       		.byte	0x9
 1046 0364 13       		.byte	0x13
 1047 0365 0E       		.uleb128 0xe
 1048 0366 55020000 		.4byte	.LASF31
 1049 036a 55020000 		.4byte	.LASF31
 1050 036e 09       		.byte	0x9
 1051 036f 15       		.byte	0x15
 1052 0370 0E       		.uleb128 0xe
 1053 0371 03030000 		.4byte	.LASF32
 1054 0375 03030000 		.4byte	.LASF32
 1055 0379 09       		.byte	0x9
 1056 037a 16       		.byte	0x16
 1057 037b 0E       		.uleb128 0xe
 1058 037c DD020000 		.4byte	.LASF33
 1059 0380 DD020000 		.4byte	.LASF33
 1060 0384 0A       		.byte	0xa
 1061 0385 33       		.byte	0x33
 1062 0386 0E       		.uleb128 0xe
 1063 0387 36010000 		.4byte	.LASF34
 1064 038b 36010000 		.4byte	.LASF34
 1065 038f 0A       		.byte	0xa
 1066 0390 34       		.byte	0x34
 1067 0391 0E       		.uleb128 0xe
 1068 0392 F6000000 		.4byte	.LASF35
 1069 0396 F6000000 		.4byte	.LASF35
 1070 039a 0A       		.byte	0xa
 1071 039b 31       		.byte	0x31
 1072 039c 0E       		.uleb128 0xe
 1073 039d 49020000 		.4byte	.LASF36
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 26


 1074 03a1 49020000 		.4byte	.LASF36
 1075 03a5 0A       		.byte	0xa
 1076 03a6 32       		.byte	0x32
 1077 03a7 0E       		.uleb128 0xe
 1078 03a8 33030000 		.4byte	.LASF37
 1079 03ac 33030000 		.4byte	.LASF37
 1080 03b0 0A       		.byte	0xa
 1081 03b1 35       		.byte	0x35
 1082 03b2 0E       		.uleb128 0xe
 1083 03b3 E3010000 		.4byte	.LASF38
 1084 03b7 E3010000 		.4byte	.LASF38
 1085 03bb 0A       		.byte	0xa
 1086 03bc 36       		.byte	0x36
 1087 03bd 0E       		.uleb128 0xe
 1088 03be EF010000 		.4byte	.LASF39
 1089 03c2 EF010000 		.4byte	.LASF39
 1090 03c6 0A       		.byte	0xa
 1091 03c7 37       		.byte	0x37
 1092 03c8 0E       		.uleb128 0xe
 1093 03c9 2E000000 		.4byte	.LASF40
 1094 03cd 2E000000 		.4byte	.LASF40
 1095 03d1 06       		.byte	0x6
 1096 03d2 12       		.byte	0x12
 1097 03d3 0E       		.uleb128 0xe
 1098 03d4 12000000 		.4byte	.LASF41
 1099 03d8 12000000 		.4byte	.LASF41
 1100 03dc 06       		.byte	0x6
 1101 03dd 13       		.byte	0x13
 1102 03de 0E       		.uleb128 0xe
 1103 03df 99010000 		.4byte	.LASF42
 1104 03e3 99010000 		.4byte	.LASF42
 1105 03e7 06       		.byte	0x6
 1106 03e8 14       		.byte	0x14
 1107 03e9 0E       		.uleb128 0xe
 1108 03ea 46000000 		.4byte	.LASF43
 1109 03ee 46000000 		.4byte	.LASF43
 1110 03f2 06       		.byte	0x6
 1111 03f3 15       		.byte	0x15
 1112 03f4 0E       		.uleb128 0xe
 1113 03f5 BF010000 		.4byte	.LASF44
 1114 03f9 BF010000 		.4byte	.LASF44
 1115 03fd 0B       		.byte	0xb
 1116 03fe 18       		.byte	0x18
 1117 03ff 0E       		.uleb128 0xe
 1118 0400 E4000000 		.4byte	.LASF45
 1119 0404 E4000000 		.4byte	.LASF45
 1120 0408 0B       		.byte	0xb
 1121 0409 19       		.byte	0x19
 1122 040a 0E       		.uleb128 0xe
 1123 040b D0010000 		.4byte	.LASF46
 1124 040f D0010000 		.4byte	.LASF46
 1125 0413 0B       		.byte	0xb
 1126 0414 1A       		.byte	0x1a
 1127 0415 0E       		.uleb128 0xe
 1128 0416 00000000 		.4byte	.LASF47
 1129 041a 00000000 		.4byte	.LASF47
 1130 041e 0B       		.byte	0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 27


 1131 041f 1B       		.byte	0x1b
 1132 0420 0E       		.uleb128 0xe
 1133 0421 83020000 		.4byte	.LASF48
 1134 0425 83020000 		.4byte	.LASF48
 1135 0429 0C       		.byte	0xc
 1136 042a 44       		.byte	0x44
 1137 042b 0E       		.uleb128 0xe
 1138 042c 0D010000 		.4byte	.LASF49
 1139 0430 0D010000 		.4byte	.LASF49
 1140 0434 0C       		.byte	0xc
 1141 0435 45       		.byte	0x45
 1142 0436 0E       		.uleb128 0xe
 1143 0437 09040000 		.4byte	.LASF50
 1144 043b 09040000 		.4byte	.LASF50
 1145 043f 0D       		.byte	0xd
 1146 0440 19       		.byte	0x19
 1147 0441 0E       		.uleb128 0xe
 1148 0442 45010000 		.4byte	.LASF51
 1149 0446 45010000 		.4byte	.LASF51
 1150 044a 0E       		.byte	0xe
 1151 044b 39       		.byte	0x39
 1152 044c 0E       		.uleb128 0xe
 1153 044d ED030000 		.4byte	.LASF52
 1154 0451 ED030000 		.4byte	.LASF52
 1155 0455 0E       		.byte	0xe
 1156 0456 3A       		.byte	0x3a
 1157 0457 0E       		.uleb128 0xe
 1158 0458 AE020000 		.4byte	.LASF53
 1159 045c AE020000 		.4byte	.LASF53
 1160 0460 0E       		.byte	0xe
 1161 0461 3B       		.byte	0x3b
 1162 0462 0E       		.uleb128 0xe
 1163 0463 52010000 		.4byte	.LASF54
 1164 0467 52010000 		.4byte	.LASF54
 1165 046b 0E       		.byte	0xe
 1166 046c 3C       		.byte	0x3c
 1167 046d 0E       		.uleb128 0xe
 1168 046e FB030000 		.4byte	.LASF55
 1169 0472 FB030000 		.4byte	.LASF55
 1170 0476 0E       		.byte	0xe
 1171 0477 3D       		.byte	0x3d
 1172 0478 0E       		.uleb128 0xe
 1173 0479 BC020000 		.4byte	.LASF56
 1174 047d BC020000 		.4byte	.LASF56
 1175 0481 0E       		.byte	0xe
 1176 0482 3E       		.byte	0x3e
 1177 0483 0E       		.uleb128 0xe
 1178 0484 38020000 		.4byte	.LASF57
 1179 0488 38020000 		.4byte	.LASF57
 1180 048c 0F       		.byte	0xf
 1181 048d 30       		.byte	0x30
 1182 048e 0E       		.uleb128 0xe
 1183 048f 6C020000 		.4byte	.LASF58
 1184 0493 6C020000 		.4byte	.LASF58
 1185 0497 0F       		.byte	0xf
 1186 0498 2F       		.byte	0x2f
 1187 0499 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 28


 1188              		.section	.debug_abbrev,"",%progbits
 1189              	.Ldebug_abbrev0:
 1190 0000 01       		.uleb128 0x1
 1191 0001 11       		.uleb128 0x11
 1192 0002 01       		.byte	0x1
 1193 0003 25       		.uleb128 0x25
 1194 0004 0E       		.uleb128 0xe
 1195 0005 13       		.uleb128 0x13
 1196 0006 0B       		.uleb128 0xb
 1197 0007 03       		.uleb128 0x3
 1198 0008 0E       		.uleb128 0xe
 1199 0009 1B       		.uleb128 0x1b
 1200 000a 0E       		.uleb128 0xe
 1201 000b 55       		.uleb128 0x55
 1202 000c 17       		.uleb128 0x17
 1203 000d 11       		.uleb128 0x11
 1204 000e 01       		.uleb128 0x1
 1205 000f 10       		.uleb128 0x10
 1206 0010 17       		.uleb128 0x17
 1207 0011 00       		.byte	0
 1208 0012 00       		.byte	0
 1209 0013 02       		.uleb128 0x2
 1210 0014 24       		.uleb128 0x24
 1211 0015 00       		.byte	0
 1212 0016 0B       		.uleb128 0xb
 1213 0017 0B       		.uleb128 0xb
 1214 0018 3E       		.uleb128 0x3e
 1215 0019 0B       		.uleb128 0xb
 1216 001a 03       		.uleb128 0x3
 1217 001b 0E       		.uleb128 0xe
 1218 001c 00       		.byte	0
 1219 001d 00       		.byte	0
 1220 001e 03       		.uleb128 0x3
 1221 001f 16       		.uleb128 0x16
 1222 0020 00       		.byte	0
 1223 0021 03       		.uleb128 0x3
 1224 0022 0E       		.uleb128 0xe
 1225 0023 3A       		.uleb128 0x3a
 1226 0024 0B       		.uleb128 0xb
 1227 0025 3B       		.uleb128 0x3b
 1228 0026 0B       		.uleb128 0xb
 1229 0027 49       		.uleb128 0x49
 1230 0028 13       		.uleb128 0x13
 1231 0029 00       		.byte	0
 1232 002a 00       		.byte	0
 1233 002b 04       		.uleb128 0x4
 1234 002c 24       		.uleb128 0x24
 1235 002d 00       		.byte	0
 1236 002e 0B       		.uleb128 0xb
 1237 002f 0B       		.uleb128 0xb
 1238 0030 3E       		.uleb128 0x3e
 1239 0031 0B       		.uleb128 0xb
 1240 0032 03       		.uleb128 0x3
 1241 0033 08       		.uleb128 0x8
 1242 0034 00       		.byte	0
 1243 0035 00       		.byte	0
 1244 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 29


 1245 0037 16       		.uleb128 0x16
 1246 0038 00       		.byte	0
 1247 0039 03       		.uleb128 0x3
 1248 003a 0E       		.uleb128 0xe
 1249 003b 3A       		.uleb128 0x3a
 1250 003c 0B       		.uleb128 0xb
 1251 003d 3B       		.uleb128 0x3b
 1252 003e 05       		.uleb128 0x5
 1253 003f 49       		.uleb128 0x49
 1254 0040 13       		.uleb128 0x13
 1255 0041 00       		.byte	0
 1256 0042 00       		.byte	0
 1257 0043 06       		.uleb128 0x6
 1258 0044 35       		.uleb128 0x35
 1259 0045 00       		.byte	0
 1260 0046 49       		.uleb128 0x49
 1261 0047 13       		.uleb128 0x13
 1262 0048 00       		.byte	0
 1263 0049 00       		.byte	0
 1264 004a 07       		.uleb128 0x7
 1265 004b 2E       		.uleb128 0x2e
 1266 004c 01       		.byte	0x1
 1267 004d 3F       		.uleb128 0x3f
 1268 004e 19       		.uleb128 0x19
 1269 004f 03       		.uleb128 0x3
 1270 0050 0E       		.uleb128 0xe
 1271 0051 3A       		.uleb128 0x3a
 1272 0052 0B       		.uleb128 0xb
 1273 0053 3B       		.uleb128 0x3b
 1274 0054 0B       		.uleb128 0xb
 1275 0055 27       		.uleb128 0x27
 1276 0056 19       		.uleb128 0x19
 1277 0057 11       		.uleb128 0x11
 1278 0058 01       		.uleb128 0x1
 1279 0059 12       		.uleb128 0x12
 1280 005a 06       		.uleb128 0x6
 1281 005b 40       		.uleb128 0x40
 1282 005c 18       		.uleb128 0x18
 1283 005d 9742     		.uleb128 0x2117
 1284 005f 19       		.uleb128 0x19
 1285 0060 01       		.uleb128 0x1
 1286 0061 13       		.uleb128 0x13
 1287 0062 00       		.byte	0
 1288 0063 00       		.byte	0
 1289 0064 08       		.uleb128 0x8
 1290 0065 34       		.uleb128 0x34
 1291 0066 00       		.byte	0
 1292 0067 03       		.uleb128 0x3
 1293 0068 0E       		.uleb128 0xe
 1294 0069 3A       		.uleb128 0x3a
 1295 006a 0B       		.uleb128 0xb
 1296 006b 3B       		.uleb128 0x3b
 1297 006c 0B       		.uleb128 0xb
 1298 006d 49       		.uleb128 0x49
 1299 006e 13       		.uleb128 0x13
 1300 006f 02       		.uleb128 0x2
 1301 0070 18       		.uleb128 0x18
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 30


 1302 0071 00       		.byte	0
 1303 0072 00       		.byte	0
 1304 0073 09       		.uleb128 0x9
 1305 0074 898201   		.uleb128 0x4109
 1306 0077 00       		.byte	0
 1307 0078 11       		.uleb128 0x11
 1308 0079 01       		.uleb128 0x1
 1309 007a 31       		.uleb128 0x31
 1310 007b 13       		.uleb128 0x13
 1311 007c 00       		.byte	0
 1312 007d 00       		.byte	0
 1313 007e 0A       		.uleb128 0xa
 1314 007f 898201   		.uleb128 0x4109
 1315 0082 01       		.byte	0x1
 1316 0083 11       		.uleb128 0x11
 1317 0084 01       		.uleb128 0x1
 1318 0085 31       		.uleb128 0x31
 1319 0086 13       		.uleb128 0x13
 1320 0087 01       		.uleb128 0x1
 1321 0088 13       		.uleb128 0x13
 1322 0089 00       		.byte	0
 1323 008a 00       		.byte	0
 1324 008b 0B       		.uleb128 0xb
 1325 008c 8A8201   		.uleb128 0x410a
 1326 008f 00       		.byte	0
 1327 0090 02       		.uleb128 0x2
 1328 0091 18       		.uleb128 0x18
 1329 0092 9142     		.uleb128 0x2111
 1330 0094 18       		.uleb128 0x18
 1331 0095 00       		.byte	0
 1332 0096 00       		.byte	0
 1333 0097 0C       		.uleb128 0xc
 1334 0098 2E       		.uleb128 0x2e
 1335 0099 01       		.byte	0x1
 1336 009a 3F       		.uleb128 0x3f
 1337 009b 19       		.uleb128 0x19
 1338 009c 03       		.uleb128 0x3
 1339 009d 0E       		.uleb128 0xe
 1340 009e 3A       		.uleb128 0x3a
 1341 009f 0B       		.uleb128 0xb
 1342 00a0 3B       		.uleb128 0x3b
 1343 00a1 05       		.uleb128 0x5
 1344 00a2 27       		.uleb128 0x27
 1345 00a3 19       		.uleb128 0x19
 1346 00a4 11       		.uleb128 0x11
 1347 00a5 01       		.uleb128 0x1
 1348 00a6 12       		.uleb128 0x12
 1349 00a7 06       		.uleb128 0x6
 1350 00a8 40       		.uleb128 0x40
 1351 00a9 18       		.uleb128 0x18
 1352 00aa 9742     		.uleb128 0x2117
 1353 00ac 19       		.uleb128 0x19
 1354 00ad 01       		.uleb128 0x1
 1355 00ae 13       		.uleb128 0x13
 1356 00af 00       		.byte	0
 1357 00b0 00       		.byte	0
 1358 00b1 0D       		.uleb128 0xd
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 31


 1359 00b2 34       		.uleb128 0x34
 1360 00b3 00       		.byte	0
 1361 00b4 03       		.uleb128 0x3
 1362 00b5 0E       		.uleb128 0xe
 1363 00b6 3A       		.uleb128 0x3a
 1364 00b7 0B       		.uleb128 0xb
 1365 00b8 3B       		.uleb128 0x3b
 1366 00b9 05       		.uleb128 0x5
 1367 00ba 49       		.uleb128 0x49
 1368 00bb 13       		.uleb128 0x13
 1369 00bc 3F       		.uleb128 0x3f
 1370 00bd 19       		.uleb128 0x19
 1371 00be 3C       		.uleb128 0x3c
 1372 00bf 19       		.uleb128 0x19
 1373 00c0 00       		.byte	0
 1374 00c1 00       		.byte	0
 1375 00c2 0E       		.uleb128 0xe
 1376 00c3 2E       		.uleb128 0x2e
 1377 00c4 00       		.byte	0
 1378 00c5 3F       		.uleb128 0x3f
 1379 00c6 19       		.uleb128 0x19
 1380 00c7 3C       		.uleb128 0x3c
 1381 00c8 19       		.uleb128 0x19
 1382 00c9 6E       		.uleb128 0x6e
 1383 00ca 0E       		.uleb128 0xe
 1384 00cb 03       		.uleb128 0x3
 1385 00cc 0E       		.uleb128 0xe
 1386 00cd 3A       		.uleb128 0x3a
 1387 00ce 0B       		.uleb128 0xb
 1388 00cf 3B       		.uleb128 0x3b
 1389 00d0 0B       		.uleb128 0xb
 1390 00d1 00       		.byte	0
 1391 00d2 00       		.byte	0
 1392 00d3 00       		.byte	0
 1393              		.section	.debug_aranges,"",%progbits
 1394 0000 2C000000 		.4byte	0x2c
 1395 0004 0200     		.2byte	0x2
 1396 0006 00000000 		.4byte	.Ldebug_info0
 1397 000a 04       		.byte	0x4
 1398 000b 00       		.byte	0
 1399 000c 0000     		.2byte	0
 1400 000e 0000     		.2byte	0
 1401 0010 00000000 		.4byte	.LFB63
 1402 0014 AE030000 		.4byte	.LFE63-.LFB63
 1403 0018 00000000 		.4byte	.LFB64
 1404 001c 12000000 		.4byte	.LFE64-.LFB64
 1405 0020 00000000 		.4byte	.LFB65
 1406 0024 0E000000 		.4byte	.LFE65-.LFB65
 1407 0028 00000000 		.4byte	0
 1408 002c 00000000 		.4byte	0
 1409              		.section	.debug_ranges,"",%progbits
 1410              	.Ldebug_ranges0:
 1411 0000 00000000 		.4byte	.LFB63
 1412 0004 AE030000 		.4byte	.LFE63
 1413 0008 00000000 		.4byte	.LFB64
 1414 000c 12000000 		.4byte	.LFE64
 1415 0010 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 32


 1416 0014 0E000000 		.4byte	.LFE65
 1417 0018 00000000 		.4byte	0
 1418 001c 00000000 		.4byte	0
 1419              		.section	.debug_line,"",%progbits
 1420              	.Ldebug_line0:
 1421 0000 D6020000 		.section	.debug_str,"MS",%progbits,1
 1421      02002302 
 1421      00000201 
 1421      FB0E0D00 
 1421      01010101 
 1422              	.LASF47:
 1423 0000 4D363835 		.ascii	"M6850_2_WriteCtrl\000"
 1423      305F325F 
 1423      57726974 
 1423      65437472 
 1423      6C00
 1424              	.LASF41:
 1425 0012 4D363835 		.ascii	"M6850WriteData\000"
 1425      30577269 
 1425      74654461 
 1425      746100
 1426              	.LASF17:
 1427 0021 696F4372 		.ascii	"ioCrtlRegVal\000"
 1427      746C5265 
 1427      6756616C 
 1427      00
 1428              	.LASF40:
 1429 002e 4D363835 		.ascii	"M6850ReadData\000"
 1429      30526561 
 1429      64446174 
 1429      6100
 1430              	.LASF2:
 1431 003c 73686F72 		.ascii	"short int\000"
 1431      7420696E 
 1431      7400
 1432              	.LASF43:
 1433 0046 4D363835 		.ascii	"M6850WriteCtrl\000"
 1433      30577269 
 1433      74654374 
 1433      726C00
 1434              	.LASF16:
 1435 0055 73697A65 		.ascii	"sizetype\000"
 1435      74797065 
 1435      00
 1436              	.LASF61:
 1437 005e 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\Doug Gillilan"
 1437      73657273 
 1437      5C48507A 
 1437      3432305C 
 1437      446F6375 
 1438 008c 645C5265 		.ascii	"d\\Retro-Computers\\Z80\\PSOC\\PSOC_Design_Files\\Z"
 1438      74726F2D 
 1438      436F6D70 
 1438      75746572 
 1438      735C5A38 
 1439 00ba 38302D50 		.ascii	"80-PSoC-3-Chips_002\\Z80_3Chip.cydsn\000"
 1439      536F432D 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 33


 1439      332D4368 
 1439      6970735F 
 1439      3030325C 
 1440              	.LASF20:
 1441 00de 61636B49 		.ascii	"ackIO\000"
 1441      4F00
 1442              	.LASF45:
 1443 00e4 4D363835 		.ascii	"M6850_2_WriteData\000"
 1443      305F325F 
 1443      57726974 
 1443      65446174 
 1443      6100
 1444              	.LASF35:
 1445 00f6 53445265 		.ascii	"SDReadData\000"
 1445      61644461 
 1445      746100
 1446              	.LASF19:
 1447 0101 48616E64 		.ascii	"HandleZ80IO\000"
 1447      6C655A38 
 1447      30494F00 
 1448              	.LASF49:
 1449 010d 46726F6E 		.ascii	"FrontPanelZ80Write\000"
 1449      7450616E 
 1449      656C5A38 
 1449      30577269 
 1449      746500
 1450              	.LASF28:
 1451 0120 77726974 		.ascii	"writeCmdRTC\000"
 1451      65436D64 
 1451      52544300 
 1452              	.LASF18:
 1453 012c 696F5A38 		.ascii	"ioZ80Addr\000"
 1453      30416464 
 1453      7200
 1454              	.LASF34:
 1455 0136 53445772 		.ascii	"SDWriteCommand\000"
 1455      69746543 
 1455      6F6D6D61 
 1455      6E6400
 1456              	.LASF51:
 1457 0145 50696F52 		.ascii	"PioReadDataA\000"
 1457      65616444 
 1457      61746141 
 1457      00
 1458              	.LASF54:
 1459 0152 50696F52 		.ascii	"PioReadDataB\000"
 1459      65616444 
 1459      61746142 
 1459      00
 1460              	.LASF25:
 1461 015f 72656164 		.ascii	"readRTC\000"
 1461      52544300 
 1462              	.LASF12:
 1463 0167 666C6F61 		.ascii	"float\000"
 1463      7400
 1464              	.LASF6:
 1465 016d 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 34


 1465      206C6F6E 
 1465      6720696E 
 1465      7400
 1466              	.LASF24:
 1467 017b 4164724C 		.ascii	"AdrLowIn_Read\000"
 1467      6F77496E 
 1467      5F526561 
 1467      6400
 1468              	.LASF23:
 1469 0189 4D363835 		.ascii	"M6850ReadIntReg\000"
 1469      30526561 
 1469      64496E74 
 1469      52656700 
 1470              	.LASF42:
 1471 0199 4D363835 		.ascii	"M6850ReadStatus\000"
 1471      30526561 
 1471      64537461 
 1471      74757300 
 1472              	.LASF4:
 1473 01a9 6C6F6E67 		.ascii	"long int\000"
 1473      20696E74 
 1473      00
 1474              	.LASF21:
 1475 01b2 77616974 		.ascii	"waitNextIORq\000"
 1475      4E657874 
 1475      494F5271 
 1475      00
 1476              	.LASF44:
 1477 01bf 4D363835 		.ascii	"M6850_2_ReadData\000"
 1477      305F325F 
 1477      52656164 
 1477      44617461 
 1477      00
 1478              	.LASF46:
 1479 01d0 4D363835 		.ascii	"M6850_2_ReadStatus\000"
 1479      305F325F 
 1479      52656164 
 1479      53746174 
 1479      757300
 1480              	.LASF38:
 1481 01e3 53445772 		.ascii	"SDWriteLBA1\000"
 1481      6974654C 
 1481      42413100 
 1482              	.LASF39:
 1483 01ef 53445772 		.ascii	"SDWriteLBA2\000"
 1483      6974654C 
 1483      42413200 
 1484              	.LASF15:
 1485 01fb 6C6F6E67 		.ascii	"long double\000"
 1485      20646F75 
 1485      626C6500 
 1486              	.LASF1:
 1487 0207 756E7369 		.ascii	"unsigned char\000"
 1487      676E6564 
 1487      20636861 
 1487      7200
 1488              	.LASF0:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 35


 1489 0215 7369676E 		.ascii	"signed char\000"
 1489      65642063 
 1489      68617200 
 1490              	.LASF7:
 1491 0221 6C6F6E67 		.ascii	"long long unsigned int\000"
 1491      206C6F6E 
 1491      6720756E 
 1491      7369676E 
 1491      65642069 
 1492              	.LASF57:
 1493 0238 494F5F43 		.ascii	"IO_Ctrl_Reg_Read\000"
 1493      74726C5F 
 1493      5265675F 
 1493      52656164 
 1493      00
 1494              	.LASF36:
 1495 0249 53445772 		.ascii	"SDWriteData\000"
 1495      69746544 
 1495      61746100 
 1496              	.LASF31:
 1497 0255 72656164 		.ascii	"readStatDAC\000"
 1497      53746174 
 1497      44414300 
 1498              	.LASF27:
 1499 0261 72656164 		.ascii	"readCmdRTC\000"
 1499      436D6452 
 1499      544300
 1500              	.LASF58:
 1501 026c 494F5F43 		.ascii	"IO_Ctrl_Reg_Write\000"
 1501      74726C5F 
 1501      5265675F 
 1501      57726974 
 1501      6500
 1502              	.LASF14:
 1503 027e 63686172 		.ascii	"char\000"
 1503      00
 1504              	.LASF48:
 1505 0283 46726F6E 		.ascii	"FrontPanelZ80Read\000"
 1505      7450616E 
 1505      656C5A38 
 1505      30526561 
 1505      6400
 1506              	.LASF10:
 1507 0295 696E7433 		.ascii	"int32_t\000"
 1507      325F7400 
 1508              	.LASF22:
 1509 029d 494F5F53 		.ascii	"IO_Stat_Reg_Read\000"
 1509      7461745F 
 1509      5265675F 
 1509      52656164 
 1509      00
 1510              	.LASF53:
 1511 02ae 50696F57 		.ascii	"PioWriteCtrlA\000"
 1511      72697465 
 1511      4374726C 
 1511      4100
 1512              	.LASF56:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 36


 1513 02bc 50696F57 		.ascii	"PioWriteCtrlB\000"
 1513      72697465 
 1513      4374726C 
 1513      4200
 1514              	.LASF3:
 1515 02ca 73686F72 		.ascii	"short unsigned int\000"
 1515      7420756E 
 1515      7369676E 
 1515      65642069 
 1515      6E7400
 1516              	.LASF33:
 1517 02dd 53445265 		.ascii	"SDReadStatus\000"
 1517      61645374 
 1517      61747573 
 1517      00
 1518              	.LASF5:
 1519 02ea 6C6F6E67 		.ascii	"long unsigned int\000"
 1519      20756E73 
 1519      69676E65 
 1519      6420696E 
 1519      7400
 1520              	.LASF13:
 1521 02fc 646F7562 		.ascii	"double\000"
 1521      6C6500
 1522              	.LASF32:
 1523 0303 77726974 		.ascii	"writeCmdDAC\000"
 1523      65436D64 
 1523      44414300 
 1524              	.LASF30:
 1525 030f 77726974 		.ascii	"writeDAC\000"
 1525      65444143 
 1525      00
 1526              	.LASF9:
 1527 0318 5F5F696E 		.ascii	"__int32_t\000"
 1527      7433325F 
 1527      7400
 1528              	.LASF26:
 1529 0322 77726974 		.ascii	"writeRTC\000"
 1529      65525443 
 1529      00
 1530              	.LASF29:
 1531 032b 72656164 		.ascii	"readDAC\000"
 1531      44414300 
 1532              	.LASF37:
 1533 0333 53445772 		.ascii	"SDWriteLBA0\000"
 1533      6974654C 
 1533      42413000 
 1534              	.LASF11:
 1535 033f 75696E74 		.ascii	"uint8\000"
 1535      3800
 1536              	.LASF62:
 1537 0345 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1537      52784275 
 1537      66666572 
 1537      00
 1538              	.LASF59:
 1539 0352 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccndbe46.s 			page 37


 1539      43313120 
 1539      352E342E 
 1539      31203230 
 1539      31363036 
 1540 0385 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1540      20726576 
 1540      6973696F 
 1540      6E203233 
 1540      37373135 
 1541 03b8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1541      66756E63 
 1541      74696F6E 
 1541      2D736563 
 1541      74696F6E 
 1542              	.LASF8:
 1543 03e0 756E7369 		.ascii	"unsigned int\000"
 1543      676E6564 
 1543      20696E74 
 1543      00
 1544              	.LASF52:
 1545 03ed 50696F57 		.ascii	"PioWriteDataA\000"
 1545      72697465 
 1545      44617461 
 1545      4100
 1546              	.LASF55:
 1547 03fb 50696F57 		.ascii	"PioWriteDataB\000"
 1547      72697465 
 1547      44617461 
 1547      4200
 1548              	.LASF50:
 1549 0409 73776170 		.ascii	"swap_out_ROM_space\000"
 1549      5F6F7574 
 1549      5F524F4D 
 1549      5F737061 
 1549      636500
 1550              	.LASF60:
 1551 041c 5A38305F 		.ascii	"Z80_IO_Handle.c\000"
 1551      494F5F48 
 1551      616E646C 
 1551      652E6300 
 1552              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
