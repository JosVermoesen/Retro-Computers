ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Z80_IO_Handle.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HandleZ80IO,"ax",%progbits
  20              		.align	2
  21              		.global	HandleZ80IO
  22              		.thumb
  23              		.thumb_func
  24              		.type	HandleZ80IO, %function
  25              	HandleZ80IO:
  26              	.LFB63:
  27              		.file 1 "Z80_IO_Handle.c"
   1:Z80_IO_Handle.c **** /* ========================================
   2:Z80_IO_Handle.c ****  *
   3:Z80_IO_Handle.c ****  * Copyright LAND BOARDS, LLC, 2019
   4:Z80_IO_Handle.c ****  * All Rights Reserved
   5:Z80_IO_Handle.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Z80_IO_Handle.c ****  *
   7:Z80_IO_Handle.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Z80_IO_Handle.c ****  * WHICH IS THE PROPERTY OF Land Boards, LLC.
   9:Z80_IO_Handle.c ****  *
  10:Z80_IO_Handle.c ****  * ========================================
  11:Z80_IO_Handle.c **** */
  12:Z80_IO_Handle.c **** 
  13:Z80_IO_Handle.c **** #include <project.h>
  14:Z80_IO_Handle.c **** #include "FrontPanel.h"
  15:Z80_IO_Handle.c **** #include "Z80_IO_Handle.h"
  16:Z80_IO_Handle.c **** #include "Z80_SIO_emul.h"
  17:Z80_IO_Handle.c **** #include "Z80_PIO_emul.h"
  18:Z80_IO_Handle.c **** #include "Z80_6850_Emul.h"
  19:Z80_IO_Handle.c **** #include "Z80_CFCard_Emul.h"
  20:Z80_IO_Handle.c **** #include "Hardware_Config.h"
  21:Z80_IO_Handle.c **** 
  22:Z80_IO_Handle.c **** void HandleZ80IO(void)
  23:Z80_IO_Handle.c **** {
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 2


  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  24:Z80_IO_Handle.c ****     volatile uint8 ioCrtlRegVal;
  25:Z80_IO_Handle.c ****     volatile uint8 ioZ80Addr;
  26:Z80_IO_Handle.c ****     
  27:Z80_IO_Handle.c ****     ioCrtlRegVal = IO_Stat_Reg_Read();
  37              		.loc 1 27 0
  38 0004 FFF7FEFF 		bl	IO_Stat_Reg_Read
  39              	.LVL0:
  40 0008 8DF80700 		strb	r0, [sp, #7]
  28:Z80_IO_Handle.c **** #ifdef USING_SIO
  29:Z80_IO_Handle.c ****     if ((ioCrtlRegVal & IACK_MASK) == IN_IACK_CYCLE)
  41              		.loc 1 29 0
  42 000c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  43 0010 03F01903 		and	r3, r3, #25
  44 0014 102B     		cmp	r3, #16
  45 0016 02D1     		bne	.L2
  30:Z80_IO_Handle.c ****     {
  31:Z80_IO_Handle.c ****         SioReadIntRegB();
  46              		.loc 1 31 0
  47 0018 FFF7FEFF 		bl	SioReadIntRegB
  48              	.LVL1:
  32:Z80_IO_Handle.c ****         return;
  49              		.loc 1 32 0
  50 001c 26E1     		b	.L1
  51              	.L2:
  33:Z80_IO_Handle.c ****     }
  34:Z80_IO_Handle.c **** #endif
  35:Z80_IO_Handle.c **** #ifdef USING_6850
  36:Z80_IO_Handle.c ****     if ((ioCrtlRegVal & IACK_MASK) == IN_IACK_CYCLE)
  37:Z80_IO_Handle.c ****     {
  38:Z80_IO_Handle.c ****         M6850ReadIntReg();
  39:Z80_IO_Handle.c ****         return;
  40:Z80_IO_Handle.c ****     }
  41:Z80_IO_Handle.c **** #endif
  42:Z80_IO_Handle.c ****     ioZ80Addr = AdrLowIn_Read();
  52              		.loc 1 42 0
  53 001e FFF7FEFF 		bl	AdrLowIn_Read
  54              	.LVL2:
  55 0022 8DF80600 		strb	r0, [sp, #6]
  43:Z80_IO_Handle.c ****     switch (ioZ80Addr)
  56              		.loc 1 43 0
  57 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
  58 002a DBB2     		uxtb	r3, r3
  59 002c 1B2B     		cmp	r3, #27
  60 002e 00F21D81 		bhi	.L1
  61 0032 DFE813F0 		tbh	[pc, r3, lsl #1]
  62              	.L5:
  63 0036 1C00     		.2byte	(.L4-.L5)/2
  64 0038 3600     		.2byte	(.L6-.L5)/2
  65 003a 2D00     		.2byte	(.L7-.L5)/2
  66 003c 4700     		.2byte	(.L8-.L5)/2
  67 003e 1B01     		.2byte	(.L1-.L5)/2
  68 0040 1B01     		.2byte	(.L1-.L5)/2
  69 0042 1B01     		.2byte	(.L1-.L5)/2
  70 0044 1B01     		.2byte	(.L1-.L5)/2
  71 0046 1B01     		.2byte	(.L1-.L5)/2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 3


  72 0048 1B01     		.2byte	(.L1-.L5)/2
  73 004a 1B01     		.2byte	(.L1-.L5)/2
  74 004c 1B01     		.2byte	(.L1-.L5)/2
  75 004e 1B01     		.2byte	(.L1-.L5)/2
  76 0050 1B01     		.2byte	(.L1-.L5)/2
  77 0052 1B01     		.2byte	(.L1-.L5)/2
  78 0054 1B01     		.2byte	(.L1-.L5)/2
  79 0056 5000     		.2byte	(.L9-.L5)/2
  80 0058 6100     		.2byte	(.L10-.L5)/2
  81 005a 7200     		.2byte	(.L11-.L5)/2
  82 005c 8300     		.2byte	(.L12-.L5)/2
  83 005e 9400     		.2byte	(.L13-.L5)/2
  84 0060 A400     		.2byte	(.L14-.L5)/2
  85 0062 B400     		.2byte	(.L15-.L5)/2
  86 0064 C400     		.2byte	(.L16-.L5)/2
  87 0066 D400     		.2byte	(.L17-.L5)/2
  88 0068 E600     		.2byte	(.L18-.L5)/2
  89 006a F800     		.2byte	(.L19-.L5)/2
  90 006c 0A01     		.2byte	(.L20-.L5)/2
  91              		.p2align 1
  92              	.L4:
  44:Z80_IO_Handle.c ****     {
  45:Z80_IO_Handle.c **** #ifdef USING_SIO
  46:Z80_IO_Handle.c ****         case SIOA_D:
  47:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
  93              		.loc 1 47 0
  94 006e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  95 0072 DBB2     		uxtb	r3, r3
  96 0074 1C2B     		cmp	r3, #28
  97 0076 02D1     		bne	.L21
  48:Z80_IO_Handle.c ****             {
  49:Z80_IO_Handle.c ****                 SioReadDataA();
  98              		.loc 1 49 0
  99 0078 FFF7FEFF 		bl	SioReadDataA
 100              	.LVL3:
  50:Z80_IO_Handle.c ****                 return;
 101              		.loc 1 50 0
 102 007c F6E0     		b	.L1
 103              	.L21:
  51:Z80_IO_Handle.c ****             }
  52:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 104              		.loc 1 52 0
 105 007e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 106 0082 DBB2     		uxtb	r3, r3
 107 0084 1A2B     		cmp	r3, #26
 108 0086 40F0F180 		bne	.L1
  53:Z80_IO_Handle.c ****             {
  54:Z80_IO_Handle.c ****                 SioWriteDataA();
 109              		.loc 1 54 0
 110 008a FFF7FEFF 		bl	SioWriteDataA
 111              	.LVL4:
  55:Z80_IO_Handle.c ****                 return;
 112              		.loc 1 55 0
 113 008e EDE0     		b	.L1
 114              	.L7:
  56:Z80_IO_Handle.c ****             }
  57:Z80_IO_Handle.c ****             break;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 4


  58:Z80_IO_Handle.c ****         case SIOA_C:    // Control register
  59:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 115              		.loc 1 59 0
 116 0090 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 117 0094 DBB2     		uxtb	r3, r3
 118 0096 1A2B     		cmp	r3, #26
 119 0098 40F0E880 		bne	.L1
  60:Z80_IO_Handle.c ****             {
  61:Z80_IO_Handle.c ****                 SioWriteCtrlA();
 120              		.loc 1 61 0
 121 009c FFF7FEFF 		bl	SioWriteCtrlA
 122              	.LVL5:
  62:Z80_IO_Handle.c ****                 return;
 123              		.loc 1 62 0
 124 00a0 E4E0     		b	.L1
 125              	.L6:
  63:Z80_IO_Handle.c ****             }
  64:Z80_IO_Handle.c ****             break;
  65:Z80_IO_Handle.c ****         case SIOB_D:
  66:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 126              		.loc 1 66 0
 127 00a2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 128 00a6 DBB2     		uxtb	r3, r3
 129 00a8 1C2B     		cmp	r3, #28
 130 00aa 02D1     		bne	.L22
  67:Z80_IO_Handle.c ****             {
  68:Z80_IO_Handle.c ****                 SioReadDataB();
 131              		.loc 1 68 0
 132 00ac FFF7FEFF 		bl	SioReadDataB
 133              	.LVL6:
  69:Z80_IO_Handle.c ****                 return;
 134              		.loc 1 69 0
 135 00b0 DCE0     		b	.L1
 136              	.L22:
  70:Z80_IO_Handle.c ****             }
  71:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 137              		.loc 1 71 0
 138 00b2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 139 00b6 DBB2     		uxtb	r3, r3
 140 00b8 1A2B     		cmp	r3, #26
 141 00ba 40F0D780 		bne	.L1
  72:Z80_IO_Handle.c ****             {
  73:Z80_IO_Handle.c ****                 SioWriteDataB();
 142              		.loc 1 73 0
 143 00be FFF7FEFF 		bl	SioWriteDataB
 144              	.LVL7:
  74:Z80_IO_Handle.c ****                 return;
 145              		.loc 1 74 0
 146 00c2 D3E0     		b	.L1
 147              	.L8:
  75:Z80_IO_Handle.c ****             }
  76:Z80_IO_Handle.c ****             break;
  77:Z80_IO_Handle.c ****         case SIOB_C:
  78:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 148              		.loc 1 78 0
 149 00c4 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 150 00c8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 5


 151 00ca 1A2B     		cmp	r3, #26
 152 00cc 40F0CE80 		bne	.L1
  79:Z80_IO_Handle.c ****             {
  80:Z80_IO_Handle.c ****                 SioWriteCtrlB();
 153              		.loc 1 80 0
 154 00d0 FFF7FEFF 		bl	SioWriteCtrlB
 155              	.LVL8:
  81:Z80_IO_Handle.c ****                 return;
 156              		.loc 1 81 0
 157 00d4 CAE0     		b	.L1
 158              	.L9:
  82:Z80_IO_Handle.c ****             }
  83:Z80_IO_Handle.c ****             break;
  84:Z80_IO_Handle.c **** #endif
  85:Z80_IO_Handle.c **** #ifdef USING_CFCARD
  86:Z80_IO_Handle.c ****         case CF_DATA:           // 0x10
  87:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 159              		.loc 1 87 0
 160 00d6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 161 00da DBB2     		uxtb	r3, r3
 162 00dc 1C2B     		cmp	r3, #28
 163 00de 02D1     		bne	.L23
  88:Z80_IO_Handle.c ****             {
  89:Z80_IO_Handle.c ****                 CFReadData();
 164              		.loc 1 89 0
 165 00e0 FFF7FEFF 		bl	CFReadData
 166              	.LVL9:
 167 00e4 C2E0     		b	.L1
 168              	.L23:
  90:Z80_IO_Handle.c ****             }
  91:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 169              		.loc 1 91 0
 170 00e6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 171 00ea DBB2     		uxtb	r3, r3
 172 00ec 1A2B     		cmp	r3, #26
 173 00ee 40F0BD80 		bne	.L1
  92:Z80_IO_Handle.c ****             {
  93:Z80_IO_Handle.c ****                 CFWriteData();
 174              		.loc 1 93 0
 175 00f2 FFF7FEFF 		bl	CFWriteData
 176              	.LVL10:
 177 00f6 B9E0     		b	.L1
 178              	.L10:
  94:Z80_IO_Handle.c ****             }
  95:Z80_IO_Handle.c ****             break;
  96:Z80_IO_Handle.c ****         case CF_FEATURES_ERROR: // 0x11
  97:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 179              		.loc 1 97 0
 180 00f8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 181 00fc DBB2     		uxtb	r3, r3
 182 00fe 1C2B     		cmp	r3, #28
 183 0100 02D1     		bne	.L24
  98:Z80_IO_Handle.c ****             {
  99:Z80_IO_Handle.c ****                 CFReadErrorStat();
 184              		.loc 1 99 0
 185 0102 FFF7FEFF 		bl	CFReadErrorStat
 186              	.LVL11:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 6


 187 0106 B1E0     		b	.L1
 188              	.L24:
 100:Z80_IO_Handle.c ****             }
 101:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 189              		.loc 1 101 0
 190 0108 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 191 010c DBB2     		uxtb	r3, r3
 192 010e 1A2B     		cmp	r3, #26
 193 0110 40F0AC80 		bne	.L1
 102:Z80_IO_Handle.c ****             {
 103:Z80_IO_Handle.c ****                 CFWriteFeatures();
 194              		.loc 1 103 0
 195 0114 FFF7FEFF 		bl	CFWriteFeatures
 196              	.LVL12:
 197 0118 A8E0     		b	.L1
 198              	.L11:
 104:Z80_IO_Handle.c ****             }
 105:Z80_IO_Handle.c ****             break;
 106:Z80_IO_Handle.c ****         case CF_SECCOUNT:       // 0x12
 107:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 199              		.loc 1 107 0
 200 011a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 201 011e DBB2     		uxtb	r3, r3
 202 0120 1C2B     		cmp	r3, #28
 203 0122 02D1     		bne	.L25
 108:Z80_IO_Handle.c ****             {
 109:Z80_IO_Handle.c ****                 CFReadSectorCount();
 204              		.loc 1 109 0
 205 0124 FFF7FEFF 		bl	CFReadSectorCount
 206              	.LVL13:
 207 0128 A0E0     		b	.L1
 208              	.L25:
 110:Z80_IO_Handle.c ****             }
 111:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 209              		.loc 1 111 0
 210 012a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 211 012e DBB2     		uxtb	r3, r3
 212 0130 1A2B     		cmp	r3, #26
 213 0132 40F09B80 		bne	.L1
 112:Z80_IO_Handle.c ****             {
 113:Z80_IO_Handle.c ****                 CFWriteSectorCount();
 214              		.loc 1 113 0
 215 0136 FFF7FEFF 		bl	CFWriteSectorCount
 216              	.LVL14:
 217 013a 97E0     		b	.L1
 218              	.L12:
 114:Z80_IO_Handle.c ****             }
 115:Z80_IO_Handle.c ****             break;
 116:Z80_IO_Handle.c ****         case CF_SECTOR_LAB0:    // 0x13
 117:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 219              		.loc 1 117 0
 220 013c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 221 0140 DBB2     		uxtb	r3, r3
 222 0142 1C2B     		cmp	r3, #28
 223 0144 02D1     		bne	.L26
 118:Z80_IO_Handle.c ****             {
 119:Z80_IO_Handle.c ****                 CFReadSector();
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 7


 224              		.loc 1 119 0
 225 0146 FFF7FEFF 		bl	CFReadSector
 226              	.LVL15:
 227 014a 8FE0     		b	.L1
 228              	.L26:
 120:Z80_IO_Handle.c ****             }
 121:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 229              		.loc 1 121 0
 230 014c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 231 0150 DBB2     		uxtb	r3, r3
 232 0152 1A2B     		cmp	r3, #26
 233 0154 40F08A80 		bne	.L1
 122:Z80_IO_Handle.c ****             {
 123:Z80_IO_Handle.c ****                 CFWriteLBA0();
 234              		.loc 1 123 0
 235 0158 FFF7FEFF 		bl	CFWriteLBA0
 236              	.LVL16:
 237 015c 86E0     		b	.L1
 238              	.L13:
 124:Z80_IO_Handle.c ****             }
 125:Z80_IO_Handle.c ****             break;
 126:Z80_IO_Handle.c ****         case CF_CYL_LOW_LBA1:   // 0x14
 127:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 239              		.loc 1 127 0
 240 015e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 241 0162 DBB2     		uxtb	r3, r3
 242 0164 1C2B     		cmp	r3, #28
 243 0166 02D1     		bne	.L27
 128:Z80_IO_Handle.c ****             {
 129:Z80_IO_Handle.c ****                 CFReadCylLow();
 244              		.loc 1 129 0
 245 0168 FFF7FEFF 		bl	CFReadCylLow
 246              	.LVL17:
 247 016c 7EE0     		b	.L1
 248              	.L27:
 130:Z80_IO_Handle.c ****             }
 131:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 249              		.loc 1 131 0
 250 016e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 251 0172 DBB2     		uxtb	r3, r3
 252 0174 1A2B     		cmp	r3, #26
 253 0176 79D1     		bne	.L1
 132:Z80_IO_Handle.c ****             {
 133:Z80_IO_Handle.c ****                 CFWriteLBA1();
 254              		.loc 1 133 0
 255 0178 FFF7FEFF 		bl	CFWriteLBA1
 256              	.LVL18:
 257 017c 76E0     		b	.L1
 258              	.L14:
 134:Z80_IO_Handle.c ****             }
 135:Z80_IO_Handle.c ****             break;
 136:Z80_IO_Handle.c ****         case CF_CYL_HI_LBA2:    // 0x15
 137:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 259              		.loc 1 137 0
 260 017e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 261 0182 DBB2     		uxtb	r3, r3
 262 0184 1C2B     		cmp	r3, #28
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 8


 263 0186 02D1     		bne	.L28
 138:Z80_IO_Handle.c ****             {
 139:Z80_IO_Handle.c ****                 CFReadCylHigh();
 264              		.loc 1 139 0
 265 0188 FFF7FEFF 		bl	CFReadCylHigh
 266              	.LVL19:
 267 018c 6EE0     		b	.L1
 268              	.L28:
 140:Z80_IO_Handle.c ****             }
 141:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 269              		.loc 1 141 0
 270 018e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 271 0192 DBB2     		uxtb	r3, r3
 272 0194 1A2B     		cmp	r3, #26
 273 0196 69D1     		bne	.L1
 142:Z80_IO_Handle.c ****             {
 143:Z80_IO_Handle.c ****                 CFWriteLBA2();
 274              		.loc 1 143 0
 275 0198 FFF7FEFF 		bl	CFWriteLBA2
 276              	.LVL20:
 277 019c 66E0     		b	.L1
 278              	.L15:
 144:Z80_IO_Handle.c ****             }
 145:Z80_IO_Handle.c ****             break;
 146:Z80_IO_Handle.c ****         case CF_HEAD_LBA3:    // 0x16
 147:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 279              		.loc 1 147 0
 280 019e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 281 01a2 DBB2     		uxtb	r3, r3
 282 01a4 1C2B     		cmp	r3, #28
 283 01a6 02D1     		bne	.L29
 148:Z80_IO_Handle.c ****             {
 149:Z80_IO_Handle.c ****                 CFReadHead();
 284              		.loc 1 149 0
 285 01a8 FFF7FEFF 		bl	CFReadHead
 286              	.LVL21:
 287 01ac 5EE0     		b	.L1
 288              	.L29:
 150:Z80_IO_Handle.c ****             }
 151:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 289              		.loc 1 151 0
 290 01ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 291 01b2 DBB2     		uxtb	r3, r3
 292 01b4 1A2B     		cmp	r3, #26
 293 01b6 59D1     		bne	.L1
 152:Z80_IO_Handle.c ****             {
 153:Z80_IO_Handle.c ****                 CFWriteLBA3();
 294              		.loc 1 153 0
 295 01b8 FFF7FEFF 		bl	CFWriteLBA3
 296              	.LVL22:
 297 01bc 56E0     		b	.L1
 298              	.L16:
 154:Z80_IO_Handle.c ****             }
 155:Z80_IO_Handle.c ****             break;
 156:Z80_IO_Handle.c ****         case CF_STATUS_COMMAND: // 0x17
 157:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 299              		.loc 1 157 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 9


 300 01be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 301 01c2 DBB2     		uxtb	r3, r3
 302 01c4 1C2B     		cmp	r3, #28
 303 01c6 02D1     		bne	.L30
 158:Z80_IO_Handle.c ****             {
 159:Z80_IO_Handle.c ****                 CFReadStatus();
 304              		.loc 1 159 0
 305 01c8 FFF7FEFF 		bl	CFReadStatus
 306              	.LVL23:
 307 01cc 4EE0     		b	.L1
 308              	.L30:
 160:Z80_IO_Handle.c ****             }
 161:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 309              		.loc 1 161 0
 310 01ce 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 311 01d2 DBB2     		uxtb	r3, r3
 312 01d4 1A2B     		cmp	r3, #26
 313 01d6 49D1     		bne	.L1
 162:Z80_IO_Handle.c ****             {
 163:Z80_IO_Handle.c ****                 CFWriteCommand();
 314              		.loc 1 163 0
 315 01d8 FFF7FEFF 		bl	CFWriteCommand
 316              	.LVL24:
 317 01dc 46E0     		b	.L1
 318              	.L17:
 164:Z80_IO_Handle.c ****             }
 165:Z80_IO_Handle.c ****             break;
 166:Z80_IO_Handle.c **** #endif
 167:Z80_IO_Handle.c **** #ifdef USING_6850
 168:Z80_IO_Handle.c ****         case M6850_D:
 169:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 170:Z80_IO_Handle.c ****             {
 171:Z80_IO_Handle.c ****                 M6850ReadData();
 172:Z80_IO_Handle.c ****                 return;
 173:Z80_IO_Handle.c ****             }
 174:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 175:Z80_IO_Handle.c ****             {
 176:Z80_IO_Handle.c ****                 M6850WriteData();
 177:Z80_IO_Handle.c ****                 return;
 178:Z80_IO_Handle.c ****             }
 179:Z80_IO_Handle.c ****             break;
 180:Z80_IO_Handle.c ****         case  M6850_C:    // Control register
 181:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 182:Z80_IO_Handle.c ****             {
 183:Z80_IO_Handle.c ****                 M6850ReadStatus();
 184:Z80_IO_Handle.c ****                 return;
 185:Z80_IO_Handle.c ****             }
 186:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 187:Z80_IO_Handle.c ****             {
 188:Z80_IO_Handle.c ****                 M6850WriteCtrl();
 189:Z80_IO_Handle.c ****                 return;
 190:Z80_IO_Handle.c ****             }
 191:Z80_IO_Handle.c ****             break;
 192:Z80_IO_Handle.c **** #endif
 193:Z80_IO_Handle.c **** #ifdef USING_FRONT_PANEL
 194:Z80_IO_Handle.c ****         case FR_PNL_IO_LO:
 195:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 10


 319              		.loc 1 195 0
 320 01de 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 321 01e2 DBB2     		uxtb	r3, r3
 322 01e4 1C2B     		cmp	r3, #28
 323 01e6 03D1     		bne	.L31
 196:Z80_IO_Handle.c ****             {
 197:Z80_IO_Handle.c ****                 FrontPanelZ80Read(0);
 324              		.loc 1 197 0
 325 01e8 0020     		movs	r0, #0
 326 01ea FFF7FEFF 		bl	FrontPanelZ80Read
 327              	.LVL25:
 198:Z80_IO_Handle.c ****                 return;
 328              		.loc 1 198 0
 329 01ee 3DE0     		b	.L1
 330              	.L31:
 199:Z80_IO_Handle.c ****             }
 200:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 331              		.loc 1 200 0
 332 01f0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 333 01f4 DBB2     		uxtb	r3, r3
 334 01f6 1A2B     		cmp	r3, #26
 335 01f8 38D1     		bne	.L1
 201:Z80_IO_Handle.c ****             {
 202:Z80_IO_Handle.c ****                 FrontPanelZ80Write(0);
 336              		.loc 1 202 0
 337 01fa 0020     		movs	r0, #0
 338 01fc FFF7FEFF 		bl	FrontPanelZ80Write
 339              	.LVL26:
 203:Z80_IO_Handle.c ****                 return;
 340              		.loc 1 203 0
 341 0200 34E0     		b	.L1
 342              	.L18:
 204:Z80_IO_Handle.c ****             }
 205:Z80_IO_Handle.c ****             break;
 206:Z80_IO_Handle.c ****         case FR_PNL_IO_LO_MID:
 207:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 343              		.loc 1 207 0
 344 0202 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 345 0206 DBB2     		uxtb	r3, r3
 346 0208 1C2B     		cmp	r3, #28
 347 020a 03D1     		bne	.L32
 208:Z80_IO_Handle.c ****             {
 209:Z80_IO_Handle.c ****                 FrontPanelZ80Read(1);
 348              		.loc 1 209 0
 349 020c 0120     		movs	r0, #1
 350 020e FFF7FEFF 		bl	FrontPanelZ80Read
 351              	.LVL27:
 210:Z80_IO_Handle.c ****                 return;
 352              		.loc 1 210 0
 353 0212 2BE0     		b	.L1
 354              	.L32:
 211:Z80_IO_Handle.c ****             }
 212:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 355              		.loc 1 212 0
 356 0214 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 357 0218 DBB2     		uxtb	r3, r3
 358 021a 1A2B     		cmp	r3, #26
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 11


 359 021c 26D1     		bne	.L1
 213:Z80_IO_Handle.c ****             {
 214:Z80_IO_Handle.c ****                 FrontPanelZ80Write(1);
 360              		.loc 1 214 0
 361 021e 0120     		movs	r0, #1
 362 0220 FFF7FEFF 		bl	FrontPanelZ80Write
 363              	.LVL28:
 215:Z80_IO_Handle.c ****                 return;
 364              		.loc 1 215 0
 365 0224 22E0     		b	.L1
 366              	.L19:
 216:Z80_IO_Handle.c ****             }
 217:Z80_IO_Handle.c ****             break;
 218:Z80_IO_Handle.c ****         case FR_PNL_IO_HI_MID:
 219:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 367              		.loc 1 219 0
 368 0226 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 369 022a DBB2     		uxtb	r3, r3
 370 022c 1C2B     		cmp	r3, #28
 371 022e 03D1     		bne	.L33
 220:Z80_IO_Handle.c ****             {
 221:Z80_IO_Handle.c ****                 FrontPanelZ80Read(2);
 372              		.loc 1 221 0
 373 0230 0220     		movs	r0, #2
 374 0232 FFF7FEFF 		bl	FrontPanelZ80Read
 375              	.LVL29:
 222:Z80_IO_Handle.c ****                 return;
 376              		.loc 1 222 0
 377 0236 19E0     		b	.L1
 378              	.L33:
 223:Z80_IO_Handle.c ****             }
 224:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 379              		.loc 1 224 0
 380 0238 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 381 023c DBB2     		uxtb	r3, r3
 382 023e 1A2B     		cmp	r3, #26
 383 0240 14D1     		bne	.L1
 225:Z80_IO_Handle.c ****             {
 226:Z80_IO_Handle.c ****                 FrontPanelZ80Write(2);
 384              		.loc 1 226 0
 385 0242 0220     		movs	r0, #2
 386 0244 FFF7FEFF 		bl	FrontPanelZ80Write
 387              	.LVL30:
 227:Z80_IO_Handle.c ****                 return;
 388              		.loc 1 227 0
 389 0248 10E0     		b	.L1
 390              	.L20:
 228:Z80_IO_Handle.c ****             }
 229:Z80_IO_Handle.c ****             break;
 230:Z80_IO_Handle.c ****         case FR_PNL_IO_HI:
 231:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 391              		.loc 1 231 0
 392 024a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 393 024e DBB2     		uxtb	r3, r3
 394 0250 1C2B     		cmp	r3, #28
 395 0252 03D1     		bne	.L34
 232:Z80_IO_Handle.c ****             {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 12


 233:Z80_IO_Handle.c ****                 FrontPanelZ80Read(3);
 396              		.loc 1 233 0
 397 0254 0320     		movs	r0, #3
 398 0256 FFF7FEFF 		bl	FrontPanelZ80Read
 399              	.LVL31:
 234:Z80_IO_Handle.c ****                 return;
 400              		.loc 1 234 0
 401 025a 07E0     		b	.L1
 402              	.L34:
 235:Z80_IO_Handle.c ****             }
 236:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 403              		.loc 1 236 0
 404 025c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 405 0260 DBB2     		uxtb	r3, r3
 406 0262 1A2B     		cmp	r3, #26
 407 0264 02D1     		bne	.L1
 237:Z80_IO_Handle.c ****             {
 238:Z80_IO_Handle.c ****                 FrontPanelZ80Write(3);
 408              		.loc 1 238 0
 409 0266 0320     		movs	r0, #3
 410 0268 FFF7FEFF 		bl	FrontPanelZ80Write
 411              	.LVL32:
 412              	.L1:
 239:Z80_IO_Handle.c ****                 return;
 240:Z80_IO_Handle.c ****             }
 241:Z80_IO_Handle.c ****             break;
 242:Z80_IO_Handle.c **** #endif
 243:Z80_IO_Handle.c **** #ifdef USING_EXP_MCCP23017
 244:Z80_IO_Handle.c ****         case PIOA_D:
 245:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 246:Z80_IO_Handle.c ****             {
 247:Z80_IO_Handle.c ****                 PioReadDataA();
 248:Z80_IO_Handle.c ****                 return;
 249:Z80_IO_Handle.c ****             }
 250:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 251:Z80_IO_Handle.c ****             {
 252:Z80_IO_Handle.c ****                 PioWriteDataA();
 253:Z80_IO_Handle.c ****                 return;
 254:Z80_IO_Handle.c ****             }
 255:Z80_IO_Handle.c ****             break;
 256:Z80_IO_Handle.c ****         case PIOA_C:    // Control register
 257:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 258:Z80_IO_Handle.c ****             {
 259:Z80_IO_Handle.c ****                 PioWriteCtrlA();
 260:Z80_IO_Handle.c ****                 return;
 261:Z80_IO_Handle.c ****             }
 262:Z80_IO_Handle.c ****             break;
 263:Z80_IO_Handle.c ****         case PIOB_D:
 264:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 265:Z80_IO_Handle.c ****             {
 266:Z80_IO_Handle.c ****                 PioReadDataB();
 267:Z80_IO_Handle.c ****                 return;
 268:Z80_IO_Handle.c ****             }
 269:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 270:Z80_IO_Handle.c ****             {
 271:Z80_IO_Handle.c ****                 SioWriteDataB();
 272:Z80_IO_Handle.c ****                 return;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 13


 273:Z80_IO_Handle.c ****             }
 274:Z80_IO_Handle.c ****             break;
 275:Z80_IO_Handle.c ****         case PIOB_C:
 276:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 277:Z80_IO_Handle.c ****             {
 278:Z80_IO_Handle.c ****                 PioWriteCtrlB();
 279:Z80_IO_Handle.c ****                 return;
 280:Z80_IO_Handle.c ****             }
 281:Z80_IO_Handle.c ****             break;
 282:Z80_IO_Handle.c **** #endif
 283:Z80_IO_Handle.c ****         default:    // Handle other cases
 284:Z80_IO_Handle.c ****             break;
 285:Z80_IO_Handle.c ****     }
 286:Z80_IO_Handle.c **** }
 413              		.loc 1 286 0
 414 026c 03B0     		add	sp, sp, #12
 415              		.cfi_def_cfa_offset 4
 416              		@ sp needed
 417 026e 5DF804FB 		ldr	pc, [sp], #4
 418              		.cfi_endproc
 419              	.LFE63:
 420              		.size	HandleZ80IO, .-HandleZ80IO
 421 0272 00BF     		.section	.text.ackIO,"ax",%progbits
 422              		.align	2
 423              		.global	ackIO
 424              		.thumb
 425              		.thumb_func
 426              		.type	ackIO, %function
 427              	ackIO:
 428              	.LFB64:
 287:Z80_IO_Handle.c **** 
 288:Z80_IO_Handle.c **** void ackIO(void)
 289:Z80_IO_Handle.c **** {
 429              		.loc 1 289 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 08B5     		push	{r3, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 290:Z80_IO_Handle.c ****     IO_Ctrl_Reg_Write(IO_Ctrl_Reg_Read() | CLR_IO_INT_BIT);
 437              		.loc 1 290 0
 438 0002 FFF7FEFF 		bl	IO_Ctrl_Reg_Read
 439              	.LVL33:
 440 0006 40F00100 		orr	r0, r0, #1
 441 000a C0B2     		uxtb	r0, r0
 442 000c FFF7FEFF 		bl	IO_Ctrl_Reg_Write
 443              	.LVL34:
 444 0010 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE64:
 447              		.size	ackIO, .-ackIO
 448 0012 00BF     		.section	.text.waitNextIORq,"ax",%progbits
 449              		.align	2
 450              		.global	waitNextIORq
 451              		.thumb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 14


 452              		.thumb_func
 453              		.type	waitNextIORq, %function
 454              	waitNextIORq:
 455              	.LFB65:
 291:Z80_IO_Handle.c **** }
 292:Z80_IO_Handle.c **** 
 293:Z80_IO_Handle.c **** void waitNextIORq(void)
 294:Z80_IO_Handle.c **** {
 456              		.loc 1 294 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 3, -8
 463              		.cfi_offset 14, -4
 464              	.L39:
 295:Z80_IO_Handle.c ****     while ((IO_Stat_Reg_Read() & IOBUSY_BIT) == 0x00);
 465              		.loc 1 295 0 discriminator 1
 466 0002 FFF7FEFF 		bl	IO_Stat_Reg_Read
 467              	.LVL35:
 468 0006 10F0100F 		tst	r0, #16
 469 000a FAD0     		beq	.L39
 296:Z80_IO_Handle.c **** }
 470              		.loc 1 296 0
 471 000c 08BD     		pop	{r3, pc}
 472              		.cfi_endproc
 473              	.LFE65:
 474              		.size	waitNextIORq, .-waitNextIORq
 475 000e 00BF     		.text
 476              	.Letext0:
 477              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 478              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 479              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 480              		.file 5 "Generated_Source\\PSoC5/IO_Stat_Reg.h"
 481              		.file 6 "Z80_SIO_emul.h"
 482              		.file 7 "Generated_Source\\PSoC5/AdrLowIn.h"
 483              		.file 8 "Z80_CFCard_Emul.h"
 484              		.file 9 "FrontPanel.h"
 485              		.file 10 "Generated_Source\\PSoC5/IO_Ctrl_Reg.h"
 486              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 487              		.section	.debug_info,"",%progbits
 488              	.Ldebug_info0:
 489 0000 F2030000 		.4byte	0x3f2
 490 0004 0400     		.2byte	0x4
 491 0006 00000000 		.4byte	.Ldebug_abbrev0
 492 000a 04       		.byte	0x4
 493 000b 01       		.uleb128 0x1
 494 000c 98000000 		.4byte	.LASF51
 495 0010 0C       		.byte	0xc
 496 0011 AC020000 		.4byte	.LASF52
 497 0015 E4020000 		.4byte	.LASF53
 498 0019 00000000 		.4byte	.Ldebug_ranges0+0
 499 001d 00000000 		.4byte	0
 500 0021 00000000 		.4byte	.Ldebug_line0
 501 0025 02       		.uleb128 0x2
 502 0026 01       		.byte	0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 15


 503 0027 06       		.byte	0x6
 504 0028 8E030000 		.4byte	.LASF0
 505 002c 02       		.uleb128 0x2
 506 002d 01       		.byte	0x1
 507 002e 08       		.byte	0x8
 508 002f 8A000000 		.4byte	.LASF1
 509 0033 02       		.uleb128 0x2
 510 0034 02       		.byte	0x2
 511 0035 05       		.byte	0x5
 512 0036 DA020000 		.4byte	.LASF2
 513 003a 02       		.uleb128 0x2
 514 003b 02       		.byte	0x2
 515 003c 07       		.byte	0x7
 516 003d 67010000 		.4byte	.LASF3
 517 0041 03       		.uleb128 0x3
 518 0042 2D000000 		.4byte	.LASF9
 519 0046 02       		.byte	0x2
 520 0047 3F       		.byte	0x3f
 521 0048 4C000000 		.4byte	0x4c
 522 004c 02       		.uleb128 0x2
 523 004d 04       		.byte	0x4
 524 004e 05       		.byte	0x5
 525 004f 79030000 		.4byte	.LASF4
 526 0053 02       		.uleb128 0x2
 527 0054 04       		.byte	0x4
 528 0055 07       		.byte	0x7
 529 0056 97010000 		.4byte	.LASF5
 530 005a 02       		.uleb128 0x2
 531 005b 08       		.byte	0x8
 532 005c 05       		.byte	0x5
 533 005d 6B020000 		.4byte	.LASF6
 534 0061 02       		.uleb128 0x2
 535 0062 08       		.byte	0x8
 536 0063 07       		.byte	0x7
 537 0064 EC010000 		.4byte	.LASF7
 538 0068 04       		.uleb128 0x4
 539 0069 04       		.byte	0x4
 540 006a 05       		.byte	0x5
 541 006b 696E7400 		.ascii	"int\000"
 542 006f 02       		.uleb128 0x2
 543 0070 04       		.byte	0x4
 544 0071 07       		.byte	0x7
 545 0072 DF010000 		.4byte	.LASF8
 546 0076 03       		.uleb128 0x3
 547 0077 5A020000 		.4byte	.LASF10
 548 007b 03       		.byte	0x3
 549 007c 2C       		.byte	0x2c
 550 007d 41000000 		.4byte	0x41
 551 0081 05       		.uleb128 0x5
 552 0082 63030000 		.4byte	.LASF11
 553 0086 04       		.byte	0x4
 554 0087 E401     		.2byte	0x1e4
 555 0089 2C000000 		.4byte	0x2c
 556 008d 02       		.uleb128 0x2
 557 008e 04       		.byte	0x4
 558 008f 04       		.byte	0x4
 559 0090 84000000 		.4byte	.LASF12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 16


 560 0094 02       		.uleb128 0x2
 561 0095 08       		.byte	0x8
 562 0096 04       		.byte	0x4
 563 0097 5E000000 		.4byte	.LASF13
 564 009b 02       		.uleb128 0x2
 565 009c 01       		.byte	0x1
 566 009d 08       		.byte	0x8
 567 009e 87020000 		.4byte	.LASF14
 568 00a2 06       		.uleb128 0x6
 569 00a3 81000000 		.4byte	0x81
 570 00a7 02       		.uleb128 0x2
 571 00a8 08       		.byte	0x8
 572 00a9 04       		.byte	0x4
 573 00aa 82030000 		.4byte	.LASF15
 574 00ae 02       		.uleb128 0x2
 575 00af 04       		.byte	0x4
 576 00b0 07       		.byte	0x7
 577 00b1 62020000 		.4byte	.LASF16
 578 00b5 07       		.uleb128 0x7
 579 00b6 7A010000 		.4byte	.LASF19
 580 00ba 01       		.byte	0x1
 581 00bb 16       		.byte	0x16
 582 00bc 00000000 		.4byte	.LFB63
 583 00c0 72020000 		.4byte	.LFE63-.LFB63
 584 00c4 01       		.uleb128 0x1
 585 00c5 9C       		.byte	0x9c
 586 00c6 5C020000 		.4byte	0x25c
 587 00ca 08       		.uleb128 0x8
 588 00cb 77000000 		.4byte	.LASF17
 589 00cf 01       		.byte	0x1
 590 00d0 18       		.byte	0x18
 591 00d1 A2000000 		.4byte	0xa2
 592 00d5 02       		.uleb128 0x2
 593 00d6 91       		.byte	0x91
 594 00d7 77       		.sleb128 -9
 595 00d8 08       		.uleb128 0x8
 596 00d9 BC030000 		.4byte	.LASF18
 597 00dd 01       		.byte	0x1
 598 00de 19       		.byte	0x19
 599 00df A2000000 		.4byte	0xa2
 600 00e3 02       		.uleb128 0x2
 601 00e4 91       		.byte	0x91
 602 00e5 76       		.sleb128 -10
 603 00e6 09       		.uleb128 0x9
 604 00e7 08000000 		.4byte	.LVL0
 605 00eb B6020000 		.4byte	0x2b6
 606 00ef 09       		.uleb128 0x9
 607 00f0 1C000000 		.4byte	.LVL1
 608 00f4 C1020000 		.4byte	0x2c1
 609 00f8 09       		.uleb128 0x9
 610 00f9 22000000 		.4byte	.LVL2
 611 00fd CC020000 		.4byte	0x2cc
 612 0101 09       		.uleb128 0x9
 613 0102 7C000000 		.4byte	.LVL3
 614 0106 D7020000 		.4byte	0x2d7
 615 010a 09       		.uleb128 0x9
 616 010b 8E000000 		.4byte	.LVL4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 17


 617 010f E2020000 		.4byte	0x2e2
 618 0113 09       		.uleb128 0x9
 619 0114 A0000000 		.4byte	.LVL5
 620 0118 ED020000 		.4byte	0x2ed
 621 011c 09       		.uleb128 0x9
 622 011d B0000000 		.4byte	.LVL6
 623 0121 F8020000 		.4byte	0x2f8
 624 0125 09       		.uleb128 0x9
 625 0126 C2000000 		.4byte	.LVL7
 626 012a 03030000 		.4byte	0x303
 627 012e 09       		.uleb128 0x9
 628 012f D4000000 		.4byte	.LVL8
 629 0133 0E030000 		.4byte	0x30e
 630 0137 09       		.uleb128 0x9
 631 0138 E4000000 		.4byte	.LVL9
 632 013c 19030000 		.4byte	0x319
 633 0140 09       		.uleb128 0x9
 634 0141 F6000000 		.4byte	.LVL10
 635 0145 24030000 		.4byte	0x324
 636 0149 09       		.uleb128 0x9
 637 014a 06010000 		.4byte	.LVL11
 638 014e 2F030000 		.4byte	0x32f
 639 0152 09       		.uleb128 0x9
 640 0153 18010000 		.4byte	.LVL12
 641 0157 3A030000 		.4byte	0x33a
 642 015b 09       		.uleb128 0x9
 643 015c 28010000 		.4byte	.LVL13
 644 0160 45030000 		.4byte	0x345
 645 0164 09       		.uleb128 0x9
 646 0165 3A010000 		.4byte	.LVL14
 647 0169 50030000 		.4byte	0x350
 648 016d 09       		.uleb128 0x9
 649 016e 4A010000 		.4byte	.LVL15
 650 0172 5B030000 		.4byte	0x35b
 651 0176 09       		.uleb128 0x9
 652 0177 5C010000 		.4byte	.LVL16
 653 017b 66030000 		.4byte	0x366
 654 017f 09       		.uleb128 0x9
 655 0180 6C010000 		.4byte	.LVL17
 656 0184 71030000 		.4byte	0x371
 657 0188 09       		.uleb128 0x9
 658 0189 7C010000 		.4byte	.LVL18
 659 018d 7C030000 		.4byte	0x37c
 660 0191 09       		.uleb128 0x9
 661 0192 8C010000 		.4byte	.LVL19
 662 0196 87030000 		.4byte	0x387
 663 019a 09       		.uleb128 0x9
 664 019b 9C010000 		.4byte	.LVL20
 665 019f 92030000 		.4byte	0x392
 666 01a3 09       		.uleb128 0x9
 667 01a4 AC010000 		.4byte	.LVL21
 668 01a8 9D030000 		.4byte	0x39d
 669 01ac 09       		.uleb128 0x9
 670 01ad BC010000 		.4byte	.LVL22
 671 01b1 A8030000 		.4byte	0x3a8
 672 01b5 09       		.uleb128 0x9
 673 01b6 CC010000 		.4byte	.LVL23
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 18


 674 01ba B3030000 		.4byte	0x3b3
 675 01be 09       		.uleb128 0x9
 676 01bf DC010000 		.4byte	.LVL24
 677 01c3 BE030000 		.4byte	0x3be
 678 01c7 0A       		.uleb128 0xa
 679 01c8 EE010000 		.4byte	.LVL25
 680 01cc C9030000 		.4byte	0x3c9
 681 01d0 DA010000 		.4byte	0x1da
 682 01d4 0B       		.uleb128 0xb
 683 01d5 01       		.uleb128 0x1
 684 01d6 50       		.byte	0x50
 685 01d7 01       		.uleb128 0x1
 686 01d8 30       		.byte	0x30
 687 01d9 00       		.byte	0
 688 01da 0A       		.uleb128 0xa
 689 01db 00020000 		.4byte	.LVL26
 690 01df D4030000 		.4byte	0x3d4
 691 01e3 ED010000 		.4byte	0x1ed
 692 01e7 0B       		.uleb128 0xb
 693 01e8 01       		.uleb128 0x1
 694 01e9 50       		.byte	0x50
 695 01ea 01       		.uleb128 0x1
 696 01eb 30       		.byte	0x30
 697 01ec 00       		.byte	0
 698 01ed 0A       		.uleb128 0xa
 699 01ee 12020000 		.4byte	.LVL27
 700 01f2 C9030000 		.4byte	0x3c9
 701 01f6 00020000 		.4byte	0x200
 702 01fa 0B       		.uleb128 0xb
 703 01fb 01       		.uleb128 0x1
 704 01fc 50       		.byte	0x50
 705 01fd 01       		.uleb128 0x1
 706 01fe 31       		.byte	0x31
 707 01ff 00       		.byte	0
 708 0200 0A       		.uleb128 0xa
 709 0201 24020000 		.4byte	.LVL28
 710 0205 D4030000 		.4byte	0x3d4
 711 0209 13020000 		.4byte	0x213
 712 020d 0B       		.uleb128 0xb
 713 020e 01       		.uleb128 0x1
 714 020f 50       		.byte	0x50
 715 0210 01       		.uleb128 0x1
 716 0211 31       		.byte	0x31
 717 0212 00       		.byte	0
 718 0213 0A       		.uleb128 0xa
 719 0214 36020000 		.4byte	.LVL29
 720 0218 C9030000 		.4byte	0x3c9
 721 021c 26020000 		.4byte	0x226
 722 0220 0B       		.uleb128 0xb
 723 0221 01       		.uleb128 0x1
 724 0222 50       		.byte	0x50
 725 0223 01       		.uleb128 0x1
 726 0224 32       		.byte	0x32
 727 0225 00       		.byte	0
 728 0226 0A       		.uleb128 0xa
 729 0227 48020000 		.4byte	.LVL30
 730 022b D4030000 		.4byte	0x3d4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 19


 731 022f 39020000 		.4byte	0x239
 732 0233 0B       		.uleb128 0xb
 733 0234 01       		.uleb128 0x1
 734 0235 50       		.byte	0x50
 735 0236 01       		.uleb128 0x1
 736 0237 32       		.byte	0x32
 737 0238 00       		.byte	0
 738 0239 0A       		.uleb128 0xa
 739 023a 5A020000 		.4byte	.LVL31
 740 023e C9030000 		.4byte	0x3c9
 741 0242 4C020000 		.4byte	0x24c
 742 0246 0B       		.uleb128 0xb
 743 0247 01       		.uleb128 0x1
 744 0248 50       		.byte	0x50
 745 0249 01       		.uleb128 0x1
 746 024a 33       		.byte	0x33
 747 024b 00       		.byte	0
 748 024c 0C       		.uleb128 0xc
 749 024d 6C020000 		.4byte	.LVL32
 750 0251 D4030000 		.4byte	0x3d4
 751 0255 0B       		.uleb128 0xb
 752 0256 01       		.uleb128 0x1
 753 0257 50       		.byte	0x50
 754 0258 01       		.uleb128 0x1
 755 0259 33       		.byte	0x33
 756 025a 00       		.byte	0
 757 025b 00       		.byte	0
 758 025c 0D       		.uleb128 0xd
 759 025d D4020000 		.4byte	.LASF20
 760 0261 01       		.byte	0x1
 761 0262 2001     		.2byte	0x120
 762 0264 00000000 		.4byte	.LFB64
 763 0268 12000000 		.4byte	.LFE64-.LFB64
 764 026c 01       		.uleb128 0x1
 765 026d 9C       		.byte	0x9c
 766 026e 85020000 		.4byte	0x285
 767 0272 09       		.uleb128 0x9
 768 0273 06000000 		.4byte	.LVL33
 769 0277 DF030000 		.4byte	0x3df
 770 027b 09       		.uleb128 0x9
 771 027c 10000000 		.4byte	.LVL34
 772 0280 EA030000 		.4byte	0x3ea
 773 0284 00       		.byte	0
 774 0285 0D       		.uleb128 0xd
 775 0286 BC020000 		.4byte	.LASF21
 776 028a 01       		.byte	0x1
 777 028b 2501     		.2byte	0x125
 778 028d 00000000 		.4byte	.LFB65
 779 0291 0E000000 		.4byte	.LFE65-.LFB65
 780 0295 01       		.uleb128 0x1
 781 0296 9C       		.byte	0x9c
 782 0297 A5020000 		.4byte	0x2a5
 783 029b 09       		.uleb128 0x9
 784 029c 06000000 		.4byte	.LVL35
 785 02a0 B6020000 		.4byte	0x2b6
 786 02a4 00       		.byte	0
 787 02a5 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 20


 788 02a6 4D020000 		.4byte	.LASF54
 789 02aa 0B       		.byte	0xb
 790 02ab 1207     		.2byte	0x712
 791 02ad B1020000 		.4byte	0x2b1
 792 02b1 06       		.uleb128 0x6
 793 02b2 76000000 		.4byte	0x76
 794 02b6 0F       		.uleb128 0xf
 795 02b7 56010000 		.4byte	.LASF22
 796 02bb 56010000 		.4byte	.LASF22
 797 02bf 05       		.byte	0x5
 798 02c0 30       		.byte	0x30
 799 02c1 0F       		.uleb128 0xf
 800 02c2 AD030000 		.4byte	.LASF23
 801 02c6 AD030000 		.4byte	.LASF23
 802 02ca 06       		.byte	0x6
 803 02cb 1F       		.byte	0x1f
 804 02cc 0F       		.uleb128 0xf
 805 02cd 9E020000 		.4byte	.LASF24
 806 02d1 9E020000 		.4byte	.LASF24
 807 02d5 07       		.byte	0x7
 808 02d6 30       		.byte	0x30
 809 02d7 0F       		.uleb128 0xf
 810 02d8 37000000 		.4byte	.LASF25
 811 02dc 37000000 		.4byte	.LASF25
 812 02e0 06       		.byte	0x6
 813 02e1 17       		.byte	0x17
 814 02e2 0F       		.uleb128 0xf
 815 02e3 15020000 		.4byte	.LASF26
 816 02e7 15020000 		.4byte	.LASF26
 817 02eb 06       		.byte	0x6
 818 02ec 18       		.byte	0x18
 819 02ed 0F       		.uleb128 0xf
 820 02ee C3010000 		.4byte	.LASF27
 821 02f2 C3010000 		.4byte	.LASF27
 822 02f6 06       		.byte	0x6
 823 02f7 1B       		.byte	0x1b
 824 02f8 0F       		.uleb128 0xf
 825 02f9 B6010000 		.4byte	.LASF28
 826 02fd B6010000 		.4byte	.LASF28
 827 0301 06       		.byte	0x6
 828 0302 1C       		.byte	0x1c
 829 0303 0F       		.uleb128 0xf
 830 0304 23020000 		.4byte	.LASF29
 831 0308 23020000 		.4byte	.LASF29
 832 030c 06       		.byte	0x6
 833 030d 1D       		.byte	0x1d
 834 030e 0F       		.uleb128 0xf
 835 030f D1010000 		.4byte	.LASF30
 836 0313 D1010000 		.4byte	.LASF30
 837 0317 06       		.byte	0x6
 838 0318 20       		.byte	0x20
 839 0319 0F       		.uleb128 0xf
 840 031a C9020000 		.4byte	.LASF31
 841 031e C9020000 		.4byte	.LASF31
 842 0322 08       		.byte	0x8
 843 0323 10       		.byte	0x10
 844 0324 0F       		.uleb128 0xf
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 21


 845 0325 41020000 		.4byte	.LASF32
 846 0329 41020000 		.4byte	.LASF32
 847 032d 08       		.byte	0x8
 848 032e 11       		.byte	0x11
 849 032f 0F       		.uleb128 0xf
 850 0330 69030000 		.4byte	.LASF33
 851 0334 69030000 		.4byte	.LASF33
 852 0338 08       		.byte	0x8
 853 0339 12       		.byte	0x12
 854 033a 0F       		.uleb128 0xf
 855 033b 31020000 		.4byte	.LASF34
 856 033f 31020000 		.4byte	.LASF34
 857 0343 08       		.byte	0x8
 858 0344 13       		.byte	0x13
 859 0345 0F       		.uleb128 0xf
 860 0346 03020000 		.4byte	.LASF35
 861 034a 03020000 		.4byte	.LASF35
 862 034e 08       		.byte	0x8
 863 034f 14       		.byte	0x14
 864 0350 0F       		.uleb128 0xf
 865 0351 9A030000 		.4byte	.LASF36
 866 0355 9A030000 		.4byte	.LASF36
 867 0359 08       		.byte	0x8
 868 035a 15       		.byte	0x15
 869 035b 0F       		.uleb128 0xf
 870 035c 20000000 		.4byte	.LASF37
 871 0360 20000000 		.4byte	.LASF37
 872 0364 08       		.byte	0x8
 873 0365 16       		.byte	0x16
 874 0366 0F       		.uleb128 0xf
 875 0367 26010000 		.4byte	.LASF38
 876 036b 26010000 		.4byte	.LASF38
 877 036f 08       		.byte	0x8
 878 0370 17       		.byte	0x17
 879 0371 0F       		.uleb128 0xf
 880 0372 00000000 		.4byte	.LASF39
 881 0376 00000000 		.4byte	.LASF39
 882 037a 08       		.byte	0x8
 883 037b 18       		.byte	0x18
 884 037c 0F       		.uleb128 0xf
 885 037d 32010000 		.4byte	.LASF40
 886 0381 32010000 		.4byte	.LASF40
 887 0385 08       		.byte	0x8
 888 0386 19       		.byte	0x19
 889 0387 0F       		.uleb128 0xf
 890 0388 79020000 		.4byte	.LASF41
 891 038c 79020000 		.4byte	.LASF41
 892 0390 08       		.byte	0x8
 893 0391 1A       		.byte	0x1a
 894 0392 0F       		.uleb128 0xf
 895 0393 3E010000 		.4byte	.LASF42
 896 0397 3E010000 		.4byte	.LASF42
 897 039b 08       		.byte	0x8
 898 039c 1B       		.byte	0x1b
 899 039d 0F       		.uleb128 0xf
 900 039e 53000000 		.4byte	.LASF43
 901 03a2 53000000 		.4byte	.LASF43
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 22


 902 03a6 08       		.byte	0x8
 903 03a7 1E       		.byte	0x1e
 904 03a8 0F       		.uleb128 0xf
 905 03a9 4A010000 		.4byte	.LASF44
 906 03ad 4A010000 		.4byte	.LASF44
 907 03b1 08       		.byte	0x8
 908 03b2 1F       		.byte	0x1f
 909 03b3 0F       		.uleb128 0xf
 910 03b4 A9010000 		.4byte	.LASF45
 911 03b8 A9010000 		.4byte	.LASF45
 912 03bc 08       		.byte	0x8
 913 03bd 1C       		.byte	0x1c
 914 03be 0F       		.uleb128 0xf
 915 03bf 44000000 		.4byte	.LASF46
 916 03c3 44000000 		.4byte	.LASF46
 917 03c7 08       		.byte	0x8
 918 03c8 1D       		.byte	0x1d
 919 03c9 0F       		.uleb128 0xf
 920 03ca 65000000 		.4byte	.LASF47
 921 03ce 65000000 		.4byte	.LASF47
 922 03d2 09       		.byte	0x9
 923 03d3 3F       		.byte	0x3f
 924 03d4 0F       		.uleb128 0xf
 925 03d5 0D000000 		.4byte	.LASF48
 926 03d9 0D000000 		.4byte	.LASF48
 927 03dd 09       		.byte	0x9
 928 03de 40       		.byte	0x40
 929 03df 0F       		.uleb128 0xf
 930 03e0 86010000 		.4byte	.LASF49
 931 03e4 86010000 		.4byte	.LASF49
 932 03e8 0A       		.byte	0xa
 933 03e9 30       		.byte	0x30
 934 03ea 0F       		.uleb128 0xf
 935 03eb 8C020000 		.4byte	.LASF50
 936 03ef 8C020000 		.4byte	.LASF50
 937 03f3 0A       		.byte	0xa
 938 03f4 2F       		.byte	0x2f
 939 03f5 00       		.byte	0
 940              		.section	.debug_abbrev,"",%progbits
 941              	.Ldebug_abbrev0:
 942 0000 01       		.uleb128 0x1
 943 0001 11       		.uleb128 0x11
 944 0002 01       		.byte	0x1
 945 0003 25       		.uleb128 0x25
 946 0004 0E       		.uleb128 0xe
 947 0005 13       		.uleb128 0x13
 948 0006 0B       		.uleb128 0xb
 949 0007 03       		.uleb128 0x3
 950 0008 0E       		.uleb128 0xe
 951 0009 1B       		.uleb128 0x1b
 952 000a 0E       		.uleb128 0xe
 953 000b 55       		.uleb128 0x55
 954 000c 17       		.uleb128 0x17
 955 000d 11       		.uleb128 0x11
 956 000e 01       		.uleb128 0x1
 957 000f 10       		.uleb128 0x10
 958 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 23


 959 0011 00       		.byte	0
 960 0012 00       		.byte	0
 961 0013 02       		.uleb128 0x2
 962 0014 24       		.uleb128 0x24
 963 0015 00       		.byte	0
 964 0016 0B       		.uleb128 0xb
 965 0017 0B       		.uleb128 0xb
 966 0018 3E       		.uleb128 0x3e
 967 0019 0B       		.uleb128 0xb
 968 001a 03       		.uleb128 0x3
 969 001b 0E       		.uleb128 0xe
 970 001c 00       		.byte	0
 971 001d 00       		.byte	0
 972 001e 03       		.uleb128 0x3
 973 001f 16       		.uleb128 0x16
 974 0020 00       		.byte	0
 975 0021 03       		.uleb128 0x3
 976 0022 0E       		.uleb128 0xe
 977 0023 3A       		.uleb128 0x3a
 978 0024 0B       		.uleb128 0xb
 979 0025 3B       		.uleb128 0x3b
 980 0026 0B       		.uleb128 0xb
 981 0027 49       		.uleb128 0x49
 982 0028 13       		.uleb128 0x13
 983 0029 00       		.byte	0
 984 002a 00       		.byte	0
 985 002b 04       		.uleb128 0x4
 986 002c 24       		.uleb128 0x24
 987 002d 00       		.byte	0
 988 002e 0B       		.uleb128 0xb
 989 002f 0B       		.uleb128 0xb
 990 0030 3E       		.uleb128 0x3e
 991 0031 0B       		.uleb128 0xb
 992 0032 03       		.uleb128 0x3
 993 0033 08       		.uleb128 0x8
 994 0034 00       		.byte	0
 995 0035 00       		.byte	0
 996 0036 05       		.uleb128 0x5
 997 0037 16       		.uleb128 0x16
 998 0038 00       		.byte	0
 999 0039 03       		.uleb128 0x3
 1000 003a 0E       		.uleb128 0xe
 1001 003b 3A       		.uleb128 0x3a
 1002 003c 0B       		.uleb128 0xb
 1003 003d 3B       		.uleb128 0x3b
 1004 003e 05       		.uleb128 0x5
 1005 003f 49       		.uleb128 0x49
 1006 0040 13       		.uleb128 0x13
 1007 0041 00       		.byte	0
 1008 0042 00       		.byte	0
 1009 0043 06       		.uleb128 0x6
 1010 0044 35       		.uleb128 0x35
 1011 0045 00       		.byte	0
 1012 0046 49       		.uleb128 0x49
 1013 0047 13       		.uleb128 0x13
 1014 0048 00       		.byte	0
 1015 0049 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 24


 1016 004a 07       		.uleb128 0x7
 1017 004b 2E       		.uleb128 0x2e
 1018 004c 01       		.byte	0x1
 1019 004d 3F       		.uleb128 0x3f
 1020 004e 19       		.uleb128 0x19
 1021 004f 03       		.uleb128 0x3
 1022 0050 0E       		.uleb128 0xe
 1023 0051 3A       		.uleb128 0x3a
 1024 0052 0B       		.uleb128 0xb
 1025 0053 3B       		.uleb128 0x3b
 1026 0054 0B       		.uleb128 0xb
 1027 0055 27       		.uleb128 0x27
 1028 0056 19       		.uleb128 0x19
 1029 0057 11       		.uleb128 0x11
 1030 0058 01       		.uleb128 0x1
 1031 0059 12       		.uleb128 0x12
 1032 005a 06       		.uleb128 0x6
 1033 005b 40       		.uleb128 0x40
 1034 005c 18       		.uleb128 0x18
 1035 005d 9742     		.uleb128 0x2117
 1036 005f 19       		.uleb128 0x19
 1037 0060 01       		.uleb128 0x1
 1038 0061 13       		.uleb128 0x13
 1039 0062 00       		.byte	0
 1040 0063 00       		.byte	0
 1041 0064 08       		.uleb128 0x8
 1042 0065 34       		.uleb128 0x34
 1043 0066 00       		.byte	0
 1044 0067 03       		.uleb128 0x3
 1045 0068 0E       		.uleb128 0xe
 1046 0069 3A       		.uleb128 0x3a
 1047 006a 0B       		.uleb128 0xb
 1048 006b 3B       		.uleb128 0x3b
 1049 006c 0B       		.uleb128 0xb
 1050 006d 49       		.uleb128 0x49
 1051 006e 13       		.uleb128 0x13
 1052 006f 02       		.uleb128 0x2
 1053 0070 18       		.uleb128 0x18
 1054 0071 00       		.byte	0
 1055 0072 00       		.byte	0
 1056 0073 09       		.uleb128 0x9
 1057 0074 898201   		.uleb128 0x4109
 1058 0077 00       		.byte	0
 1059 0078 11       		.uleb128 0x11
 1060 0079 01       		.uleb128 0x1
 1061 007a 31       		.uleb128 0x31
 1062 007b 13       		.uleb128 0x13
 1063 007c 00       		.byte	0
 1064 007d 00       		.byte	0
 1065 007e 0A       		.uleb128 0xa
 1066 007f 898201   		.uleb128 0x4109
 1067 0082 01       		.byte	0x1
 1068 0083 11       		.uleb128 0x11
 1069 0084 01       		.uleb128 0x1
 1070 0085 31       		.uleb128 0x31
 1071 0086 13       		.uleb128 0x13
 1072 0087 01       		.uleb128 0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 25


 1073 0088 13       		.uleb128 0x13
 1074 0089 00       		.byte	0
 1075 008a 00       		.byte	0
 1076 008b 0B       		.uleb128 0xb
 1077 008c 8A8201   		.uleb128 0x410a
 1078 008f 00       		.byte	0
 1079 0090 02       		.uleb128 0x2
 1080 0091 18       		.uleb128 0x18
 1081 0092 9142     		.uleb128 0x2111
 1082 0094 18       		.uleb128 0x18
 1083 0095 00       		.byte	0
 1084 0096 00       		.byte	0
 1085 0097 0C       		.uleb128 0xc
 1086 0098 898201   		.uleb128 0x4109
 1087 009b 01       		.byte	0x1
 1088 009c 11       		.uleb128 0x11
 1089 009d 01       		.uleb128 0x1
 1090 009e 31       		.uleb128 0x31
 1091 009f 13       		.uleb128 0x13
 1092 00a0 00       		.byte	0
 1093 00a1 00       		.byte	0
 1094 00a2 0D       		.uleb128 0xd
 1095 00a3 2E       		.uleb128 0x2e
 1096 00a4 01       		.byte	0x1
 1097 00a5 3F       		.uleb128 0x3f
 1098 00a6 19       		.uleb128 0x19
 1099 00a7 03       		.uleb128 0x3
 1100 00a8 0E       		.uleb128 0xe
 1101 00a9 3A       		.uleb128 0x3a
 1102 00aa 0B       		.uleb128 0xb
 1103 00ab 3B       		.uleb128 0x3b
 1104 00ac 05       		.uleb128 0x5
 1105 00ad 27       		.uleb128 0x27
 1106 00ae 19       		.uleb128 0x19
 1107 00af 11       		.uleb128 0x11
 1108 00b0 01       		.uleb128 0x1
 1109 00b1 12       		.uleb128 0x12
 1110 00b2 06       		.uleb128 0x6
 1111 00b3 40       		.uleb128 0x40
 1112 00b4 18       		.uleb128 0x18
 1113 00b5 9742     		.uleb128 0x2117
 1114 00b7 19       		.uleb128 0x19
 1115 00b8 01       		.uleb128 0x1
 1116 00b9 13       		.uleb128 0x13
 1117 00ba 00       		.byte	0
 1118 00bb 00       		.byte	0
 1119 00bc 0E       		.uleb128 0xe
 1120 00bd 34       		.uleb128 0x34
 1121 00be 00       		.byte	0
 1122 00bf 03       		.uleb128 0x3
 1123 00c0 0E       		.uleb128 0xe
 1124 00c1 3A       		.uleb128 0x3a
 1125 00c2 0B       		.uleb128 0xb
 1126 00c3 3B       		.uleb128 0x3b
 1127 00c4 05       		.uleb128 0x5
 1128 00c5 49       		.uleb128 0x49
 1129 00c6 13       		.uleb128 0x13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 26


 1130 00c7 3F       		.uleb128 0x3f
 1131 00c8 19       		.uleb128 0x19
 1132 00c9 3C       		.uleb128 0x3c
 1133 00ca 19       		.uleb128 0x19
 1134 00cb 00       		.byte	0
 1135 00cc 00       		.byte	0
 1136 00cd 0F       		.uleb128 0xf
 1137 00ce 2E       		.uleb128 0x2e
 1138 00cf 00       		.byte	0
 1139 00d0 3F       		.uleb128 0x3f
 1140 00d1 19       		.uleb128 0x19
 1141 00d2 3C       		.uleb128 0x3c
 1142 00d3 19       		.uleb128 0x19
 1143 00d4 6E       		.uleb128 0x6e
 1144 00d5 0E       		.uleb128 0xe
 1145 00d6 03       		.uleb128 0x3
 1146 00d7 0E       		.uleb128 0xe
 1147 00d8 3A       		.uleb128 0x3a
 1148 00d9 0B       		.uleb128 0xb
 1149 00da 3B       		.uleb128 0x3b
 1150 00db 0B       		.uleb128 0xb
 1151 00dc 00       		.byte	0
 1152 00dd 00       		.byte	0
 1153 00de 00       		.byte	0
 1154              		.section	.debug_aranges,"",%progbits
 1155 0000 2C000000 		.4byte	0x2c
 1156 0004 0200     		.2byte	0x2
 1157 0006 00000000 		.4byte	.Ldebug_info0
 1158 000a 04       		.byte	0x4
 1159 000b 00       		.byte	0
 1160 000c 0000     		.2byte	0
 1161 000e 0000     		.2byte	0
 1162 0010 00000000 		.4byte	.LFB63
 1163 0014 72020000 		.4byte	.LFE63-.LFB63
 1164 0018 00000000 		.4byte	.LFB64
 1165 001c 12000000 		.4byte	.LFE64-.LFB64
 1166 0020 00000000 		.4byte	.LFB65
 1167 0024 0E000000 		.4byte	.LFE65-.LFB65
 1168 0028 00000000 		.4byte	0
 1169 002c 00000000 		.4byte	0
 1170              		.section	.debug_ranges,"",%progbits
 1171              	.Ldebug_ranges0:
 1172 0000 00000000 		.4byte	.LFB63
 1173 0004 72020000 		.4byte	.LFE63
 1174 0008 00000000 		.4byte	.LFB64
 1175 000c 12000000 		.4byte	.LFE64
 1176 0010 00000000 		.4byte	.LFB65
 1177 0014 0E000000 		.4byte	.LFE65
 1178 0018 00000000 		.4byte	0
 1179 001c 00000000 		.4byte	0
 1180              		.section	.debug_line,"",%progbits
 1181              	.Ldebug_line0:
 1182 0000 50020000 		.section	.debug_str,"MS",%progbits,1
 1182      0200BC01 
 1182      00000201 
 1182      FB0E0D00 
 1182      01010101 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 27


 1183              	.LASF39:
 1184 0000 43465265 		.ascii	"CFReadCylLow\000"
 1184      61644379 
 1184      6C4C6F77 
 1184      00
 1185              	.LASF48:
 1186 000d 46726F6E 		.ascii	"FrontPanelZ80Write\000"
 1186      7450616E 
 1186      656C5A38 
 1186      30577269 
 1186      746500
 1187              	.LASF37:
 1188 0020 43465265 		.ascii	"CFReadSector\000"
 1188      61645365 
 1188      63746F72 
 1188      00
 1189              	.LASF9:
 1190 002d 5F5F696E 		.ascii	"__int32_t\000"
 1190      7433325F 
 1190      7400
 1191              	.LASF25:
 1192 0037 53696F52 		.ascii	"SioReadDataA\000"
 1192      65616444 
 1192      61746141 
 1192      00
 1193              	.LASF46:
 1194 0044 43465772 		.ascii	"CFWriteCommand\000"
 1194      69746543 
 1194      6F6D6D61 
 1194      6E6400
 1195              	.LASF43:
 1196 0053 43465265 		.ascii	"CFReadHead\000"
 1196      61644865 
 1196      616400
 1197              	.LASF13:
 1198 005e 646F7562 		.ascii	"double\000"
 1198      6C6500
 1199              	.LASF47:
 1200 0065 46726F6E 		.ascii	"FrontPanelZ80Read\000"
 1200      7450616E 
 1200      656C5A38 
 1200      30526561 
 1200      6400
 1201              	.LASF17:
 1202 0077 696F4372 		.ascii	"ioCrtlRegVal\000"
 1202      746C5265 
 1202      6756616C 
 1202      00
 1203              	.LASF12:
 1204 0084 666C6F61 		.ascii	"float\000"
 1204      7400
 1205              	.LASF1:
 1206 008a 756E7369 		.ascii	"unsigned char\000"
 1206      676E6564 
 1206      20636861 
 1206      7200
 1207              	.LASF51:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 28


 1208 0098 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1208      43313120 
 1208      352E342E 
 1208      31203230 
 1208      31363036 
 1209 00cb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1209      20726576 
 1209      6973696F 
 1209      6E203233 
 1209      37373135 
 1210 00fe 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1210      66756E63 
 1210      74696F6E 
 1210      2D736563 
 1210      74696F6E 
 1211              	.LASF38:
 1212 0126 43465772 		.ascii	"CFWriteLBA0\000"
 1212      6974654C 
 1212      42413000 
 1213              	.LASF40:
 1214 0132 43465772 		.ascii	"CFWriteLBA1\000"
 1214      6974654C 
 1214      42413100 
 1215              	.LASF42:
 1216 013e 43465772 		.ascii	"CFWriteLBA2\000"
 1216      6974654C 
 1216      42413200 
 1217              	.LASF44:
 1218 014a 43465772 		.ascii	"CFWriteLBA3\000"
 1218      6974654C 
 1218      42413300 
 1219              	.LASF22:
 1220 0156 494F5F53 		.ascii	"IO_Stat_Reg_Read\000"
 1220      7461745F 
 1220      5265675F 
 1220      52656164 
 1220      00
 1221              	.LASF3:
 1222 0167 73686F72 		.ascii	"short unsigned int\000"
 1222      7420756E 
 1222      7369676E 
 1222      65642069 
 1222      6E7400
 1223              	.LASF19:
 1224 017a 48616E64 		.ascii	"HandleZ80IO\000"
 1224      6C655A38 
 1224      30494F00 
 1225              	.LASF49:
 1226 0186 494F5F43 		.ascii	"IO_Ctrl_Reg_Read\000"
 1226      74726C5F 
 1226      5265675F 
 1226      52656164 
 1226      00
 1227              	.LASF5:
 1228 0197 6C6F6E67 		.ascii	"long unsigned int\000"
 1228      20756E73 
 1228      69676E65 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 29


 1228      6420696E 
 1228      7400
 1229              	.LASF45:
 1230 01a9 43465265 		.ascii	"CFReadStatus\000"
 1230      61645374 
 1230      61747573 
 1230      00
 1231              	.LASF28:
 1232 01b6 53696F52 		.ascii	"SioReadDataB\000"
 1232      65616444 
 1232      61746142 
 1232      00
 1233              	.LASF27:
 1234 01c3 53696F57 		.ascii	"SioWriteCtrlA\000"
 1234      72697465 
 1234      4374726C 
 1234      4100
 1235              	.LASF30:
 1236 01d1 53696F57 		.ascii	"SioWriteCtrlB\000"
 1236      72697465 
 1236      4374726C 
 1236      4200
 1237              	.LASF8:
 1238 01df 756E7369 		.ascii	"unsigned int\000"
 1238      676E6564 
 1238      20696E74 
 1238      00
 1239              	.LASF7:
 1240 01ec 6C6F6E67 		.ascii	"long long unsigned int\000"
 1240      206C6F6E 
 1240      6720756E 
 1240      7369676E 
 1240      65642069 
 1241              	.LASF35:
 1242 0203 43465265 		.ascii	"CFReadSectorCount\000"
 1242      61645365 
 1242      63746F72 
 1242      436F756E 
 1242      7400
 1243              	.LASF26:
 1244 0215 53696F57 		.ascii	"SioWriteDataA\000"
 1244      72697465 
 1244      44617461 
 1244      4100
 1245              	.LASF29:
 1246 0223 53696F57 		.ascii	"SioWriteDataB\000"
 1246      72697465 
 1246      44617461 
 1246      4200
 1247              	.LASF34:
 1248 0231 43465772 		.ascii	"CFWriteFeatures\000"
 1248      69746546 
 1248      65617475 
 1248      72657300 
 1249              	.LASF32:
 1250 0241 43465772 		.ascii	"CFWriteData\000"
 1250      69746544 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 30


 1250      61746100 
 1251              	.LASF54:
 1252 024d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1252      52784275 
 1252      66666572 
 1252      00
 1253              	.LASF10:
 1254 025a 696E7433 		.ascii	"int32_t\000"
 1254      325F7400 
 1255              	.LASF16:
 1256 0262 73697A65 		.ascii	"sizetype\000"
 1256      74797065 
 1256      00
 1257              	.LASF6:
 1258 026b 6C6F6E67 		.ascii	"long long int\000"
 1258      206C6F6E 
 1258      6720696E 
 1258      7400
 1259              	.LASF41:
 1260 0279 43465265 		.ascii	"CFReadCylHigh\000"
 1260      61644379 
 1260      6C486967 
 1260      6800
 1261              	.LASF14:
 1262 0287 63686172 		.ascii	"char\000"
 1262      00
 1263              	.LASF50:
 1264 028c 494F5F43 		.ascii	"IO_Ctrl_Reg_Write\000"
 1264      74726C5F 
 1264      5265675F 
 1264      57726974 
 1264      6500
 1265              	.LASF24:
 1266 029e 4164724C 		.ascii	"AdrLowIn_Read\000"
 1266      6F77496E 
 1266      5F526561 
 1266      6400
 1267              	.LASF52:
 1268 02ac 5A38305F 		.ascii	"Z80_IO_Handle.c\000"
 1268      494F5F48 
 1268      616E646C 
 1268      652E6300 
 1269              	.LASF21:
 1270 02bc 77616974 		.ascii	"waitNextIORq\000"
 1270      4E657874 
 1270      494F5271 
 1270      00
 1271              	.LASF31:
 1272 02c9 43465265 		.ascii	"CFReadData\000"
 1272      61644461 
 1272      746100
 1273              	.LASF20:
 1274 02d4 61636B49 		.ascii	"ackIO\000"
 1274      4F00
 1275              	.LASF2:
 1276 02da 73686F72 		.ascii	"short int\000"
 1276      7420696E 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccmm230D.s 			page 31


 1276      7400
 1277              	.LASF53:
 1278 02e4 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\Doug Gillilan"
 1278      73657273 
 1278      5C48507A 
 1278      3432305C 
 1278      446F6375 
 1279 0312 645C5265 		.ascii	"d\\Retro-Computers\\Z80\\PSOC\\PSOC_Design_Files\\Z"
 1279      74726F2D 
 1279      436F6D70 
 1279      75746572 
 1279      735C5A38 
 1280 0340 38302D50 		.ascii	"80-PSoC-3-Chips_002\\Z80_3Pin.cydsn\000"
 1280      536F432D 
 1280      332D4368 
 1280      6970735F 
 1280      3030325C 
 1281              	.LASF11:
 1282 0363 75696E74 		.ascii	"uint8\000"
 1282      3800
 1283              	.LASF33:
 1284 0369 43465265 		.ascii	"CFReadErrorStat\000"
 1284      61644572 
 1284      726F7253 
 1284      74617400 
 1285              	.LASF4:
 1286 0379 6C6F6E67 		.ascii	"long int\000"
 1286      20696E74 
 1286      00
 1287              	.LASF15:
 1288 0382 6C6F6E67 		.ascii	"long double\000"
 1288      20646F75 
 1288      626C6500 
 1289              	.LASF0:
 1290 038e 7369676E 		.ascii	"signed char\000"
 1290      65642063 
 1290      68617200 
 1291              	.LASF36:
 1292 039a 43465772 		.ascii	"CFWriteSectorCount\000"
 1292      69746553 
 1292      6563746F 
 1292      72436F75 
 1292      6E7400
 1293              	.LASF23:
 1294 03ad 53696F52 		.ascii	"SioReadIntRegB\000"
 1294      65616449 
 1294      6E745265 
 1294      674200
 1295              	.LASF18:
 1296 03bc 696F5A38 		.ascii	"ioZ80Addr\000"
 1296      30416464 
 1296      7200
 1297              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
