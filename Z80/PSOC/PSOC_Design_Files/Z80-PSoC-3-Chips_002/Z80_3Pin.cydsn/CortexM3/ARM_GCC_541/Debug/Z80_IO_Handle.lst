ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Z80_IO_Handle.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HandleZ80IO,"ax",%progbits
  20              		.align	2
  21              		.global	HandleZ80IO
  22              		.thumb
  23              		.thumb_func
  24              		.type	HandleZ80IO, %function
  25              	HandleZ80IO:
  26              	.LFB63:
  27              		.file 1 "Z80_IO_Handle.c"
   1:Z80_IO_Handle.c **** /* ========================================
   2:Z80_IO_Handle.c ****  *
   3:Z80_IO_Handle.c ****  * Copyright LAND BOARDS, LLC, 2019
   4:Z80_IO_Handle.c ****  * All Rights Reserved
   5:Z80_IO_Handle.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Z80_IO_Handle.c ****  *
   7:Z80_IO_Handle.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Z80_IO_Handle.c ****  * WHICH IS THE PROPERTY OF Land Boards, LLC.
   9:Z80_IO_Handle.c ****  *
  10:Z80_IO_Handle.c ****  * ========================================
  11:Z80_IO_Handle.c **** */
  12:Z80_IO_Handle.c **** 
  13:Z80_IO_Handle.c **** #include <project.h>
  14:Z80_IO_Handle.c **** #include "FrontPanel.h"
  15:Z80_IO_Handle.c **** #include "Z80_IO_Handle.h"
  16:Z80_IO_Handle.c **** #include "Z80_SIO_emul.h"
  17:Z80_IO_Handle.c **** #include "Z80_PIO_emul.h"
  18:Z80_IO_Handle.c **** #include "Z80_6850_emul.h"
  19:Z80_IO_Handle.c **** #include "Hardware_Config.h"
  20:Z80_IO_Handle.c **** 
  21:Z80_IO_Handle.c **** void HandleZ80IO(void)
  22:Z80_IO_Handle.c **** {
  28              		.loc 1 22 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 2


  36              		.cfi_def_cfa_offset 16
  23:Z80_IO_Handle.c ****     volatile uint8 ioCrtlRegVal;
  24:Z80_IO_Handle.c ****     volatile uint8 ioZ80Addr;
  25:Z80_IO_Handle.c ****     
  26:Z80_IO_Handle.c ****     ioCrtlRegVal = IO_Stat_Reg_Read();
  37              		.loc 1 26 0
  38 0004 FFF7FEFF 		bl	IO_Stat_Reg_Read
  39              	.LVL0:
  40 0008 8DF80700 		strb	r0, [sp, #7]
  27:Z80_IO_Handle.c ****     if ((ioCrtlRegVal & IACK_MASK) == IN_IACK_CYCLE)
  41              		.loc 1 27 0
  42 000c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  43 0010 03F01903 		and	r3, r3, #25
  44 0014 102B     		cmp	r3, #16
  45 0016 02D1     		bne	.L2
  28:Z80_IO_Handle.c ****     {
  29:Z80_IO_Handle.c ****         SioReadIntRegB();
  46              		.loc 1 29 0
  47 0018 FFF7FEFF 		bl	SioReadIntRegB
  48              	.LVL1:
  30:Z80_IO_Handle.c ****         return;
  49              		.loc 1 30 0
  50 001c 29E0     		b	.L1
  51              	.L2:
  31:Z80_IO_Handle.c ****     }
  32:Z80_IO_Handle.c ****     ioZ80Addr = AdrLowIn_Read();
  52              		.loc 1 32 0
  53 001e FFF7FEFF 		bl	AdrLowIn_Read
  54              	.LVL2:
  55 0022 8DF80600 		strb	r0, [sp, #6]
  33:Z80_IO_Handle.c ****     switch (ioZ80Addr)
  56              		.loc 1 33 0
  57 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
  58 002a DBB2     		uxtb	r3, r3
  59 002c 802B     		cmp	r3, #128
  60 002e 11D0     		beq	.L4
  61 0030 812B     		cmp	r3, #129
  62 0032 1ED1     		bne	.L1
  34:Z80_IO_Handle.c ****     {
  35:Z80_IO_Handle.c **** #ifdef USING_SIO
  36:Z80_IO_Handle.c ****         case SIOA_D:
  37:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
  38:Z80_IO_Handle.c ****             {
  39:Z80_IO_Handle.c ****                 SioReadDataA();
  40:Z80_IO_Handle.c ****                 return;
  41:Z80_IO_Handle.c ****             }
  42:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  43:Z80_IO_Handle.c ****             {
  44:Z80_IO_Handle.c ****                 SioWriteDataA();
  45:Z80_IO_Handle.c ****                 return;
  46:Z80_IO_Handle.c ****             }
  47:Z80_IO_Handle.c ****             break;
  48:Z80_IO_Handle.c ****         case SIOA_C:    // Control register
  49:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  50:Z80_IO_Handle.c ****             {
  51:Z80_IO_Handle.c ****                 SioWriteCtrlA();
  52:Z80_IO_Handle.c ****                 return;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 3


  53:Z80_IO_Handle.c ****             }
  54:Z80_IO_Handle.c ****             break;
  55:Z80_IO_Handle.c ****         case SIOB_D:
  56:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
  57:Z80_IO_Handle.c ****             {
  58:Z80_IO_Handle.c ****                 SioReadDataB();
  59:Z80_IO_Handle.c ****                 return;
  60:Z80_IO_Handle.c ****             }
  61:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  62:Z80_IO_Handle.c ****             {
  63:Z80_IO_Handle.c ****                 SioWriteDataB();
  64:Z80_IO_Handle.c ****                 return;
  65:Z80_IO_Handle.c ****             }
  66:Z80_IO_Handle.c ****             break;
  67:Z80_IO_Handle.c ****         case SIOB_C:
  68:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  69:Z80_IO_Handle.c ****             {
  70:Z80_IO_Handle.c ****                 SioWriteCtrlB();
  71:Z80_IO_Handle.c ****                 return;
  72:Z80_IO_Handle.c ****             }
  73:Z80_IO_Handle.c ****             break;
  74:Z80_IO_Handle.c **** #endif
  75:Z80_IO_Handle.c **** #ifdef USING_6850
  76:Z80_IO_Handle.c ****         case M6850_D:
  77:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
  63              		.loc 1 77 0
  64 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  65 0038 DBB2     		uxtb	r3, r3
  66 003a 1C2B     		cmp	r3, #28
  67 003c 02D1     		bne	.L6
  78:Z80_IO_Handle.c ****             {
  79:Z80_IO_Handle.c ****                 M6850ReadData();
  68              		.loc 1 79 0
  69 003e FFF7FEFF 		bl	M6850ReadData
  70              	.LVL3:
  80:Z80_IO_Handle.c ****                 return;
  71              		.loc 1 80 0
  72 0042 16E0     		b	.L1
  73              	.L6:
  81:Z80_IO_Handle.c ****             }
  82:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  74              		.loc 1 82 0
  75 0044 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  76 0048 DBB2     		uxtb	r3, r3
  77 004a 1A2B     		cmp	r3, #26
  78 004c 11D1     		bne	.L1
  83:Z80_IO_Handle.c ****             {
  84:Z80_IO_Handle.c ****                 M6850WriteData();
  79              		.loc 1 84 0
  80 004e FFF7FEFF 		bl	M6850WriteData
  81              	.LVL4:
  85:Z80_IO_Handle.c ****                 return;
  82              		.loc 1 85 0
  83 0052 0EE0     		b	.L1
  84              	.L4:
  86:Z80_IO_Handle.c ****             }
  87:Z80_IO_Handle.c ****             break;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 4


  88:Z80_IO_Handle.c ****         case  M6850_C:    // Control register
  89:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
  85              		.loc 1 89 0
  86 0054 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  87 0058 DBB2     		uxtb	r3, r3
  88 005a 1C2B     		cmp	r3, #28
  89 005c 02D1     		bne	.L7
  90:Z80_IO_Handle.c ****             {
  91:Z80_IO_Handle.c ****                 M6850ReadStatus();
  90              		.loc 1 91 0
  91 005e FFF7FEFF 		bl	M6850ReadStatus
  92              	.LVL5:
  92:Z80_IO_Handle.c ****                 return;
  93              		.loc 1 92 0
  94 0062 06E0     		b	.L1
  95              	.L7:
  93:Z80_IO_Handle.c ****             }
  94:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
  96              		.loc 1 94 0
  97 0064 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  98 0068 DBB2     		uxtb	r3, r3
  99 006a 1A2B     		cmp	r3, #26
 100 006c 01D1     		bne	.L1
  95:Z80_IO_Handle.c ****             {
  96:Z80_IO_Handle.c ****                 M6850WriteCtrl();
 101              		.loc 1 96 0
 102 006e FFF7FEFF 		bl	M6850WriteCtrl
 103              	.LVL6:
 104              	.L1:
  97:Z80_IO_Handle.c ****                 return;
  98:Z80_IO_Handle.c ****             }
  99:Z80_IO_Handle.c ****             break;
 100:Z80_IO_Handle.c **** #endif
 101:Z80_IO_Handle.c **** #ifdef USING_FRONT_PANEL
 102:Z80_IO_Handle.c ****         case FR_PNL_IO_LO:
 103:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 104:Z80_IO_Handle.c ****             {
 105:Z80_IO_Handle.c ****                 FrontPanelZ80Read(0);
 106:Z80_IO_Handle.c ****                 return;
 107:Z80_IO_Handle.c ****             }
 108:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 109:Z80_IO_Handle.c ****             {
 110:Z80_IO_Handle.c ****                 FrontPanelZ80Write(0);
 111:Z80_IO_Handle.c ****                 return;
 112:Z80_IO_Handle.c ****             }
 113:Z80_IO_Handle.c ****             break;
 114:Z80_IO_Handle.c ****         case FR_PNL_IO_LO_MID:
 115:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 116:Z80_IO_Handle.c ****             {
 117:Z80_IO_Handle.c ****                 FrontPanelZ80Read(1);
 118:Z80_IO_Handle.c ****                 return;
 119:Z80_IO_Handle.c ****             }
 120:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 121:Z80_IO_Handle.c ****             {
 122:Z80_IO_Handle.c ****                 FrontPanelZ80Write(1);
 123:Z80_IO_Handle.c ****                 return;
 124:Z80_IO_Handle.c ****             }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 5


 125:Z80_IO_Handle.c ****             break;
 126:Z80_IO_Handle.c ****         case FR_PNL_IO_HI_MID:
 127:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 128:Z80_IO_Handle.c ****             {
 129:Z80_IO_Handle.c ****                 FrontPanelZ80Read(2);
 130:Z80_IO_Handle.c ****                 return;
 131:Z80_IO_Handle.c ****             }
 132:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 133:Z80_IO_Handle.c ****             {
 134:Z80_IO_Handle.c ****                 FrontPanelZ80Write(2);
 135:Z80_IO_Handle.c ****                 return;
 136:Z80_IO_Handle.c ****             }
 137:Z80_IO_Handle.c ****             break;
 138:Z80_IO_Handle.c ****         case FR_PNL_IO_HI:
 139:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 140:Z80_IO_Handle.c ****             {
 141:Z80_IO_Handle.c ****                 FrontPanelZ80Read(3);
 142:Z80_IO_Handle.c ****                 return;
 143:Z80_IO_Handle.c ****             }
 144:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 145:Z80_IO_Handle.c ****             {
 146:Z80_IO_Handle.c ****                 FrontPanelZ80Write(3);
 147:Z80_IO_Handle.c ****                 return;
 148:Z80_IO_Handle.c ****             }
 149:Z80_IO_Handle.c ****             break;
 150:Z80_IO_Handle.c **** #endif
 151:Z80_IO_Handle.c **** #ifdef USING_EXP_MCCP23017
 152:Z80_IO_Handle.c ****         case PIOA_D:
 153:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)             // regular read cycle
 154:Z80_IO_Handle.c ****             {
 155:Z80_IO_Handle.c ****                 PioReadDataA();
 156:Z80_IO_Handle.c ****                 return;
 157:Z80_IO_Handle.c ****             }
 158:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 159:Z80_IO_Handle.c ****             {
 160:Z80_IO_Handle.c ****                 PioWriteDataA();
 161:Z80_IO_Handle.c ****                 return;
 162:Z80_IO_Handle.c ****             }
 163:Z80_IO_Handle.c ****             break;
 164:Z80_IO_Handle.c ****         case PIOA_C:    // Control register
 165:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 166:Z80_IO_Handle.c ****             {
 167:Z80_IO_Handle.c ****                 PioWriteCtrlA();
 168:Z80_IO_Handle.c ****                 return;
 169:Z80_IO_Handle.c ****             }
 170:Z80_IO_Handle.c ****             break;
 171:Z80_IO_Handle.c ****         case PIOB_D:
 172:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_READ_CYCLE)            // regular read cycle
 173:Z80_IO_Handle.c ****             {
 174:Z80_IO_Handle.c ****                 PioReadDataB();
 175:Z80_IO_Handle.c ****                 return;
 176:Z80_IO_Handle.c ****             }
 177:Z80_IO_Handle.c ****             else if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 178:Z80_IO_Handle.c ****             {
 179:Z80_IO_Handle.c ****                 SioWriteDataB();
 180:Z80_IO_Handle.c ****                 return;
 181:Z80_IO_Handle.c ****             }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 6


 182:Z80_IO_Handle.c ****             break;
 183:Z80_IO_Handle.c ****         case PIOB_C:
 184:Z80_IO_Handle.c ****             if (ioCrtlRegVal == REGULAR_WRITE_CYCLE)      // regular write cycle
 185:Z80_IO_Handle.c ****             {
 186:Z80_IO_Handle.c ****                 PioWriteCtrlB();
 187:Z80_IO_Handle.c ****                 return;
 188:Z80_IO_Handle.c ****             }
 189:Z80_IO_Handle.c ****             break;
 190:Z80_IO_Handle.c **** #endif
 191:Z80_IO_Handle.c ****         default:    // Handle other cases
 192:Z80_IO_Handle.c ****             break;
 193:Z80_IO_Handle.c ****     }
 194:Z80_IO_Handle.c **** }
 105              		.loc 1 194 0
 106 0072 03B0     		add	sp, sp, #12
 107              		.cfi_def_cfa_offset 4
 108              		@ sp needed
 109 0074 5DF804FB 		ldr	pc, [sp], #4
 110              		.cfi_endproc
 111              	.LFE63:
 112              		.size	HandleZ80IO, .-HandleZ80IO
 113              		.section	.text.ackIO,"ax",%progbits
 114              		.align	2
 115              		.global	ackIO
 116              		.thumb
 117              		.thumb_func
 118              		.type	ackIO, %function
 119              	ackIO:
 120              	.LFB64:
 195:Z80_IO_Handle.c **** 
 196:Z80_IO_Handle.c **** void ackIO(void)
 197:Z80_IO_Handle.c **** {
 121              		.loc 1 197 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 08B5     		push	{r3, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 3, -8
 128              		.cfi_offset 14, -4
 198:Z80_IO_Handle.c ****     IO_Ctrl_Reg_Write(IO_Ctrl_Reg_Read() | CLR_IO_INT_BIT);
 129              		.loc 1 198 0
 130 0002 FFF7FEFF 		bl	IO_Ctrl_Reg_Read
 131              	.LVL7:
 132 0006 40F00100 		orr	r0, r0, #1
 133 000a C0B2     		uxtb	r0, r0
 134 000c FFF7FEFF 		bl	IO_Ctrl_Reg_Write
 135              	.LVL8:
 136 0010 08BD     		pop	{r3, pc}
 137              		.cfi_endproc
 138              	.LFE64:
 139              		.size	ackIO, .-ackIO
 140 0012 00BF     		.section	.text.waitNextIORq,"ax",%progbits
 141              		.align	2
 142              		.global	waitNextIORq
 143              		.thumb
 144              		.thumb_func
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 7


 145              		.type	waitNextIORq, %function
 146              	waitNextIORq:
 147              	.LFB65:
 199:Z80_IO_Handle.c **** }
 200:Z80_IO_Handle.c **** 
 201:Z80_IO_Handle.c **** void waitNextIORq(void)
 202:Z80_IO_Handle.c **** {
 148              		.loc 1 202 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 08B5     		push	{r3, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 156              	.L12:
 203:Z80_IO_Handle.c ****     while ((IO_Stat_Reg_Read() & IOBUSY_BIT) == 0x00);
 157              		.loc 1 203 0 discriminator 1
 158 0002 FFF7FEFF 		bl	IO_Stat_Reg_Read
 159              	.LVL9:
 160 0006 10F0100F 		tst	r0, #16
 161 000a FAD0     		beq	.L12
 204:Z80_IO_Handle.c **** }
 162              		.loc 1 204 0
 163 000c 08BD     		pop	{r3, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	waitNextIORq, .-waitNextIORq
 167 000e 00BF     		.text
 168              	.Letext0:
 169              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 170              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 171              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 172              		.file 5 "Generated_Source\\PSoC5/IO_Stat_Reg.h"
 173              		.file 6 "Z80_SIO_emul.h"
 174              		.file 7 "Generated_Source\\PSoC5/AdrLowIn.h"
 175              		.file 8 "Z80_6850_emul.h"
 176              		.file 9 "Generated_Source\\PSoC5/IO_Ctrl_Reg.h"
 177              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 178              		.section	.debug_info,"",%progbits
 179              	.Ldebug_info0:
 180 0000 DE010000 		.4byte	0x1de
 181 0004 0400     		.2byte	0x4
 182 0006 00000000 		.4byte	.Ldebug_abbrev0
 183 000a 04       		.byte	0x4
 184 000b 01       		.uleb128 0x1
 185 000c 4F000000 		.4byte	.LASF31
 186 0010 0C       		.byte	0xc
 187 0011 C4010000 		.4byte	.LASF32
 188 0015 F1010000 		.4byte	.LASF33
 189 0019 00000000 		.4byte	.Ldebug_ranges0+0
 190 001d 00000000 		.4byte	0
 191 0021 00000000 		.4byte	.Ldebug_line0
 192 0025 02       		.uleb128 0x2
 193 0026 01       		.byte	0x1
 194 0027 06       		.byte	0x6
 195 0028 8B020000 		.4byte	.LASF0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 8


 196 002c 02       		.uleb128 0x2
 197 002d 01       		.byte	0x1
 198 002e 08       		.byte	0x8
 199 002f 41000000 		.4byte	.LASF1
 200 0033 02       		.uleb128 0x2
 201 0034 02       		.byte	0x2
 202 0035 05       		.byte	0x5
 203 0036 E7010000 		.4byte	.LASF2
 204 003a 02       		.uleb128 0x2
 205 003b 02       		.byte	0x2
 206 003c 07       		.byte	0x7
 207 003d EE000000 		.4byte	.LASF3
 208 0041 03       		.uleb128 0x3
 209 0042 0E000000 		.4byte	.LASF9
 210 0046 02       		.byte	0x2
 211 0047 3F       		.byte	0x3f
 212 0048 4C000000 		.4byte	0x4c
 213 004c 02       		.uleb128 0x2
 214 004d 04       		.byte	0x4
 215 004e 05       		.byte	0x5
 216 004f 76020000 		.4byte	.LASF4
 217 0053 02       		.uleb128 0x2
 218 0054 04       		.byte	0x4
 219 0055 07       		.byte	0x7
 220 0056 1E010000 		.4byte	.LASF5
 221 005a 02       		.uleb128 0x2
 222 005b 08       		.byte	0x8
 223 005c 05       		.byte	0x5
 224 005d 9F010000 		.4byte	.LASF6
 225 0061 02       		.uleb128 0x2
 226 0062 08       		.byte	0x8
 227 0063 07       		.byte	0x7
 228 0064 68010000 		.4byte	.LASF7
 229 0068 04       		.uleb128 0x4
 230 0069 04       		.byte	0x4
 231 006a 05       		.byte	0x5
 232 006b 696E7400 		.ascii	"int\000"
 233 006f 02       		.uleb128 0x2
 234 0070 04       		.byte	0x4
 235 0071 07       		.byte	0x7
 236 0072 5B010000 		.4byte	.LASF8
 237 0076 03       		.uleb128 0x3
 238 0077 8E010000 		.4byte	.LASF10
 239 007b 03       		.byte	0x3
 240 007c 2C       		.byte	0x2c
 241 007d 41000000 		.4byte	0x41
 242 0081 05       		.uleb128 0x5
 243 0082 70020000 		.4byte	.LASF11
 244 0086 04       		.byte	0x4
 245 0087 E401     		.2byte	0x1e4
 246 0089 2C000000 		.4byte	0x2c
 247 008d 02       		.uleb128 0x2
 248 008e 04       		.byte	0x4
 249 008f 04       		.byte	0x4
 250 0090 3B000000 		.4byte	.LASF12
 251 0094 02       		.uleb128 0x2
 252 0095 08       		.byte	0x8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 9


 253 0096 04       		.byte	0x4
 254 0097 18000000 		.4byte	.LASF13
 255 009b 02       		.uleb128 0x2
 256 009c 01       		.byte	0x1
 257 009d 08       		.byte	0x8
 258 009e AD010000 		.4byte	.LASF14
 259 00a2 06       		.uleb128 0x6
 260 00a3 81000000 		.4byte	0x81
 261 00a7 02       		.uleb128 0x2
 262 00a8 08       		.byte	0x8
 263 00a9 04       		.byte	0x4
 264 00aa 7F020000 		.4byte	.LASF15
 265 00ae 02       		.uleb128 0x2
 266 00af 04       		.byte	0x4
 267 00b0 07       		.byte	0x7
 268 00b1 96010000 		.4byte	.LASF16
 269 00b5 07       		.uleb128 0x7
 270 00b6 01010000 		.4byte	.LASF19
 271 00ba 01       		.byte	0x1
 272 00bb 15       		.byte	0x15
 273 00bc 00000000 		.4byte	.LFB63
 274 00c0 78000000 		.4byte	.LFE63-.LFB63
 275 00c4 01       		.uleb128 0x1
 276 00c5 9C       		.byte	0x9c
 277 00c6 26010000 		.4byte	0x126
 278 00ca 08       		.uleb128 0x8
 279 00cb 1F000000 		.4byte	.LASF17
 280 00cf 01       		.byte	0x1
 281 00d0 17       		.byte	0x17
 282 00d1 A2000000 		.4byte	0xa2
 283 00d5 02       		.uleb128 0x2
 284 00d6 91       		.byte	0x91
 285 00d7 77       		.sleb128 -9
 286 00d8 08       		.uleb128 0x8
 287 00d9 A6020000 		.4byte	.LASF18
 288 00dd 01       		.byte	0x1
 289 00de 18       		.byte	0x18
 290 00df A2000000 		.4byte	0xa2
 291 00e3 02       		.uleb128 0x2
 292 00e4 91       		.byte	0x91
 293 00e5 76       		.sleb128 -10
 294 00e6 09       		.uleb128 0x9
 295 00e7 08000000 		.4byte	.LVL0
 296 00eb 7E010000 		.4byte	0x17e
 297 00ef 09       		.uleb128 0x9
 298 00f0 1C000000 		.4byte	.LVL1
 299 00f4 89010000 		.4byte	0x189
 300 00f8 09       		.uleb128 0x9
 301 00f9 22000000 		.4byte	.LVL2
 302 00fd 94010000 		.4byte	0x194
 303 0101 09       		.uleb128 0x9
 304 0102 42000000 		.4byte	.LVL3
 305 0106 9F010000 		.4byte	0x19f
 306 010a 09       		.uleb128 0x9
 307 010b 52000000 		.4byte	.LVL4
 308 010f AA010000 		.4byte	0x1aa
 309 0113 09       		.uleb128 0x9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 10


 310 0114 62000000 		.4byte	.LVL5
 311 0118 B5010000 		.4byte	0x1b5
 312 011c 09       		.uleb128 0x9
 313 011d 72000000 		.4byte	.LVL6
 314 0121 C0010000 		.4byte	0x1c0
 315 0125 00       		.byte	0
 316 0126 07       		.uleb128 0x7
 317 0127 E1010000 		.4byte	.LASF20
 318 012b 01       		.byte	0x1
 319 012c C4       		.byte	0xc4
 320 012d 00000000 		.4byte	.LFB64
 321 0131 12000000 		.4byte	.LFE64-.LFB64
 322 0135 01       		.uleb128 0x1
 323 0136 9C       		.byte	0x9c
 324 0137 4E010000 		.4byte	0x14e
 325 013b 09       		.uleb128 0x9
 326 013c 06000000 		.4byte	.LVL7
 327 0140 CB010000 		.4byte	0x1cb
 328 0144 09       		.uleb128 0x9
 329 0145 10000000 		.4byte	.LVL8
 330 0149 D6010000 		.4byte	0x1d6
 331 014d 00       		.byte	0
 332 014e 07       		.uleb128 0x7
 333 014f D4010000 		.4byte	.LASF21
 334 0153 01       		.byte	0x1
 335 0154 C9       		.byte	0xc9
 336 0155 00000000 		.4byte	.LFB65
 337 0159 0E000000 		.4byte	.LFE65-.LFB65
 338 015d 01       		.uleb128 0x1
 339 015e 9C       		.byte	0x9c
 340 015f 6D010000 		.4byte	0x16d
 341 0163 09       		.uleb128 0x9
 342 0164 06000000 		.4byte	.LVL9
 343 0168 7E010000 		.4byte	0x17e
 344 016c 00       		.byte	0
 345 016d 0A       		.uleb128 0xa
 346 016e 4E010000 		.4byte	.LASF34
 347 0172 0A       		.byte	0xa
 348 0173 1207     		.2byte	0x712
 349 0175 79010000 		.4byte	0x179
 350 0179 06       		.uleb128 0x6
 351 017a 76000000 		.4byte	0x76
 352 017e 0B       		.uleb128 0xb
 353 017f DD000000 		.4byte	.LASF22
 354 0183 DD000000 		.4byte	.LASF22
 355 0187 05       		.byte	0x5
 356 0188 30       		.byte	0x30
 357 0189 0B       		.uleb128 0xb
 358 018a 97020000 		.4byte	.LASF23
 359 018e 97020000 		.4byte	.LASF23
 360 0192 06       		.byte	0x6
 361 0193 1D       		.byte	0x1d
 362 0194 0B       		.uleb128 0xb
 363 0195 40010000 		.4byte	.LASF24
 364 0199 40010000 		.4byte	.LASF24
 365 019d 07       		.byte	0x7
 366 019e 30       		.byte	0x30
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 11


 367 019f 0B       		.uleb128 0xb
 368 01a0 00000000 		.4byte	.LASF25
 369 01a4 00000000 		.4byte	.LASF25
 370 01a8 08       		.byte	0x8
 371 01a9 0D       		.byte	0xd
 372 01aa 0B       		.uleb128 0xb
 373 01ab 2C000000 		.4byte	.LASF26
 374 01af 2C000000 		.4byte	.LASF26
 375 01b3 08       		.byte	0x8
 376 01b4 0E       		.byte	0xe
 377 01b5 0B       		.uleb128 0xb
 378 01b6 30010000 		.4byte	.LASF27
 379 01ba 30010000 		.4byte	.LASF27
 380 01be 08       		.byte	0x8
 381 01bf 0F       		.byte	0xf
 382 01c0 0B       		.uleb128 0xb
 383 01c1 7F010000 		.4byte	.LASF28
 384 01c5 7F010000 		.4byte	.LASF28
 385 01c9 08       		.byte	0x8
 386 01ca 10       		.byte	0x10
 387 01cb 0B       		.uleb128 0xb
 388 01cc 0D010000 		.4byte	.LASF29
 389 01d0 0D010000 		.4byte	.LASF29
 390 01d4 09       		.byte	0x9
 391 01d5 30       		.byte	0x30
 392 01d6 0B       		.uleb128 0xb
 393 01d7 B2010000 		.4byte	.LASF30
 394 01db B2010000 		.4byte	.LASF30
 395 01df 09       		.byte	0x9
 396 01e0 2F       		.byte	0x2f
 397 01e1 00       		.byte	0
 398              		.section	.debug_abbrev,"",%progbits
 399              	.Ldebug_abbrev0:
 400 0000 01       		.uleb128 0x1
 401 0001 11       		.uleb128 0x11
 402 0002 01       		.byte	0x1
 403 0003 25       		.uleb128 0x25
 404 0004 0E       		.uleb128 0xe
 405 0005 13       		.uleb128 0x13
 406 0006 0B       		.uleb128 0xb
 407 0007 03       		.uleb128 0x3
 408 0008 0E       		.uleb128 0xe
 409 0009 1B       		.uleb128 0x1b
 410 000a 0E       		.uleb128 0xe
 411 000b 55       		.uleb128 0x55
 412 000c 17       		.uleb128 0x17
 413 000d 11       		.uleb128 0x11
 414 000e 01       		.uleb128 0x1
 415 000f 10       		.uleb128 0x10
 416 0010 17       		.uleb128 0x17
 417 0011 00       		.byte	0
 418 0012 00       		.byte	0
 419 0013 02       		.uleb128 0x2
 420 0014 24       		.uleb128 0x24
 421 0015 00       		.byte	0
 422 0016 0B       		.uleb128 0xb
 423 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 12


 424 0018 3E       		.uleb128 0x3e
 425 0019 0B       		.uleb128 0xb
 426 001a 03       		.uleb128 0x3
 427 001b 0E       		.uleb128 0xe
 428 001c 00       		.byte	0
 429 001d 00       		.byte	0
 430 001e 03       		.uleb128 0x3
 431 001f 16       		.uleb128 0x16
 432 0020 00       		.byte	0
 433 0021 03       		.uleb128 0x3
 434 0022 0E       		.uleb128 0xe
 435 0023 3A       		.uleb128 0x3a
 436 0024 0B       		.uleb128 0xb
 437 0025 3B       		.uleb128 0x3b
 438 0026 0B       		.uleb128 0xb
 439 0027 49       		.uleb128 0x49
 440 0028 13       		.uleb128 0x13
 441 0029 00       		.byte	0
 442 002a 00       		.byte	0
 443 002b 04       		.uleb128 0x4
 444 002c 24       		.uleb128 0x24
 445 002d 00       		.byte	0
 446 002e 0B       		.uleb128 0xb
 447 002f 0B       		.uleb128 0xb
 448 0030 3E       		.uleb128 0x3e
 449 0031 0B       		.uleb128 0xb
 450 0032 03       		.uleb128 0x3
 451 0033 08       		.uleb128 0x8
 452 0034 00       		.byte	0
 453 0035 00       		.byte	0
 454 0036 05       		.uleb128 0x5
 455 0037 16       		.uleb128 0x16
 456 0038 00       		.byte	0
 457 0039 03       		.uleb128 0x3
 458 003a 0E       		.uleb128 0xe
 459 003b 3A       		.uleb128 0x3a
 460 003c 0B       		.uleb128 0xb
 461 003d 3B       		.uleb128 0x3b
 462 003e 05       		.uleb128 0x5
 463 003f 49       		.uleb128 0x49
 464 0040 13       		.uleb128 0x13
 465 0041 00       		.byte	0
 466 0042 00       		.byte	0
 467 0043 06       		.uleb128 0x6
 468 0044 35       		.uleb128 0x35
 469 0045 00       		.byte	0
 470 0046 49       		.uleb128 0x49
 471 0047 13       		.uleb128 0x13
 472 0048 00       		.byte	0
 473 0049 00       		.byte	0
 474 004a 07       		.uleb128 0x7
 475 004b 2E       		.uleb128 0x2e
 476 004c 01       		.byte	0x1
 477 004d 3F       		.uleb128 0x3f
 478 004e 19       		.uleb128 0x19
 479 004f 03       		.uleb128 0x3
 480 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 13


 481 0051 3A       		.uleb128 0x3a
 482 0052 0B       		.uleb128 0xb
 483 0053 3B       		.uleb128 0x3b
 484 0054 0B       		.uleb128 0xb
 485 0055 27       		.uleb128 0x27
 486 0056 19       		.uleb128 0x19
 487 0057 11       		.uleb128 0x11
 488 0058 01       		.uleb128 0x1
 489 0059 12       		.uleb128 0x12
 490 005a 06       		.uleb128 0x6
 491 005b 40       		.uleb128 0x40
 492 005c 18       		.uleb128 0x18
 493 005d 9742     		.uleb128 0x2117
 494 005f 19       		.uleb128 0x19
 495 0060 01       		.uleb128 0x1
 496 0061 13       		.uleb128 0x13
 497 0062 00       		.byte	0
 498 0063 00       		.byte	0
 499 0064 08       		.uleb128 0x8
 500 0065 34       		.uleb128 0x34
 501 0066 00       		.byte	0
 502 0067 03       		.uleb128 0x3
 503 0068 0E       		.uleb128 0xe
 504 0069 3A       		.uleb128 0x3a
 505 006a 0B       		.uleb128 0xb
 506 006b 3B       		.uleb128 0x3b
 507 006c 0B       		.uleb128 0xb
 508 006d 49       		.uleb128 0x49
 509 006e 13       		.uleb128 0x13
 510 006f 02       		.uleb128 0x2
 511 0070 18       		.uleb128 0x18
 512 0071 00       		.byte	0
 513 0072 00       		.byte	0
 514 0073 09       		.uleb128 0x9
 515 0074 898201   		.uleb128 0x4109
 516 0077 00       		.byte	0
 517 0078 11       		.uleb128 0x11
 518 0079 01       		.uleb128 0x1
 519 007a 31       		.uleb128 0x31
 520 007b 13       		.uleb128 0x13
 521 007c 00       		.byte	0
 522 007d 00       		.byte	0
 523 007e 0A       		.uleb128 0xa
 524 007f 34       		.uleb128 0x34
 525 0080 00       		.byte	0
 526 0081 03       		.uleb128 0x3
 527 0082 0E       		.uleb128 0xe
 528 0083 3A       		.uleb128 0x3a
 529 0084 0B       		.uleb128 0xb
 530 0085 3B       		.uleb128 0x3b
 531 0086 05       		.uleb128 0x5
 532 0087 49       		.uleb128 0x49
 533 0088 13       		.uleb128 0x13
 534 0089 3F       		.uleb128 0x3f
 535 008a 19       		.uleb128 0x19
 536 008b 3C       		.uleb128 0x3c
 537 008c 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 14


 538 008d 00       		.byte	0
 539 008e 00       		.byte	0
 540 008f 0B       		.uleb128 0xb
 541 0090 2E       		.uleb128 0x2e
 542 0091 00       		.byte	0
 543 0092 3F       		.uleb128 0x3f
 544 0093 19       		.uleb128 0x19
 545 0094 3C       		.uleb128 0x3c
 546 0095 19       		.uleb128 0x19
 547 0096 6E       		.uleb128 0x6e
 548 0097 0E       		.uleb128 0xe
 549 0098 03       		.uleb128 0x3
 550 0099 0E       		.uleb128 0xe
 551 009a 3A       		.uleb128 0x3a
 552 009b 0B       		.uleb128 0xb
 553 009c 3B       		.uleb128 0x3b
 554 009d 0B       		.uleb128 0xb
 555 009e 00       		.byte	0
 556 009f 00       		.byte	0
 557 00a0 00       		.byte	0
 558              		.section	.debug_aranges,"",%progbits
 559 0000 2C000000 		.4byte	0x2c
 560 0004 0200     		.2byte	0x2
 561 0006 00000000 		.4byte	.Ldebug_info0
 562 000a 04       		.byte	0x4
 563 000b 00       		.byte	0
 564 000c 0000     		.2byte	0
 565 000e 0000     		.2byte	0
 566 0010 00000000 		.4byte	.LFB63
 567 0014 78000000 		.4byte	.LFE63-.LFB63
 568 0018 00000000 		.4byte	.LFB64
 569 001c 12000000 		.4byte	.LFE64-.LFB64
 570 0020 00000000 		.4byte	.LFB65
 571 0024 0E000000 		.4byte	.LFE65-.LFB65
 572 0028 00000000 		.4byte	0
 573 002c 00000000 		.4byte	0
 574              		.section	.debug_ranges,"",%progbits
 575              	.Ldebug_ranges0:
 576 0000 00000000 		.4byte	.LFB63
 577 0004 78000000 		.4byte	.LFE63
 578 0008 00000000 		.4byte	.LFB64
 579 000c 12000000 		.4byte	.LFE64
 580 0010 00000000 		.4byte	.LFB65
 581 0014 0E000000 		.4byte	.LFE65
 582 0018 00000000 		.4byte	0
 583 001c 00000000 		.4byte	0
 584              		.section	.debug_line,"",%progbits
 585              	.Ldebug_line0:
 586 0000 FD010000 		.section	.debug_str,"MS",%progbits,1
 586      0200AA01 
 586      00000201 
 586      FB0E0D00 
 586      01010101 
 587              	.LASF25:
 588 0000 4D363835 		.ascii	"M6850ReadData\000"
 588      30526561 
 588      64446174 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 15


 588      6100
 589              	.LASF9:
 590 000e 5F5F696E 		.ascii	"__int32_t\000"
 590      7433325F 
 590      7400
 591              	.LASF13:
 592 0018 646F7562 		.ascii	"double\000"
 592      6C6500
 593              	.LASF17:
 594 001f 696F4372 		.ascii	"ioCrtlRegVal\000"
 594      746C5265 
 594      6756616C 
 594      00
 595              	.LASF26:
 596 002c 4D363835 		.ascii	"M6850WriteData\000"
 596      30577269 
 596      74654461 
 596      746100
 597              	.LASF12:
 598 003b 666C6F61 		.ascii	"float\000"
 598      7400
 599              	.LASF1:
 600 0041 756E7369 		.ascii	"unsigned char\000"
 600      676E6564 
 600      20636861 
 600      7200
 601              	.LASF31:
 602 004f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 602      43313120 
 602      352E342E 
 602      31203230 
 602      31363036 
 603 0082 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 603      20726576 
 603      6973696F 
 603      6E203233 
 603      37373135 
 604 00b5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 604      66756E63 
 604      74696F6E 
 604      2D736563 
 604      74696F6E 
 605              	.LASF22:
 606 00dd 494F5F53 		.ascii	"IO_Stat_Reg_Read\000"
 606      7461745F 
 606      5265675F 
 606      52656164 
 606      00
 607              	.LASF3:
 608 00ee 73686F72 		.ascii	"short unsigned int\000"
 608      7420756E 
 608      7369676E 
 608      65642069 
 608      6E7400
 609              	.LASF19:
 610 0101 48616E64 		.ascii	"HandleZ80IO\000"
 610      6C655A38 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 16


 610      30494F00 
 611              	.LASF29:
 612 010d 494F5F43 		.ascii	"IO_Ctrl_Reg_Read\000"
 612      74726C5F 
 612      5265675F 
 612      52656164 
 612      00
 613              	.LASF5:
 614 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 614      20756E73 
 614      69676E65 
 614      6420696E 
 614      7400
 615              	.LASF27:
 616 0130 4D363835 		.ascii	"M6850ReadStatus\000"
 616      30526561 
 616      64537461 
 616      74757300 
 617              	.LASF24:
 618 0140 4164724C 		.ascii	"AdrLowIn_Read\000"
 618      6F77496E 
 618      5F526561 
 618      6400
 619              	.LASF34:
 620 014e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 620      52784275 
 620      66666572 
 620      00
 621              	.LASF8:
 622 015b 756E7369 		.ascii	"unsigned int\000"
 622      676E6564 
 622      20696E74 
 622      00
 623              	.LASF7:
 624 0168 6C6F6E67 		.ascii	"long long unsigned int\000"
 624      206C6F6E 
 624      6720756E 
 624      7369676E 
 624      65642069 
 625              	.LASF28:
 626 017f 4D363835 		.ascii	"M6850WriteCtrl\000"
 626      30577269 
 626      74654374 
 626      726C00
 627              	.LASF10:
 628 018e 696E7433 		.ascii	"int32_t\000"
 628      325F7400 
 629              	.LASF16:
 630 0196 73697A65 		.ascii	"sizetype\000"
 630      74797065 
 630      00
 631              	.LASF6:
 632 019f 6C6F6E67 		.ascii	"long long int\000"
 632      206C6F6E 
 632      6720696E 
 632      7400
 633              	.LASF14:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 17


 634 01ad 63686172 		.ascii	"char\000"
 634      00
 635              	.LASF30:
 636 01b2 494F5F43 		.ascii	"IO_Ctrl_Reg_Write\000"
 636      74726C5F 
 636      5265675F 
 636      57726974 
 636      6500
 637              	.LASF32:
 638 01c4 5A38305F 		.ascii	"Z80_IO_Handle.c\000"
 638      494F5F48 
 638      616E646C 
 638      652E6300 
 639              	.LASF21:
 640 01d4 77616974 		.ascii	"waitNextIORq\000"
 640      4E657874 
 640      494F5271 
 640      00
 641              	.LASF20:
 642 01e1 61636B49 		.ascii	"ackIO\000"
 642      4F00
 643              	.LASF2:
 644 01e7 73686F72 		.ascii	"short int\000"
 644      7420696E 
 644      7400
 645              	.LASF33:
 646 01f1 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\Doug Gillilan"
 646      73657273 
 646      5C48507A 
 646      3432305C 
 646      446F6375 
 647 021f 645C5265 		.ascii	"d\\Retro-Computers\\Z80\\PSOC\\PSOC_Design_Files\\Z"
 647      74726F2D 
 647      436F6D70 
 647      75746572 
 647      735C5A38 
 648 024d 38302D50 		.ascii	"80-PSoC-3-Chips_002\\Z80_3Pin.cydsn\000"
 648      536F432D 
 648      332D4368 
 648      6970735F 
 648      3030325C 
 649              	.LASF11:
 650 0270 75696E74 		.ascii	"uint8\000"
 650      3800
 651              	.LASF4:
 652 0276 6C6F6E67 		.ascii	"long int\000"
 652      20696E74 
 652      00
 653              	.LASF15:
 654 027f 6C6F6E67 		.ascii	"long double\000"
 654      20646F75 
 654      626C6500 
 655              	.LASF0:
 656 028b 7369676E 		.ascii	"signed char\000"
 656      65642063 
 656      68617200 
 657              	.LASF23:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccD3WMQu.s 			page 18


 658 0297 53696F52 		.ascii	"SioReadIntRegB\000"
 658      65616449 
 658      6E745265 
 658      674200
 659              	.LASF18:
 660 02a6 696F5A38 		.ascii	"ioZ80Addr\000"
 660      30416464 
 660      7200
 661              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
