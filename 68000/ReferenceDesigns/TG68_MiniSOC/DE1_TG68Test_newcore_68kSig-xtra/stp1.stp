<session jtag_chain="USB-Blaster [USB-0]" jtag_device="@1: EP2C(15|20) (0x020B30DD)" sof_file="DE1TG68Test.sof">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" log="USE_GLOBAL_TEMP" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <signal_set global_temp="1" is_expanded="true" name="signal_set: 2012/04/28 11:17:40  #0">
      <clock name="CLOCK_50" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="128" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|nResetOut" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|as" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|clkena" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|lds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|rw" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|uds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[10]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[11]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[12]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[13]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[14]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[15]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[2]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[3]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[4]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[5]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[6]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[7]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[8]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[9]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_dtack" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|reset" tap_mode="classic" type="combinatorial"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|nResetOut" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|as" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|clkena" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|lds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|rw" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|uds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[10]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[11]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[12]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[13]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[14]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[15]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[2]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[3]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[4]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[5]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[6]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[7]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[8]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[9]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_dtack" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|reset" tap_mode="classic" type="combinatorial"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|S_state[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|nResetOut" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|as" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|clkena" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|lds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|rw" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|TG68:myTG68|uds" tap_mode="classic" type="combinatorial"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[0]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[10]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[11]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[12]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[13]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[14]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[15]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[1]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[2]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[3]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[4]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[5]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[6]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[7]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[8]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_datain[9]" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|cpu_dtack" tap_mode="classic" type="register"/>
          <wire name="TG68Test:myTG68Test|reset" tap_mode="classic" type="combinatorial"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|addr" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[31]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[30]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[29]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[28]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[27]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[26]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[25]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[24]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[23]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[22]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[21]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[20]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[19]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[18]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[17]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[16]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|cpu_datain" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|uds"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|lds"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|as"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|data_out" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|rw"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|reset"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_dtack"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|S_state" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|S_state[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|S_state[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|clkena"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|nResetOut"/>
        </data_view>
        <setup_view>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|addr" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[31]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[30]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[29]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[28]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[27]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[26]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[25]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[24]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[23]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[22]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[21]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[20]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[19]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[18]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[17]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[16]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|addr[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|cpu_datain" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_datain[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|uds"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|lds"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|as"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|data_out" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[15]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[14]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[13]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[12]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[11]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[10]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[9]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[8]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[7]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[6]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[5]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[4]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[3]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[2]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|data_out[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|rw"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|reset"/>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|cpu_dtack"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|S_state" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|S_state[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|S_state[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|clkena"/>
          <bus is_signal_inverted="no" link="all" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[1]"/>
            <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|busstate[0]"/>
          </bus>
          <net is_signal_inverted="no" name="TG68Test:myTG68Test|TG68:myTG68|TG68KdotC_Kernel:TG68_inst|nResetOut"/>
        </setup_view>
      </presentation>
      <trigger CRC="4BE61DD9" attribute_mem_mode="false" gap_record="true" global_temp="1" is_expanded="true" name="trigger: 2012/04/28 12:27:11  #0" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="1" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">
            <power_up enabled="yes">
            </power_up><op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>0000000000000000000000000000000000000000000000000000000000000000000000000000
            <pwr_up_transitional>0000000000000000000000000000000000000000000000000000000000000000000000000000</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
        <log>
          <data global_temp="1" name="log: 2012/04/28 23:11:14  #0" power_up_mode="false" sample_depth="128" trigger_positiondata>
          <extradata>1111111111111111T111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</extradata>
        </log>
      </trigger>
    </signal_set>
    <position_info>
      <single attribute="active tab" value="0"/>
      <single attribute="data horizontal scroll position" value="55"/>
      <single attribute="data vertical scroll position" value="0"/>
      <single attribute="zoom level denominator" value="1"/>
      <single attribute="zoom level numerator" value="8"/>
      <single attribute="zoom offset denominator" value="8"/>
      <single attribute="zoom offset numerator" value="130959"/>
    </position_info>
  </instance>
  <mnemonics/>
  <static_plugin_mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="data log widget visible" value="0"/>
    <single attribute="hierarchy widget height" value="133"/>
    <single attribute="hierarchy widget visible" value="0"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="jtag widget visible" value="1"/>
    <single attribute="sof manager visible" value="0"/>
    <multi attribute="column width" size="23" value="34,34,273,74,68,70,88,88,98,98,88,88,110,101,101,101,101,101,101,101,101,107,78"/>
    <multi attribute="frame size" size="2" value="1140,755"/>
    <multi attribute="jtag widget size" size="2" value="320,120"/>
  </global_info>
</session>
