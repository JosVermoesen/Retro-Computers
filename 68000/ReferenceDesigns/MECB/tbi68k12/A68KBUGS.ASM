*
*	A68KBUGS.ASM -- THIS FILE CONTAINS BUGS DUSCOVERED IN
*	VERSION 1.9 OF A68K CROSS ASSEMBLER.
*
*	LAST UPDATED: NOVEMBER 14, 1983
*
	ORG	$900		MEX68KECB TUTOR 1ST FREE ADDRESS
*
A68KBUGS:
*
* =====	MOVEP ASSEMBLES INCORRECTLY. (DISPLACEMENT WORD NOT GENERATED)
*
*	YOU MUST ADD THE DISPLACEMENTS MANUALLY FOLLOWING THE MOVEP
*	IN ORDER TO GENERATE CORRECT CODE
*
	MOVEP	D1,2(A3)
	DC.W	2		*** THIS IS MISSING DISPLACEMENT***
*
	MOVEP	2(A3),D1
	DC.W	2		*** AND HERE
*
	MOVEP.L	D1,2(A3)
	DC.W	2		*** AND HERE
*
	MOVEP.L	2(A3),D1
	DC.W	2		*** AND HERE
*
* ===== DS ASSEMBLER INSTRUCTION DOES NOT GENERATE CORRECT S RECORDS
*
*	THE BASIC PROBLEM IS THAT THE DS INSTRUCTION DOES NOT
*	FORCE A NEW S RECORD TO BE GENERATED. (THE ORG INSTRUCTION
*	DOES). HENCE, IN THE FOLLOWING EXAMPLE, THE DATA CONSTANT
*	BUGADR AND THE FIRST BYTE OF THE SECOND MOVE ARE INCORRECTLY
*	WRITTEN TO THE CURRENT S RECORD WHEN THE DS OCCURS.
*
*	THE FIX FOR THIS PROBLEM IS  AN ORG * INSTRUCTION IMMEDIATELY
*	AFTER THE DS TO FORCE A NEW S RECORD TO BE WRITTEN.
*
	MOVE	BUGADR,D1	THIS INSTRUCTION IS OK IN S RECORD
DSBUG:	DS.B	10		BUT THIS IS AT 0919 IN S RECORD!	
*	ORG	*		*** THIS IS THE BUG FIX***
BUGADR:	DC	1234		THIS IS AT 0916 IN S RECORD!!
	MOVE	D1,BUGADR	THE 31 IS AT 0918, REST AT 0923!!!
*
* =====	BYTE PADDING OF ADDRESS NOT REFLECTED IN CODE GENERATED
*
*	IF THE "WARNING" 00 -- INSERTED OCCURS YOU MUST MANUALLY
*	ENTER PADDING BYTES IN YOUR CODE FOR IT TO ASSEMBLE
*	CORRECTLY
*
	MOVE	PADBUG,D1	NOTE ADDRESS USED FOR PADBUG IS 93D!
ODDLEN:	DC.B	'ODD LENGTH STRING'
PADBUG:	DC.L	'OOPS'
	MOVE	D1,PADBUG	LIKEWISE, INCORRECT ADDRESS USED!
*
	END
	