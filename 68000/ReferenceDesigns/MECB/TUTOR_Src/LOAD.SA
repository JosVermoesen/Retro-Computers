LOAD     IDNT      2,0       LO & VE (Load & Verify) Commands.       02/22/82         XDEF      LOCMD         XDEF      VECMD SPC 1         XREF.S    ECHOPT1         XREF      ERROR         XREF      FIXBUF         XREF      FIXDADD         XREF      MACSBUG         XREF.S    OFFSET         XREF      OUT1CR         XREF.S    OUTPORT1         XREF      OUTPUT2         XREF.S    OUTTO         XREF      PNT2HX         XREF      PORTIN2         XREF.S    REGPC         XREF      SETME         XREF      SCANPORT         XREF.S    SYSTACKBUFFSIZE EQU       $80EOT      EQU       4         OFFSET    -((BUFFSIZE/2)+4)CC       DS.L      1         CC (BYTE COUNT)ADDRESS  DS.L      1         ADDRESS + OFFSETDATA     DS.B      1* THIS FUNCTION  1.) READS A "S-RECORD"  2.) FORMATS THE DATA ON THE STACK*   3.) CALCULATES THE CHECKSUM  4.) THEN STORES (VERIFIES) THE DATA TO*   MEMORY** WHEN VERIFYING RECORDS MAKE BE SKIPPED WHILE DISPLAYING THE MISS-MATCHED*  RECORDS.  DISPLAY FORMAT*   S1CCAAAA.-.-.-33.-*     CC                     BYTE COUNT*       AAAA                 ADDRESS*           .-.-.-  .-       DATA FIELDS THAT MATCHED*                 33         DATA MISS MATCH (DISPLAY DATA FROM S-RECORD) PAGE         SECTION   11*   ***LOAD*** AND ***VERIFY***  'S' RECORDS**        D4 = ERROR FLAG**        D5 = V000I0CC*             0.......  = LOAD*             8.......  = VERIFY*             ....0...  = CALCULATE CHECKSUM*             ....8...  = IGNORE CHECKSUM*             ......CC  = CHECKSUM*VECMD    MOVE.L    #1,D5               MARK THE MODE         ROR.L     #1,D5               D5 = $80000000         BRA.S CHKCHKS  GO CHECK CHECKSUM OPTION*LOCMD    CLR.L     D5        READ MODECHKCHKS  CLR.L     D4        RESET ERROR FLAG         BSR       SCANPORT  SET UP OUTPUT P1,P2,P3 ETC* SEE IF CHECKSUM -C OPTION AND =SEND THIS OPTIONREAD01   CMP.L A6,A5  SEE IF AT END OF BUFFER         BCC.S READ09         MOVE.B (A5)+,D0  GET A CHARACTERREAD03   CMP.B #'=',D0  SEE IF EQUAL SIGN         BEQ.S     READ08 SPC 1         CMP.B #'X',D0   SEE IF ECHO         BNE.S READ021         MOVE.B    #-1,D5              D5.B = ECHO TO PORT ONE         BRA READ01 SPC 1READ021  CMP.B #'-',D0   SEE IF MINUS SIGN         BNE.S READ01         CMP.L A6,A5  SEE IF AT END OF BUFFER         BEQ.S READ09         MOVE.B (A5)+,D0  GRAB SECOND CHARACTER         CMP.B #'C',D0   SEE IF LETTER C AS IN  -C         BNE       READ03         OR.W      #$8000,D5       MARK AS IGNORE CHECKSUM         BRA       READ01READS1   CLR.L     D6                  D6 = TYPE "S1"         SUB.L     #4,D3               BYTE COUNT         CLR.L     D0         BSR       READHEX4            FORM ADDRESS         BRA.S     READS202READ08   BSR OUTPUT2 SEND REST OF LINE(+CR) TO PORTREAD09   MOVE.B    D5,ECHOPT1          MOVE ECHO FLAG         MOVE.L    OUTPORT1,OUTTO      SEND OUTPUT TO CONSOLE PAGEREAD0    LEA       SYSTACK,A7          FORCE STACK (FOR ERROR RECOVERY)         LINK      A4,#-((BUFFSIZE/2)+4)  CREATE BUFFER ON STACK         CLR.B     D5                  ZERO CHECKSUM         BSR FIXBUF   START OF INPUT BUFFER         BSR PORTIN2   GET A RECORD FROM PORT SPC 1         MOVE.L A5,A3 SAVE START ADDRESS OF BUFFERREAD00   MOVE.B    (A3)+,D0  GET FIRST CHARACTER         CMP.L     A3,A6         BCS       READ0     END OF BUFFER WITHOUT "S"READ005  CMP.B #'S',D0    SEE IF IT IS AN S         BNE       READ00    GET ANOTHER CHARACTER         BSR       GETCHAR   GET RECORD TYPE         MOVE.L    D0,D6         BSR       READHEX   GET CHAR COUNT         CLR.L     D3         MOVE.B    D0,D3         CMP.B     #'0',D6   'S0'???         BEQ       READ0   JUST IGNORE         CMP.B     #'1',D6         BEQ.S     READS1     S1 RECORD TYPE (2 BYTE ADDRESS)         CMP.B     #'8',D6         BEQ       READS8    S8 RECORD TYPE         CMP.B     #'9',D6         BEQ       READS9    S9 RECORD TYPE         CMP.B     #'2',D6         BNE.S     READ005   KEEP LOOKING FOR "Sn" SPC 1READS2   MOVE.L    #2,D6               D6 = TYPE = S2 (3 BYTE ADDRESS)         BSR       READHEX6         SUB.L     #5,D3               BYTE COUNTREADS202 MOVE.L    D3,CC(A4)         MOVE.L    D0,ADDRESS(A4)      ADDRESS + OFFSET         LEA       DATA(A4),A2         A2 = STORE TO STACK POINTERREAD100  BSR.S     READHEX             GET DATA BYTE         MOVE.B    D0,(A2)+            MOVE DATA TO STACK         DBRA      D3,READ100         TST.W     D5         BMI.S     READ120             IGNORE CHECKSUM         MOVE.B    D5,D7         BSR.S     READHEX             GET CHECKSUM FROM DATA         NOT.B     D7                  CALCULATED CHECKSUM         CMP.B     D7,D0         BNE.S     READCKSM            ERRORREAD120 PAGE* STORE DATA (VERIFY) TO MEMORY         MOVE.L    CC(A4),D3           BYTE COUNT         MOVE.L    ADDRESS(A4),A3      MEMORY STORE ADDRESS         LEA       DATA(A4),A2         DATA ADDRESS ON STACK         TST.L     D5         BMI.S     READ400             VERIFYREAD130  MOVE.B    (A2),(A3)           STORE DATA         CMP.B     (A2)+,(A3)+         VERIFY DATA STORED         BNE       SETME               DATA DID NOT STORE         DBRA      D3,READ130READ135  BRA       READ0 SPC 3***     VERIFYREAD400  LEA       8(A5),A1            A1 = PTR TO INPUT STRING         ADD.L     D6,A1         CLR.L     D7                  D7 = MISS-MATCH FLAGREAD410  CMP.B     (A2)+,(A3)+         VERIFY DATA         BNE.S     READ440             MISS-MATCH         MOVE.B    #'.',(A1)+          OVERLAY INPUT STRING IF OK         MOVE.B    #'-',(A1)+READ420  DBRA      D3,READ410         TST.L     D7         BEQ       READ135             RECORD OK         MOVE.L    A1,A6               DONOT DISPLAY CHECKSUMREAD430  BSR       OUT1CR              DISPLAY IT         BRA       READ135             READ NEXT RECORDREAD440  MOVE.L    #-1,D7              D7 = Set miss-match flag         MOVE.L    #-1,D4              D4 = Set Summary error flag         ADD.L     #2,A1         BRA       READ420READCKSM MOVE.L    #-1,D4              D4 = Set summary error flag         LEA       MSGLOAD2(PC),A5         BSR       FIXDADD         MOVE.L    D7,D0         BSR       PNT2HX              CALCULATED CHECKSUM         BRA       READ430 PAGEREADHEX  BSR.S     GETHEXC             FORM BYTE         ASL.B     #4,D0         MOVE.B    D0,D1         BSR.S     GETHEXC         OR.B      D1,D0               D0 = BYTE FORMED         ADD.B     D0,D5               UPDATE CHECKSUM         RTSGETCHAR  MOVE.B    (A3)+,D0         CMP.L     A3,A6         BCS       READCKSM            OVERFLOW         RTSGETHEXC  BSR       GETCHAR         SUB.B     #$30,D0    SEE IF LESS THAN ZERO         BLT.S     RHEX3         CMP.B     #$09,D0    SEE IF GT 9         BLE.S     RHEX2         SUB.B     #7,D0  NORMALIZE $A TO 10         CMP.B     #$10,D0     SEE IF TOO LARGE         BCC.S     RHEX3RHEX2    RTSRHEX3    LEA       MSGLOAD1(PC),A5     'NOT HEX=X?'  MESSAGE         BSR       FIXDADD         MOVE.B -(A3),(A6)+            BAD CHARACTER         BRA       READ430             GO TRY NEXT RECORDMSGLOAD1 DC.B      'NOT HEX=',EOTMSGLOAD2 DC.B      ' CHKSUM=',EOTREADHEX6 CLR.L     D0                  FORM ADDRESS (3 BYTE)         BSR       READHEX         ASL.L     #8,D0READHEX4 BSR       READHEX             FORM ADDRESS (2 BYTE)         ASL.L     #8,D0         BSR       READHEX         ADD.L     OFFSET,D0         RTS SPC 1READS8   BSR       READHEX6READS800 MOVE.L    D0,REGPC  SAVE IT IN THE USER PREG         TST.L     D4         BNE       ERROR     DISPLAY "ERROR"         BRA       MACSBUG   END OF ROUTINEREADS9   CLR.L     D0         BSR       READHEX4  GET ADDRESS         BRA       READS800 SPC 1         END