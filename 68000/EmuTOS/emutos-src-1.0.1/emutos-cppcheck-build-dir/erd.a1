<?xml version="1.0"?>
<analyzerinfo checksum="2700070792">
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!generate_objects&apos; is always false" verbose="Condition &apos;!generate_objects&apos; is always false" cwe="570">
            <location file0="tools\erd.c" file="tools\erd.c" line="1977" info="Condition &apos;!generate_objects&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!generate_trees&apos; is always false" verbose="Condition &apos;!generate_trees&apos; is always false" cwe="570">
            <location file0="tools\erd.c" file="tools\erd.c" line="2049" info="Condition &apos;!generate_trees&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!generate_freestrings&apos; is always false" verbose="Condition &apos;!generate_freestrings&apos; is always false" cwe="570">
            <location file0="tools\erd.c" file="tools\erd.c" line="2103" info="Condition &apos;!generate_freestrings&apos; is always false"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%hX in format string (no. 1) requires &apos;unsigned short&apos; but the argument type is &apos;signed short&apos;." verbose="%hX in format string (no. 1) requires &apos;unsigned short&apos; but the argument type is &apos;signed short&apos;." cwe="686">
            <location file0="tools\erd.c" file="tools\erd.c" line="2356"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." verbose="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." cwe="686">
            <location file0="tools\erd.c" file="tools\erd.c" line="2526"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." verbose="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." cwe="686">
            <location file0="tools\erd.c" file="tools\erd.c" line="2561"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." verbose="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." cwe="686">
            <location file0="tools\erd.c" file="tools\erd.c" line="2569"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." verbose="%ld in format string (no. 1) requires &apos;long&apos; but the argument type is &apos;unsigned long&apos;." cwe="686">
            <location file0="tools\erd.c" file="tools\erd.c" line="2573"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="905"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1006"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1667"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iconchar&apos; can be reduced." verbose="The scope of the variable &apos;iconchar&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1716"/>
            <symbol>iconchar</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w&apos; can be reduced." verbose="The scope of the variable &apos;w&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1721"/>
            <symbol>w</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h&apos; can be reduced." verbose="The scope of the variable &apos;h&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1721"/>
            <symbol>h</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;type&apos; can be reduced." verbose="The scope of the variable &apos;type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1969"/>
            <symbol>type</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ext_type&apos; can be reduced." verbose="The scope of the variable &apos;ext_type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1969"/>
            <symbol>ext_type</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1974"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;xlate&apos; can be reduced." verbose="The scope of the variable &apos;xlate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2094"/>
            <symbol>xlate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;numstr&apos; can be reduced." verbose="The scope of the variable &apos;numstr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2094"/>
            <symbol>numstr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2097"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2210"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2211"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2282"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2373"/>
            <symbol>n</symbol>
        </error>
        <error id="shiftTooManyBits" severity="error" msg="Shifting 16-bit value by 24 bits is undefined behaviour" verbose="Shifting 16-bit value by 24 bits is undefined behaviour" cwe="758">
            <location file0="tools\erd.c" file="tools\erd.c" line="3034" info="Shift"/>
        </error>
        <error id="shiftTooManyBits" severity="error" msg="Shifting 16-bit value by 16 bits is undefined behaviour" verbose="Shifting 16-bit value by 16 bits is undefined behaviour" cwe="758">
            <location file0="tools\erd.c" file="tools\erd.c" line="3034" info="Shift"/>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;Anonymous0::dummy&apos; is never used." verbose="struct member &apos;Anonymous0::dummy&apos; is never used." cwe="563">
            <location file0="tools\erd.c" file="tools\erd.c" line="1010"/>
            <symbol>Anonymous0::dummy</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;Anonymous1::dummy&apos; is never used." verbose="struct member &apos;Anonymous1::dummy&apos; is never used." cwe="563">
            <location file0="tools\erd.c" file="tools\erd.c" line="1014"/>
            <symbol>Anonymous1::dummy</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;Anonymous2::dummy&apos; is never used." verbose="struct member &apos;Anonymous2::dummy&apos; is never used." cwe="563">
            <location file0="tools\erd.c" file="tools\erd.c" line="1102"/>
            <symbol>Anonymous2::dummy</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;Anonymous3::dummy&apos; is never used." verbose="struct member &apos;Anonymous3::dummy&apos; is never used." cwe="563">
            <location file0="tools\erd.c" file="tools\erd.c" line="1166"/>
            <symbol>Anonymous3::dummy</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
        <error id="asctimeCalled" severity="style" msg="Obsolete function &apos;asctime&apos; called. It is recommended to use &apos;strftime&apos; instead." verbose="Obsolete function &apos;asctime&apos; called. It is recommended to use &apos;strftime&apos; instead." cwe="477">
            <location file0="tools\erd.c" file="tools\erd.c" line="1416"/>
        </error>
        <error id="invalidFunctionArg" severity="warning" msg="Either the condition &apos;n&lt;0&apos; is redundant or calloc() argument nr 1 can have invalid value. The value is 0 but the valid values are &apos;1:&apos;." verbose="Either the condition &apos;n&lt;0&apos; is redundant or calloc() argument nr 1 can have invalid value. The value is 0 but the valid values are &apos;1:&apos;." cwe="628">
            <location file0="tools\erd.c" file="tools\erd.c" line="1115" info="Invalid argument"/>
            <location file0="tools\erd.c" file="tools\erd.c" line="1112" info="Assuming that condition &apos;n&lt;0&apos; is not redundant"/>
            <symbol>calloc</symbol>
        </error>
        <error id="invalidFunctionArg" severity="warning" msg="Either the condition &apos;n&lt;0&apos; is redundant or calloc() argument nr 1 can have invalid value. The value is 0 but the valid values are &apos;1:&apos;." verbose="Either the condition &apos;n&lt;0&apos; is redundant or calloc() argument nr 1 can have invalid value. The value is 0 but the valid values are &apos;1:&apos;." cwe="628">
            <location file0="tools\erd.c" file="tools\erd.c" line="1179" info="Invalid argument"/>
            <location file0="tools\erd.c" file="tools\erd.c" line="1176" info="Assuming that condition &apos;n&lt;0&apos; is not redundant"/>
            <symbol>calloc</symbol>
        </error>
        <error id="resourceLeak" severity="error" msg="Resource leak: rscfp" verbose="Resource leak: rscfp" cwe="775">
            <location file0="tools\erd.c" file="tools\erd.c" line="911"/>
            <symbol>rscfp</symbol>
        </error>
        <error id="resourceLeak" severity="error" msg="Resource leak: rscfp" verbose="Resource leak: rscfp" cwe="775">
            <location file0="tools\erd.c" file="tools\erd.c" line="913"/>
            <symbol>rscfp</symbol>
        </error>
        <error id="resourceLeak" severity="error" msg="Resource leak: rscfp" verbose="Resource leak: rscfp" cwe="775">
            <location file0="tools\erd.c" file="tools\erd.c" line="915"/>
            <symbol>rscfp</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;d&apos; can be reduced." verbose="The scope of the variable &apos;d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="2045"/>
            <symbol>d</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1561"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2165"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1561"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2165"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!first_time&apos; is always false" verbose="Condition &apos;!first_time&apos; is always false" cwe="570">
            <location file0="tools\erd.c" file="tools\erd.c" line="1461" info="Condition &apos;!first_time&apos; is always false"/>
            <location file0="tools\erd.c" file="tools\erd.c" line="1431" info="Assignment &apos;first_time=1&apos;, assigned value is 1"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="1777" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1576"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2202"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1576"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2202"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1845"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;w&apos; can be reduced." verbose="The scope of the variable &apos;w&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\erd.c" file="tools\erd.c" line="1846"/>
            <symbol>w</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="1862" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1579"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2202"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1579"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2202"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="tools/erd.c:748:14" call-funcname="error" call-argnr="2" filename="tools/erd.c" linenr="861" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="982" my-id="tools/erd.c:758:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1084:15" call-funcname="fget_big_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1111" my-id="tools/erd.c:759:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:1148:15" call-funcname="fget_little_endian_short" call-argnr="1" filename="tools/erd.c" linenr="1175" my-id="tools/erd.c:760:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1336" my-id="tools/erd.c:777:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="1" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:767:15" call-funcname="openfile" call-argnr="2" filename="tools/erd.c" linenr="1375" my-id="tools/erd.c:781:13" my-argnr="2"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="1" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="1"/>
<function-call call-id="tools/erd.c:737:14" call-funcname="copyfix" call-argnr="2" filename="tools/erd.c" linenr="2213" my-id="tools/erd.c:736:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2287" my-id="tools/erd.c:766:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/erd.c" linenr="2305" my-id="tools/erd.c:757:23" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="4" filename="tools/erd.c" linenr="3044" my-id="tools/erd.c:767:15" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/erd.c" linenr="3056" my-id="tools/erd.c:773:15" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="3" my-argname="ext" filename="tools/erd.c" linenr="1412"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="2" my-argname="name" filename="tools/erd.c" linenr="1604"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:754:13" my-argnr="1" my-argname="hdr" filename="tools/erd.c" linenr="2991"/>
    <unsafe-usage my-id="tools/erd.c:756:13" my-argnr="1" my-argname="array" filename="tools/erd.c" linenr="3006"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="1" my-argname="name" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="2" my-argname="ext" filename="tools/erd.c" linenr="3044"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:773:15" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="3056"/>
    <unsafe-usage my-id="tools/erd.c:748:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3065"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
    <unsafe-usage my-id="tools/erd.c:762:16" my-argnr="1" my-argname="path" filename="tools/erd.c" linenr="907"/>
    <unsafe-usage my-id="tools/erd.c:761:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1020"/>
    <unsafe-usage my-id="tools/erd.c:1084:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1088"/>
    <unsafe-usage my-id="tools/erd.c:1148:15" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1152"/>
    <unsafe-usage my-id="tools/erd.c:780:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1411"/>
    <unsafe-usage my-id="tools/erd.c:782:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1463"/>
    <unsafe-usage my-id="tools/erd.c:783:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1551"/>
    <unsafe-usage my-id="tools/erd.c:786:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="1590"/>
    <unsafe-usage my-id="tools/erd.c:776:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2148"/>
    <unsafe-usage my-id="tools/erd.c:750:13" my-argnr="2" my-argname="s" filename="tools/erd.c" linenr="2328"/>
    <unsafe-usage my-id="tools/erd.c:778:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2507"/>
    <unsafe-usage my-id="tools/erd.c:788:13" my-argnr="1" my-argname="fp" filename="tools/erd.c" linenr="2520"/>
    <unsafe-usage my-id="tools/erd.c:725:13" my-argnr="1" my-argname="string" filename="tools/erd.c" linenr="2607"/>
    <unsafe-usage my-id="tools/erd.c:751:15" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3018"/>
    <unsafe-usage my-id="tools/erd.c:752:24" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3026"/>
    <unsafe-usage my-id="tools/erd.c:753:23" my-argnr="1" my-argname="p" filename="tools/erd.c" linenr="3034"/>
    <unsafe-usage my-id="tools/erd.c:767:15" my-argnr="3" my-argname="mode" filename="tools/erd.c" linenr="3045"/>
    <unsafe-usage my-id="tools/erd.c:775:14" my-argnr="1" my-argname="s" filename="tools/erd.c" linenr="3074"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1891"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_images" lineNumber="2634"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1891"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_images" lineNumber="2634"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1891"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_images" lineNumber="2634"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1891"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_images" lineNumber="2634"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1843"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functiondecl functionName="main" lineNumber="795"/>
    <functiondecl functionName="load_rsc" lineNumber="898"/>
    <functiondecl functionName="convert_header" lineNumber="951"/>
    <functiondecl functionName="load_definition" lineNumber="977"/>
    <functiondecl functionName="load_hrd" lineNumber="1004"/>
    <functiondecl functionName="fget_big_endian_short" lineNumber="1084"/>
    <functiondecl functionName="load_def" lineNumber="1097"/>
    <functiondecl functionName="fget_little_endian_short" lineNumber="1148"/>
    <functiondecl functionName="load_dfn" lineNumber="1161"/>
    <functiondecl functionName="convert_def_type" lineNumber="1212"/>
    <functiondecl functionName="convert_dfn_type" lineNumber="1249"/>
    <functiondecl functionName="lookup_object" lineNumber="1283"/>
    <functiondecl functionName="lookup_tree" lineNumber="1311"/>
    <functiondecl functionName="write_c_file" lineNumber="1331"/>
    <functiondecl functionName="write_h_file" lineNumber="1370"/>
    <functiondecl functionName="write_general_prologue" lineNumber="1398"/>
    <functiondecl functionName="write_h_define" lineNumber="1428"/>
    <functiondecl functionName="write_h_extern" lineNumber="1548"/>
    <functiondecl functionName="write_include" lineNumber="1588"/>
    <functiondecl functionName="write_shared" lineNumber="1613"/>
    <functiondecl functionName="sort_shared" lineNumber="1646"/>
    <functiondecl functionName="cmp_shared" lineNumber="1651"/>
    <functiondecl functionName="write_tedinfo" lineNumber="1662"/>
    <functiondecl functionName="write_iconblk" lineNumber="1713"/>
    <functiondecl functionName="write_bitblk" lineNumber="1891"/>
    <functiondecl functionName="write_object" lineNumber="1965"/>
    <functiondecl functionName="write_tree" lineNumber="2040"/>
    <functiondecl functionName="write_freestr" lineNumber="2091"/>
    <functiondecl functionName="write_c_epilogue" lineNumber="2145"/>
    <functiondecl functionName="copycheck" lineNumber="2208"/>
    <functiondecl functionName="copyfix" lineNumber="2232"/>
    <functiondecl functionName="shrink_valid" lineNumber="2250"/>
    <functiondecl functionName="init_notrans" lineNumber="2267"/>
    <functiondecl functionName="notranslate" lineNumber="2280"/>
    <functiondecl functionName="isshared" lineNumber="2299"/>
    <functiondecl functionName="getlen" lineNumber="2322"/>
    <functiondecl functionName="decode_ib_char" lineNumber="2350"/>
    <functiondecl functionName="decode_flags" lineNumber="2369"/>
    <functiondecl functionName="decode_font" lineNumber="2404"/>
    <functiondecl functionName="decode_just" lineNumber="2427"/>
    <functiondecl functionName="decode_state" lineNumber="2453"/>
    <functiondecl functionName="decode_type" lineNumber="2477"/>
    <functiondecl functionName="write_data" lineNumber="2493"/>
    <functiondecl functionName="write_obspec" lineNumber="2513"/>
    <functiondecl functionName="fixshared" lineNumber="2584"/>
    <functiondecl functionName="all_dashes" lineNumber="2603"/>
    <functiondecl functionName="trim_spaces" lineNumber="2620"/>
    <functiondecl functionName="compare_images" lineNumber="2634"/>
    <functiondecl functionName="compare_mask" lineNumber="2661"/>
    <functiondecl functionName="compare_data" lineNumber="2685"/>
    <functiondecl functionName="display_header" lineNumber="2712"/>
    <functiondecl functionName="sort_def_table" lineNumber="2737"/>
    <functiondecl functionName="cmp_def" lineNumber="2766"/>
    <functiondecl functionName="display_defs" lineNumber="2780"/>
    <functiondecl functionName="display_notrans" lineNumber="2793"/>
    <functiondecl functionName="display_shared" lineNumber="2810"/>
    <functiondecl functionName="mark_conditional" lineNumber="2835"/>
    <functiondecl functionName="scan_conditional" lineNumber="2925"/>
    <functiondecl functionName="process_start_names" lineNumber="2939"/>
    <functiondecl functionName="init_all_status" lineNumber="2989"/>
    <functiondecl functionName="init_status" lineNumber="3004"/>
    <functiondecl functionName="get_short" lineNumber="3016"/>
    <functiondecl functionName="get_ushort" lineNumber="3024"/>
    <functiondecl functionName="get_offset" lineNumber="3032"/>
    <functiondecl functionName="openfile" lineNumber="3040"/>
    <functiondecl functionName="string_dup" lineNumber="3052"/>
    <functiondecl functionName="error" lineNumber="3063"/>
    <functiondecl functionName="usage" lineNumber="3072"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="SEEK_END"/>
    <functioncall functionName="SEEK_SET"/>
    <functioncall functionName="SHRT_MAX"/>
    <functioncall functionName="a"/>
    <functioncall functionName="all_dashes"/>
    <functioncall functionName="argc"/>
    <functioncall functionName="argv"/>
    <functioncall functionName="asctime"/>
    <functioncall functionName="b"/>
    <functioncall functionName="b4"/>
    <functioncall functionName="base"/>
    <functioncall functionName="basename"/>
    <functioncall functionName="basersc"/>
    <functioncall functionName="bi_color"/>
    <functioncall functionName="bi_hl"/>
    <functioncall functionName="bi_pdata"/>
    <functioncall functionName="bi_wb"/>
    <functioncall functionName="bi_x"/>
    <functioncall functionName="bi_y"/>
    <functioncall functionName="bitblk"/>
    <functioncall functionName="bitblk_status"/>
    <functioncall functionName="break"/>
    <functioncall functionName="c"/>
    <functioncall functionName="calloc"/>
    <functioncall functionName="cfile"/>
    <functioncall functionName="char"/>
    <functioncall functionName="cmp_def"/>
    <functioncall functionName="cmp_shared"/>
    <functioncall functionName="compare_data"/>
    <functioncall functionName="compare_images"/>
    <functioncall functionName="compare_mask"/>
    <functioncall functionName="conditional"/>
    <functioncall functionName="conditional_bitblk_start"/>
    <functioncall functionName="conditional_iconblk_start"/>
    <functioncall functionName="conditional_object_start"/>
    <functioncall functionName="conditional_tedinfo_start"/>
    <functioncall functionName="conditional_tree_start"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="convert_def_type"/>
    <functioncall functionName="convert_dfn_type"/>
    <functioncall functionName="convert_header"/>
    <functioncall functionName="copycheck"/>
    <functioncall functionName="copyfix"/>
    <functioncall functionName="copyright"/>
    <functioncall functionName="d"/>
    <functioncall functionName="debug"/>
    <functioncall functionName="decode_flags"/>
    <functioncall functionName="decode_font"/>
    <functioncall functionName="decode_ib_char"/>
    <functioncall functionName="decode_just"/>
    <functioncall functionName="decode_state"/>
    <functioncall functionName="decode_type"/>
    <functioncall functionName="def"/>
    <functioncall functionName="default"/>
    <functioncall functionName="defext"/>
    <functioncall functionName="deftype"/>
    <functioncall functionName="desc"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="dfntype"/>
    <functioncall functionName="display_defs"/>
    <functioncall functionName="display_header"/>
    <functioncall functionName="display_notrans"/>
    <functioncall functionName="display_shared"/>
    <functioncall functionName="dmap"/>
    <functioncall functionName="entries"/>
    <functioncall functionName="entry"/>
    <functioncall functionName="error"/>
    <functioncall functionName="exit"/>
    <functioncall functionName="ext"/>
    <functioncall functionName="ext_type"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="ferror"/>
    <functioncall functionName="fget_big_endian_short"/>
    <functioncall functionName="fget_little_endian_short"/>
    <functioncall functionName="fgetc"/>
    <functioncall functionName="file"/>
    <functioncall functionName="first_freestr"/>
    <functioncall functionName="first_time"/>
    <functioncall functionName="fixshared"/>
    <functioncall functionName="flaglist"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="font"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fp"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="fputc"/>
    <functioncall functionName="fputs"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="free"/>
    <functioncall functionName="frimg"/>
    <functioncall functionName="frstr"/>
    <functioncall functionName="fseek"/>
    <functioncall functionName="fsize"/>
    <functioncall functionName="ftell"/>
    <functioncall functionName="generate_freestrings"/>
    <functioncall functionName="generate_objects"/>
    <functioncall functionName="generate_trees"/>
    <functioncall functionName="get_offset"/>
    <functioncall functionName="get_short"/>
    <functioncall functionName="get_ushort"/>
    <functioncall functionName="getlen"/>
    <functioncall functionName="getopt"/>
    <functioncall functionName="gmtime"/>
    <functioncall functionName="h"/>
    <functioncall functionName="hdr"/>
    <functioncall functionName="hfile"/>
    <functioncall functionName="hicon"/>
    <functioncall functionName="i"/>
    <functioncall functionName="ib_char"/>
    <functioncall functionName="ib_hicon"/>
    <functioncall functionName="ib_htext"/>
    <functioncall functionName="ib_pdata"/>
    <functioncall functionName="ib_pmask"/>
    <functioncall functionName="ib_ptext"/>
    <functioncall functionName="ib_wicon"/>
    <functioncall functionName="ib_wtext"/>
    <functioncall functionName="ib_xchar"/>
    <functioncall functionName="ib_xicon"/>
    <functioncall functionName="ib_xtext"/>
    <functioncall functionName="ib_ychar"/>
    <functioncall functionName="ib_yicon"/>
    <functioncall functionName="ib_ytext"/>
    <functioncall functionName="iconblk"/>
    <functioncall functionName="iconblk_status"/>
    <functioncall functionName="iconchar"/>
    <functioncall functionName="if"/>
    <functioncall functionName="imdata"/>
    <functioncall functionName="indef"/>
    <functioncall functionName="indicator"/>
    <functioncall functionName="init_all_status"/>
    <functioncall functionName="init_notrans"/>
    <functioncall functionName="init_status"/>
    <functioncall functionName="inrsc"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isalnum"/>
    <functioncall functionName="iscntrl"/>
    <functioncall functionName="isdigit"/>
    <functioncall functionName="isprint"/>
    <functioncall functionName="ispunct"/>
    <functioncall functionName="isshared"/>
    <functioncall functionName="isspace"/>
    <functioncall functionName="j"/>
    <functioncall functionName="just"/>
    <functioncall functionName="len"/>
    <functioncall functionName="length"/>
    <functioncall functionName="lo"/>
    <functioncall functionName="load_def"/>
    <functioncall functionName="load_definition"/>
    <functioncall functionName="load_dfn"/>
    <functioncall functionName="load_hrd"/>
    <functioncall functionName="load_rsc"/>
    <functioncall functionName="long"/>
    <functioncall functionName="lookup_object"/>
    <functioncall functionName="lookup_tree"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="map"/>
    <functioncall functionName="mark_conditional"/>
    <functioncall functionName="mask"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="mmap"/>
    <functioncall functionName="mode"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="nbb"/>
    <functioncall functionName="nib"/>
    <functioncall functionName="nimages"/>
    <functioncall functionName="nobs"/>
    <functioncall functionName="notrans"/>
    <functioncall functionName="notranslate"/>
    <functioncall functionName="now"/>
    <functioncall functionName="nstring"/>
    <functioncall functionName="nted"/>
    <functioncall functionName="ntree"/>
    <functioncall functionName="num_defs"/>
    <functioncall functionName="num_notrans"/>
    <functioncall functionName="num_shared"/>
    <functioncall functionName="ob_flags"/>
    <functioncall functionName="ob_head"/>
    <functioncall functionName="ob_height"/>
    <functioncall functionName="ob_next"/>
    <functioncall functionName="ob_spec"/>
    <functioncall functionName="ob_state"/>
    <functioncall functionName="ob_tail"/>
    <functioncall functionName="ob_type"/>
    <functioncall functionName="ob_width"/>
    <functioncall functionName="ob_x"/>
    <functioncall functionName="ob_y"/>
    <functioncall functionName="obj"/>
    <functioncall functionName="obj_base"/>
    <functioncall functionName="object"/>
    <functioncall functionName="objnum"/>
    <functioncall functionName="openfile"/>
    <functioncall functionName="optarg"/>
    <functioncall functionName="optind"/>
    <functioncall functionName="out_path"/>
    <functioncall functionName="p"/>
    <functioncall functionName="path"/>
    <functioncall functionName="prefix"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="process_start_names"/>
    <functioncall functionName="qsort"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rsc_root"/>
    <functioncall functionName="rscfp"/>
    <functioncall functionName="rschdr"/>
    <functioncall functionName="rsh"/>
    <functioncall functionName="rsh_bitblk"/>
    <functioncall functionName="rsh_frimg"/>
    <functioncall functionName="rsh_frstr"/>
    <functioncall functionName="rsh_iconblk"/>
    <functioncall functionName="rsh_imdata"/>
    <functioncall functionName="rsh_nbb"/>
    <functioncall functionName="rsh_nib"/>
    <functioncall functionName="rsh_nimages"/>
    <functioncall functionName="rsh_nobs"/>
    <functioncall functionName="rsh_nstring"/>
    <functioncall functionName="rsh_nted"/>
    <functioncall functionName="rsh_ntree"/>
    <functioncall functionName="rsh_object"/>
    <functioncall functionName="rsh_rssize"/>
    <functioncall functionName="rsh_string"/>
    <functioncall functionName="rsh_tedinfo"/>
    <functioncall functionName="rsh_trindex"/>
    <functioncall functionName="rsh_vrsn"/>
    <functioncall functionName="rssize"/>
    <functioncall functionName="s"/>
    <functioncall functionName="scan_conditional"/>
    <functioncall functionName="seq"/>
    <functioncall functionName="shared"/>
    <functioncall functionName="short"/>
    <functioncall functionName="shrink_valid"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sort_def_table"/>
    <functioncall functionName="sort_shared"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="src"/>
    <functioncall functionName="start"/>
    <functioncall functionName="statelist"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="strcat"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="string"/>
    <functioncall functionName="string_dup"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strncmp"/>
    <functioncall functionName="strptr"/>
    <functioncall functionName="strrchr"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="te_color"/>
    <functioncall functionName="te_font"/>
    <functioncall functionName="te_fontid"/>
    <functioncall functionName="te_fontsize"/>
    <functioncall functionName="te_just"/>
    <functioncall functionName="te_ptmplt"/>
    <functioncall functionName="te_pvalid"/>
    <functioncall functionName="te_thickness"/>
    <functioncall functionName="te_tmplen"/>
    <functioncall functionName="te_txtlen"/>
    <functioncall functionName="tedinfo"/>
    <functioncall functionName="tedinfo_status"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="temp2"/>
    <functioncall functionName="text"/>
    <functioncall functionName="time"/>
    <functioncall functionName="tree"/>
    <functioncall functionName="trim_spaces"/>
    <functioncall functionName="trindex"/>
    <functioncall functionName="type"/>
    <functioncall functionName="typelist"/>
    <functioncall functionName="usage"/>
    <functioncall functionName="verbose"/>
    <functioncall functionName="version"/>
    <functioncall functionName="vrsn"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="wicon"/>
    <functioncall functionName="write_bitblk"/>
    <functioncall functionName="write_c_epilogue"/>
    <functioncall functionName="write_c_file"/>
    <functioncall functionName="write_data"/>
    <functioncall functionName="write_freestr"/>
    <functioncall functionName="write_general_prologue"/>
    <functioncall functionName="write_h_define"/>
    <functioncall functionName="write_h_extern"/>
    <functioncall functionName="write_h_file"/>
    <functioncall functionName="write_iconblk"/>
    <functioncall functionName="write_include"/>
    <functioncall functionName="write_object"/>
    <functioncall functionName="write_obspec"/>
    <functioncall functionName="write_shared"/>
    <functioncall functionName="write_tedinfo"/>
    <functioncall functionName="write_tree"/>
    <functioncall functionName="xlate"/>
  </FileInfo>
</analyzerinfo>
