<?xml version="1.0"?>
<analyzerinfo checksum="3110854814">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="84"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;chr&apos; can be reduced." verbose="The scope of the variable &apos;chr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="84"/>
            <symbol>chr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="125"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tx1&apos; can be reduced." verbose="The scope of the variable &apos;tx1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="128"/>
            <symbol>tx1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tx2&apos; can be reduced." verbose="The scope of the variable &apos;tx2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="128"/>
            <symbol>tx2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ty1&apos; can be reduced." verbose="The scope of the variable &apos;ty1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="128"/>
            <symbol>ty1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ty2&apos; can be reduced." verbose="The scope of the variable &apos;ty2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="128"/>
            <symbol>ty2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="132"/>
            <symbol>temp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;expand&apos; can be reduced." verbose="The scope of the variable &apos;expand&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="962"/>
            <symbol>expand</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="965"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;delword&apos; can be reduced." verbose="The scope of the variable &apos;delword&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="965"/>
            <symbol>delword</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;delchar&apos; can be reduced." verbose="The scope of the variable &apos;delchar&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="vdi\vdi_text.c" file="vdi\vdi_text.c" line="965"/>
            <symbol>delchar</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="vdi/vdi_text.c:123:13" call-funcname="output_text" call-argnr="5" filename="vdi/vdi_text.c" linenr="350" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:65:8" call-funcname="memset" call-argnr="2" filename="vdi/vdi_text.c" linenr="808" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="vdi/vdi_text.c:80:13" call-funcname="calc_width" call-argnr="3" filename="vdi/vdi_text.c" linenr="186" my-id="vdi/vdi_text.c:123:13" my-argnr="3"/>
<function-call call-id="vdi/vdi_text.c:123:13" call-funcname="output_text" call-argnr="1" filename="vdi/vdi_text.c" linenr="350" my-id="vdi/vdi_defs.h:313:6" my-argnr="1"/>
<function-call call-id="vdi/vdi_text.c:64:13" call-funcname="calc_height" call-argnr="1" filename="vdi/vdi_text.c" linenr="803" my-id="vdi/vdi_defs.h:373:6" my-argnr="1"/>
<function-call call-id="vdi/vdi_text.c:80:13" call-funcname="calc_width" call-argnr="1" filename="vdi/vdi_text.c" linenr="985" my-id="vdi/vdi_defs.h:272:6" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArrayUsage array="CONTRL" index="4" fileName="vdi/vdi_text.c" linenr="643"/>
    <ArrayUsage array="DEV_TAB" index="10" fileName="vdi/vdi_text.c" linenr="369"/>
    <ArrayUsage array="INQ_TAB" index="2" fileName="vdi/vdi_text.c" linenr="650"/>
    <ArrayUsage array="PTSIN" index="2" fileName="vdi/vdi_text.c" linenr="987"/>
    <ArrayUsage array="PTSOUT" index="7" fileName="vdi/vdi_text.c" linenr="814"/>
    <ArrayUsage array="SIZ_TAB" index="3" fileName="vdi/vdi_text.c" linenr="381"/>
    <ArrayUsage array="font_ring" index="3" fileName="vdi/vdi_text.c" linenr="387"/>
    <ArraySize array="shift_offset" size="9"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="vdi/vdi_text.c:64:13" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="66"/>
    <unsafe-usage my-id="vdi/vdi_text.c:80:13" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="82"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:293:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="355"/>
    <unsafe-usage my-id="vdi/vdi_text.c:435:13" my-argnr="1" my-argname="font" filename="vdi/vdi_text.c" linenr="443"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:318:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="458"/>
    <unsafe-usage my-id="vdi/vdi_text.c:59:14" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="517"/>
    <unsafe-usage my-id="vdi/vdi_text.c:57:13" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="543"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:362:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="596"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:361:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="650"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:350:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="664"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:319:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="705"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:329:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="717"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:330:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="768"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:349:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="778"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:374:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="845"/>
    <unsafe-usage my-id="vdi/vdi_defs.h:391:6" my-argnr="1" my-argname="vwk" filename="vdi/vdi_text.c" linenr="922"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="calc_height" lineNumber="64"/>
    <functiondecl functionName="calc_width" lineNumber="80"/>
    <functiondecl functionName="output_text" lineNumber="123"/>
    <functiondecl functionName="vdi_v_gtext" lineNumber="348"/>
    <functiondecl functionName="text_init2" lineNumber="353"/>
    <functiondecl functionName="text_init" lineNumber="372"/>
    <functiondecl functionName="setup_width_height" lineNumber="435"/>
    <functiondecl functionName="vdi_vst_height" lineNumber="450"/>
    <functiondecl functionName="act_siz" lineNumber="511"/>
    <functiondecl functionName="make_header" lineNumber="538"/>
    <functiondecl functionName="vdi_vst_point" lineNumber="588"/>
    <functiondecl functionName="vdi_vst_effects" lineNumber="648"/>
    <functiondecl functionName="vdi_vst_alignment" lineNumber="655"/>
    <functiondecl functionName="vdi_vst_rotation" lineNumber="694"/>
    <functiondecl functionName="vdi_vst_font" lineNumber="710"/>
    <functiondecl functionName="vdi_vst_color" lineNumber="760"/>
    <functiondecl functionName="vdi_vqt_attributes" lineNumber="772"/>
    <functiondecl functionName="vdi_vqt_extent" lineNumber="799"/>
    <functiondecl functionName="vdi_vqt_width" lineNumber="839"/>
    <functiondecl functionName="vdi_vqt_name" lineNumber="879"/>
    <functiondecl functionName="vdi_vqt_fontinfo" lineNumber="917"/>
    <functiondecl functionName="gdp_justified" lineNumber="959"/>
    <functiondecl functionName="vdi_vst_load_fonts" lineNumber="1090"/>
    <functiondecl functionName="vdi_vst_unload_fonts" lineNumber="1097"/>
    <functiondecl functionName="clc_dda" lineNumber="1111"/>
    <functioncall functionName="DESTX"/>
    <functioncall functionName="DESTY"/>
    <functioncall functionName="INTIN"/>
    <functioncall functionName="INTOUT"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="PTSIN"/>
    <functioncall functionName="PTSOUT"/>
    <functioncall functionName="SOURCEX"/>
    <functioncall functionName="a"/>
    <functioncall functionName="abline"/>
    <functioncall functionName="act"/>
    <functioncall functionName="act_siz"/>
    <functioncall functionName="ascent"/>
    <functioncall functionName="asm"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bottom"/>
    <functioncall functionName="break"/>
    <functioncall functionName="calc_height"/>
    <functioncall functionName="calc_width"/>
    <functioncall functionName="charx"/>
    <functioncall functionName="chary"/>
    <functioncall functionName="chr"/>
    <functioncall functionName="chup"/>
    <functioncall functionName="clc_dda"/>
    <functioncall functionName="clip"/>
    <functioncall functionName="clip_line"/>
    <functioncall functionName="cnt"/>
    <functioncall functionName="count"/>
    <functioncall functionName="cur_font"/>
    <functioncall functionName="d1"/>
    <functioncall functionName="d2"/>
    <functioncall functionName="dat_table"/>
    <functioncall functionName="dda_inc"/>
    <functioncall functionName="def_font"/>
    <functioncall functionName="default"/>
    <functioncall functionName="deftxbuf"/>
    <functioncall functionName="delchar"/>
    <functioncall functionName="delh"/>
    <functioncall functionName="delv"/>
    <functioncall functionName="delword"/>
    <functioncall functionName="descent"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="dest_font"/>
    <functioncall functionName="direction"/>
    <functioncall functionName="divu"/>
    <functioncall functionName="double_font"/>
    <functioncall functionName="dummy"/>
    <functioncall functionName="expand"/>
    <functioncall functionName="first_ade"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="fnt_ptr"/>
    <functioncall functionName="fon6x6"/>
    <functioncall functionName="fon8x8"/>
    <functioncall functionName="font_count"/>
    <functioncall functionName="font_id"/>
    <functioncall functionName="font_ring"/>
    <functioncall functionName="for"/>
    <functioncall functionName="form_height"/>
    <functioncall functionName="form_width"/>
    <functioncall functionName="found"/>
    <functioncall functionName="h"/>
    <functioncall functionName="h_align"/>
    <functioncall functionName="half"/>
    <functioncall functionName="height"/>
    <functioncall functionName="hor_table"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="interchar"/>
    <functioncall functionName="interword"/>
    <functioncall functionName="j"/>
    <functioncall functionName="just"/>
    <functioncall functionName="justified"/>
    <functioncall functionName="k"/>
    <functioncall functionName="last_ade"/>
    <functioncall functionName="left_offset"/>
    <functioncall functionName="lighten"/>
    <functioncall functionName="line"/>
    <functioncall functionName="loaded_fonts"/>
    <functioncall functionName="long"/>
    <functioncall functionName="make_header"/>
    <functioncall functionName="max_cell_width"/>
    <functioncall functionName="max_char_width"/>
    <functioncall functionName="max_x"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="name"/>
    <functioncall functionName="next_font"/>
    <functioncall functionName="num_fonts"/>
    <functioncall functionName="off_table"/>
    <functioncall functionName="old_intin"/>
    <functioncall functionName="old_ptsin"/>
    <functioncall functionName="old_ptsout"/>
    <functioncall functionName="output_text"/>
    <functioncall functionName="point"/>
    <functioncall functionName="pointer"/>
    <functioncall functionName="pts_mode"/>
    <functioncall functionName="r"/>
    <functioncall functionName="req"/>
    <functioncall functionName="return"/>
    <functioncall functionName="retval"/>
    <functioncall functionName="right_offset"/>
    <functioncall functionName="rmchar"/>
    <functioncall functionName="rmcharx"/>
    <functioncall functionName="rmchary"/>
    <functioncall functionName="rmword"/>
    <functioncall functionName="rmwordx"/>
    <functioncall functionName="rmwordy"/>
    <functioncall functionName="scaled"/>
    <functioncall functionName="scratch_head"/>
    <functioncall functionName="scrpt2"/>
    <functioncall functionName="scrtchp"/>
    <functioncall functionName="scrtsiz"/>
    <functioncall functionName="setup_width_height"/>
    <functioncall functionName="short"/>
    <functioncall functionName="single_font"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="skew"/>
    <functioncall functionName="spaces"/>
    <functioncall functionName="src"/>
    <functioncall functionName="startx"/>
    <functioncall functionName="starty"/>
    <functioncall functionName="str"/>
    <functioncall functionName="style"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t_sclsts"/>
    <functioncall functionName="table_start"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="test_font"/>
    <functioncall functionName="test_height"/>
    <functioncall functionName="text_blt"/>
    <functioncall functionName="text_color"/>
    <functioncall functionName="thicken"/>
    <functioncall functionName="top"/>
    <functioncall functionName="tx1"/>
    <functioncall functionName="tx2"/>
    <functioncall functionName="ty1"/>
    <functioncall functionName="ty2"/>
    <functioncall functionName="ul_size"/>
    <functioncall functionName="v_align"/>
    <functioncall functionName="validate_color_index"/>
    <functioncall functionName="vdi_vst_height"/>
    <functioncall functionName="vdi_vst_point"/>
    <functioncall functionName="vwk"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
    <functioncall functionName="wordx"/>
    <functioncall functionName="wordy"/>
    <functioncall functionName="wrt_mode"/>
    <functioncall functionName="x1"/>
    <functioncall functionName="x2"/>
    <functioncall functionName="xmn_clip"/>
    <functioncall functionName="xmx_clip"/>
    <functioncall functionName="y1"/>
    <functioncall functionName="y2"/>
    <functioncall functionName="ymn_clip"/>
    <functioncall functionName="ymx_clip"/>
  </FileInfo>
</analyzerinfo>
