<?xml version="1.0"?>
<analyzerinfo checksum="1907151495">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;snddat&apos; can be reduced." verbose="The scope of the variable &apos;snddat&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="util\optimize.c" file="util\optimize.c" line="49"/>
            <symbol>snddat</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="util\optimize.c" file="util\optimize.c" line="127"/>
            <symbol>temp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;objptr&apos; can be reduced." verbose="The scope of the variable &apos;objptr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="util\optimize.c" file="util\optimize.c" line="203"/>
            <symbol>objptr</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:24:8" call-funcname="strlcpy" call-argnr="2" filename="util/optimize.c" linenr="158" my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:16:6" my-argnr="3"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" call-funcname="strcpy" call-argnr="1" filename="util/optimize.c" linenr="172" my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:17:6" my-argnr="3"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:18:6" call-funcname="inf_gindex" call-argnr="1" filename="util/optimize.c" linenr="205" my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:19:6" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="util/optimize.c" linenr="317" my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:22:6" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:231:24" my-argnr="1" my-argname="pxywh" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="233"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:231:24" my-argnr="2" my-argname="px" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="233"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:231:24" my-argnr="3" my-argname="py" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="234"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:231:24" my-argnr="4" my-argname="pw" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="235"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:231:24" my-argnr="5" my-argname="ph" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="236"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/obdefs.h:240:24" my-argnr="1" my-argname="pxywh" filename="C:/cygwin/home/czietz/emutos-code/include/obdefs.h" linenr="242"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:17:6" my-argnr="3" my-argname="pstr" filename="util/optimize.c" linenr="172"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:20:7" my-argnr="1" my-argname="pcurr" filename="util/optimize.c" linenr="247"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:20:7" my-argnr="2" my-argname="pwd" filename="util/optimize.c" linenr="258"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:22:6" my-argnr="1" my-argname="str" filename="util/optimize.c" linenr="317"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/optimize.h:20:7" my-argnr="1" my-argname="pcurr" filename="util/optimize.c" linenr="247"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="sound" lineNumber="47"/>
    <functiondecl functionName="fmt_str" lineNumber="92"/>
    <functiondecl functionName="unfmt_str" lineNumber="125"/>
    <functiondecl functionName="inf_sset" lineNumber="150"/>
    <functiondecl functionName="inf_sget" lineNumber="166"/>
    <functiondecl functionName="inf_gindex" lineNumber="181"/>
    <functiondecl functionName="inf_what" lineNumber="200"/>
    <functiondecl functionName="hex_dig" lineNumber="224"/>
    <functiondecl functionName="scan_2" lineNumber="243"/>
    <functiondecl functionName="wildcmp" lineNumber="269"/>
    <functiondecl functionName="ins_char" lineNumber="313"/>
    <functioncall functionName="a"/>
    <functioncall functionName="asm"/>
    <functioncall functionName="b"/>
    <functioncall functionName="baseobj"/>
    <functioncall functionName="break"/>
    <functioncall functionName="chr"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="d1"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="disabled"/>
    <functioncall functionName="divu"/>
    <functioncall functionName="field"/>
    <functioncall functionName="for"/>
    <functioncall functionName="freq"/>
    <functioncall functionName="g_h"/>
    <functioncall functionName="g_w"/>
    <functioncall functionName="g_x"/>
    <functioncall functionName="g_y"/>
    <functioncall functionName="h"/>
    <functioncall functionName="hex_dig"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ii"/>
    <functioncall functionName="inf_gindex"/>
    <functioncall functionName="instr"/>
    <functioncall functionName="isfreq"/>
    <functioncall functionName="len"/>
    <functioncall functionName="long"/>
    <functioncall functionName="ob_spec"/>
    <functioncall functionName="obj"/>
    <functioncall functionName="ok"/>
    <functioncall functionName="outstr"/>
    <functioncall functionName="pstr"/>
    <functioncall functionName="return"/>
    <functioncall functionName="short"/>
    <functioncall functionName="snddat"/>
    <functioncall functionName="str"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strlcpy"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="te_ptext"/>
    <functioncall functionName="te_txtlen"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="text"/>
    <functioncall functionName="tree"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="x"/>
    <functioncall functionName="xbios_v_l"/>
    <functioncall functionName="y"/>
  </FileInfo>
</analyzerinfo>
