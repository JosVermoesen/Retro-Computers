<?xml version="1.0"?>
<analyzerinfo checksum="3283267598">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="395"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="395"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;k&apos; can be reduced." verbose="The scope of the variable &apos;k&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="396"/>
            <symbol>k</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ret&apos; can be reduced." verbose="The scope of the variable &apos;ret&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="732"/>
            <symbol>ret</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="1090"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="1500"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;r&apos; can be reduced." verbose="The scope of the variable &apos;r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="1759"/>
            <symbol>r</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e&apos; can be reduced." verbose="The scope of the variable &apos;e&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="1809"/>
            <symbol>e</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="2419"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable translate shadows outer function" verbose="Local variable translate shadows outer function" cwe="398">
            <location file0="tools\bug.c" file="tools\bug.c" line="1635" info="Shadow variable"/>
            <location file0="tools\bug.c" file="tools\bug.c" line="2481" info="Shadowed declaration"/>
            <symbol>translate</symbol>
        </error>
        <error id="constArgument" severity="style" msg="Argument &apos;d-&gt;size*sizeof(void*)&apos; to function xmalloc is always 4000" verbose="Argument &apos;d-&gt;size*sizeof(void*)&apos; to function xmalloc is always 4000" cwe="570">
            <location file0="tools\bug.c" file="tools\bug.c" line="234" info="Argument &apos;d-&gt;size*sizeof(void*)&apos; to function xmalloc is always 4000"/>
            <location file0="tools\bug.c" file="tools\bug.c" line="233" info="d-&gt;size is assigned value 1000"/>
        </error>
        <error id="constArgument" severity="style" msg="Argument &apos;s-&gt;size&apos; to function xmalloc is always 100" verbose="Argument &apos;s-&gt;size&apos; to function xmalloc is always 100" cwe="570">
            <location file0="tools\bug.c" file="tools\bug.c" line="300" info="Argument &apos;s-&gt;size&apos; to function xmalloc is always 100"/>
            <location file0="tools\bug.c" file="tools\bug.c" line="299" info="s-&gt;size is assigned value 100"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="9" filename="tools/bug.c" linenr="210" call-argexpr="tz_min/60" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="tools\bug.c" linenr="205" info="Assuming that condition 'tz_min<0' is not redundant"/>
  <path filename="tools\bug.c" linenr="207" info="Assignment 'tz_min=-tz_min', assigned value is 1"/>
</function-call><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="3" filename="tools/bug.c" linenr="1049" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="3" filename="tools/bug.c" linenr="1059" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1554:12" call-funcname="alert_check" call-argnr="3" filename="tools/bug.c" linenr="1705" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1554:12" call-funcname="alert_check" call-argnr="3" filename="tools/bug.c" linenr="1725" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="4" filename="tools/bug.c" linenr="1855" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="1878" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="1894" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="2367" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="2539" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="159" my-id="tools/bug.c:157:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:317:13" call-funcname="s_addch" call-argnr="1" filename="tools/bug.c" linenr="328" my-id="tools/bug.c:325:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:332:15" call-funcname="s_close" call-argnr="1" filename="tools/bug.c" linenr="347" my-id="tools/bug.c:345:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:379:21" call-funcname="compute_hash" call-argnr="1" filename="tools/bug.c" linenr="393" my-id="tools/bug.c:391:15" my-argnr="2"/>
<function-call call-id="tools/bug.c:391:15" call-funcname="h_find" call-argnr="2" filename="tools/bug.c" linenr="451" my-id="tools/bug.c:449:15" my-argnr="2"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="2" filename="tools/bug.c" linenr="456" my-id="tools/bug.c:454:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="2" filename="tools/bug.c" linenr="462" my-id="tools/bug.c:460:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="559" my-id="tools/bug.c:556:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:157:15" call-funcname="xstrdup" call-argnr="1" filename="tools/bug.c" linenr="646" my-id="tools/bug.c:642:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:683:12" call-funcname="igetc" call-argnr="1" filename="tools/bug.c" linenr="707" my-id="tools/bug.c:703:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:703:12" call-funcname="inextsh" call-argnr="1" filename="tools/bug.c" linenr="737" my-id="tools/bug.c:730:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="771" my-id="tools/bug.c:769:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="783" my-id="tools/bug.c:779:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="832" my-id="tools/bug.c:828:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:769:12" call-funcname="try_eof" call-argnr="1" filename="tools/bug.c" linenr="851" my-id="tools/bug.c:849:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="870" my-id="tools/bug.c:866:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:317:13" call-funcname="s_addch" call-argnr="1" filename="tools/bug.c" linenr="904" my-id="tools/bug.c:866:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="981" my-id="tools/bug.c:974:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:484:14" call-funcname="ref_new" call-argnr="1" filename="tools/bug.c" linenr="995" my-id="tools/bug.c:974:13" my-argnr="3"/>
<function-call call-id="tools/bug.c:309:13" call-funcname="s_free" call-argnr="1" filename="tools/bug.c" linenr="1004" my-id="tools/bug.c:1001:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="1038" my-id="tools/bug.c:1029:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="1058" my-id="tools/bug.c:1053:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1095" my-id="tools/bug.c:1088:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:703:12" call-funcname="inextsh" call-argnr="1" filename="tools/bug.c" linenr="1242" my-id="tools/bug.c:1235:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:666:13" call-funcname="iback" call-argnr="1" filename="tools/bug.c" linenr="1270" my-id="tools/bug.c:1264:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:866:12" call-funcname="get_c_string" call-argnr="2" filename="tools/bug.c" linenr="1271" my-id="tools/bug.c:1264:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1297" my-id="tools/bug.c:1290:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:460:13" call-funcname="o_add" call-argnr="1" filename="tools/bug.c" linenr="1403" my-id="tools/bug.c:1290:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1503" my-id="tools/bug.c:1498:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="1" filename="tools/bug.c" linenr="1541" my-id="tools/bug.c:1498:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:31:7" call-funcname="strchr" call-argnr="1" filename="tools/bug.c" linenr="1653" my-id="tools/bug.c:1019:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:257:12" call-funcname="da_len" call-argnr="1" filename="tools/bug.c" linenr="1766" my-id="tools/bug.c:1754:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:465:12" call-funcname="o_len" call-argnr="1" filename="tools/bug.c" linenr="1811" my-id="tools/bug.c:1806:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:465:12" call-funcname="o_len" call-argnr="1" filename="tools/bug.c" linenr="1833" my-id="tools/bug.c:1828:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:325:13" call-funcname="s_addstr" call-argnr="2" filename="tools/bug.c" linenr="1882" my-id="tools/bug.c:1864:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="2" filename="tools/bug.c" linenr="2058" my-id="tools/bug.c:2052:21" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/bug.c" linenr="2201" my-id="tools/bug.c:2196:20" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="2" filename="tools/bug.c" linenr="2201" my-id="tools/bug.c:2196:20" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/bug.c" linenr="2524" my-id="tools/bug.c:2481:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="2490" my-id="tools/bug.c:2481:13" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="charsets" size="3"/>
    <ArraySize array="pca_translate" size="1"/>
    <ArraySize array="pca_xgettext" size="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/bug.c:157:15" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="159"/>
    <unsafe-usage my-id="tools/bug.c:172:13" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="174"/>
    <unsafe-usage my-id="tools/bug.c:172:13" my-argnr="2" my-argname="b" filename="tools/bug.c" linenr="175"/>
    <unsafe-usage my-id="tools/bug.c:229:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="231"/>
    <unsafe-usage my-id="tools/bug.c:251:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="253"/>
    <unsafe-usage my-id="tools/bug.c:257:12" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="259"/>
    <unsafe-usage my-id="tools/bug.c:262:15" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="264"/>
    <unsafe-usage my-id="tools/bug.c:267:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="269"/>
    <unsafe-usage my-id="tools/bug.c:295:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="297"/>
    <unsafe-usage my-id="tools/bug.c:309:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="311"/>
    <unsafe-usage my-id="tools/bug.c:317:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="319"/>
    <unsafe-usage my-id="tools/bug.c:325:13" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="327"/>
    <unsafe-usage my-id="tools/bug.c:332:15" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="334"/>
    <unsafe-usage my-id="tools/bug.c:379:21" my-argnr="1" my-argname="t" filename="tools/bug.c" linenr="383"/>
    <unsafe-usage my-id="tools/bug.c:391:15" my-argnr="1" my-argname="h" filename="tools/bug.c" linenr="398"/>
    <unsafe-usage my-id="tools/bug.c:412:13" my-argnr="1" my-argname="h" filename="tools/bug.c" linenr="417"/>
    <unsafe-usage my-id="tools/bug.c:449:15" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="451"/>
    <unsafe-usage my-id="tools/bug.c:454:13" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="456"/>
    <unsafe-usage my-id="tools/bug.c:460:13" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="462"/>
    <unsafe-usage my-id="tools/bug.c:465:12" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="467"/>
    <unsafe-usage my-id="tools/bug.c:470:15" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="472"/>
    <unsafe-usage my-id="tools/bug.c:536:13" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="538"/>
    <unsafe-usage my-id="tools/bug.c:544:15" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="547"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="1" my-argname="cc" filename="tools/bug.c" linenr="561"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="2" my-argname="start" filename="tools/bug.c" linenr="559"/>
    <unsafe-usage my-id="tools/bug.c:631:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="633"/>
    <unsafe-usage my-id="tools/bug.c:660:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="662"/>
    <unsafe-usage my-id="tools/bug.c:666:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="668"/>
    <unsafe-usage my-id="tools/bug.c:676:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="678"/>
    <unsafe-usage my-id="tools/bug.c:683:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="685"/>
    <unsafe-usage my-id="tools/bug.c:1213:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="1217"/>
    <unsafe-usage my-id="tools/bug.c:1580:13" my-argnr="2" my-argname="lang" filename="tools/bug.c" linenr="1599"/>
    <unsafe-usage my-id="tools/bug.c:1580:13" my-argnr="3" my-argname="key" filename="tools/bug.c" linenr="1599"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="1671"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="1653"/>
    <unsafe-usage my-id="tools/bug.c:2131:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2137"/>
    <unsafe-usage my-id="tools/bug.c:2196:20" my-argnr="1" my-argname="from" filename="tools/bug.c" linenr="2201"/>
    <unsafe-usage my-id="tools/bug.c:2196:20" my-argnr="2" my-argname="to" filename="tools/bug.c" linenr="2201"/>
    <unsafe-usage my-id="tools/bug.c:2261:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2263"/>
    <unsafe-usage my-id="tools/bug.c:2481:13" my-argnr="2" my-argname="from" filename="tools/bug.c" linenr="2490"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/bug.c:257:12" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="259"/>
    <unsafe-usage my-id="tools/bug.c:262:15" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="264"/>
    <unsafe-usage my-id="tools/bug.c:325:13" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="327"/>
    <unsafe-usage my-id="tools/bug.c:379:21" my-argnr="1" my-argname="t" filename="tools/bug.c" linenr="383"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="1" my-argname="cc" filename="tools/bug.c" linenr="561"/>
    <unsafe-usage my-id="tools/bug.c:676:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="678"/>
    <unsafe-usage my-id="tools/bug.c:1213:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="1217"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="1671"/>
    <unsafe-usage my-id="tools/bug.c:2131:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2137"/>
    <unsafe-usage my-id="tools/bug.c:2261:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2263"/>
  </FileInfo>
        <error id="leakNoVarFunctionCall" severity="error" msg="Allocation with now, fprintf doesn&apos;t release it." verbose="Allocation with now, fprintf doesn&apos;t release it." cwe="772">
            <location file0="tools\bug.c" file="tools\bug.c" line="2310"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="9" filename="tools/bug.c" linenr="210" call-argexpr="tz_min/60" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="tools\bug.c" linenr="205" info="Assuming that condition 'tz_min<0' is not redundant"/>
  <path filename="tools\bug.c" linenr="207" info="Assignment 'tz_min=-tz_min', assigned value is 1"/>
</function-call><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="3" filename="tools/bug.c" linenr="1049" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="3" filename="tools/bug.c" linenr="1059" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1554:12" call-funcname="alert_check" call-argnr="3" filename="tools/bug.c" linenr="1705" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1554:12" call-funcname="alert_check" call-argnr="3" filename="tools/bug.c" linenr="1725" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1019:12" call-funcname="print_canon" call-argnr="4" filename="tools/bug.c" linenr="1855" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="1878" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="1894" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="2367" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/bug.c:1290:13" call-funcname="parse_po_file" call-argnr="3" filename="tools/bug.c" linenr="2539" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="159" my-id="tools/bug.c:157:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:317:13" call-funcname="s_addch" call-argnr="1" filename="tools/bug.c" linenr="328" my-id="tools/bug.c:325:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:332:15" call-funcname="s_close" call-argnr="1" filename="tools/bug.c" linenr="347" my-id="tools/bug.c:345:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:379:21" call-funcname="compute_hash" call-argnr="1" filename="tools/bug.c" linenr="393" my-id="tools/bug.c:391:15" my-argnr="2"/>
<function-call call-id="tools/bug.c:391:15" call-funcname="h_find" call-argnr="2" filename="tools/bug.c" linenr="451" my-id="tools/bug.c:449:15" my-argnr="2"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="2" filename="tools/bug.c" linenr="456" my-id="tools/bug.c:454:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="2" filename="tools/bug.c" linenr="462" my-id="tools/bug.c:460:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="559" my-id="tools/bug.c:556:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:157:15" call-funcname="xstrdup" call-argnr="1" filename="tools/bug.c" linenr="646" my-id="tools/bug.c:642:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:683:12" call-funcname="igetc" call-argnr="1" filename="tools/bug.c" linenr="707" my-id="tools/bug.c:703:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:703:12" call-funcname="inextsh" call-argnr="1" filename="tools/bug.c" linenr="737" my-id="tools/bug.c:730:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="771" my-id="tools/bug.c:769:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="783" my-id="tools/bug.c:779:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="832" my-id="tools/bug.c:828:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:769:12" call-funcname="try_eof" call-argnr="1" filename="tools/bug.c" linenr="851" my-id="tools/bug.c:849:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:730:12" call-funcname="inextc" call-argnr="1" filename="tools/bug.c" linenr="870" my-id="tools/bug.c:866:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:317:13" call-funcname="s_addch" call-argnr="1" filename="tools/bug.c" linenr="904" my-id="tools/bug.c:866:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="981" my-id="tools/bug.c:974:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:484:14" call-funcname="ref_new" call-argnr="1" filename="tools/bug.c" linenr="995" my-id="tools/bug.c:974:13" my-argnr="3"/>
<function-call call-id="tools/bug.c:309:13" call-funcname="s_free" call-argnr="1" filename="tools/bug.c" linenr="1004" my-id="tools/bug.c:1001:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="1038" my-id="tools/bug.c:1029:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:345:15" call-funcname="s_detach" call-argnr="1" filename="tools/bug.c" linenr="1058" my-id="tools/bug.c:1053:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1095" my-id="tools/bug.c:1088:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:703:12" call-funcname="inextsh" call-argnr="1" filename="tools/bug.c" linenr="1242" my-id="tools/bug.c:1235:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:666:13" call-funcname="iback" call-argnr="1" filename="tools/bug.c" linenr="1270" my-id="tools/bug.c:1264:12" my-argnr="1"/>
<function-call call-id="tools/bug.c:866:12" call-funcname="get_c_string" call-argnr="2" filename="tools/bug.c" linenr="1271" my-id="tools/bug.c:1264:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1297" my-id="tools/bug.c:1290:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:460:13" call-funcname="o_add" call-argnr="1" filename="tools/bug.c" linenr="1403" my-id="tools/bug.c:1290:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:642:15" call-funcname="ifopen" call-argnr="1" filename="tools/bug.c" linenr="1503" my-id="tools/bug.c:1498:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:267:13" call-funcname="da_add" call-argnr="1" filename="tools/bug.c" linenr="1541" my-id="tools/bug.c:1498:13" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:31:7" call-funcname="strchr" call-argnr="1" filename="tools/bug.c" linenr="1653" my-id="tools/bug.c:1019:12" my-argnr="2"/>
<function-call call-id="tools/bug.c:257:12" call-funcname="da_len" call-argnr="1" filename="tools/bug.c" linenr="1766" my-id="tools/bug.c:1754:15" my-argnr="1"/>
<function-call call-id="tools/bug.c:465:12" call-funcname="o_len" call-argnr="1" filename="tools/bug.c" linenr="1811" my-id="tools/bug.c:1806:13" my-argnr="1"/>
<function-call call-id="tools/bug.c:465:12" call-funcname="o_len" call-argnr="1" filename="tools/bug.c" linenr="1833" my-id="tools/bug.c:1828:13" my-argnr="2"/>
<function-call call-id="tools/bug.c:325:13" call-funcname="s_addstr" call-argnr="2" filename="tools/bug.c" linenr="1882" my-id="tools/bug.c:1864:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="2" filename="tools/bug.c" linenr="2058" my-id="tools/bug.c:2052:21" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/bug.c" linenr="2201" my-id="tools/bug.c:2196:20" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="2" filename="tools/bug.c" linenr="2201" my-id="tools/bug.c:2196:20" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:28:5" call-funcname="strcmp" call-argnr="1" filename="tools/bug.c" linenr="2524" my-id="tools/bug.c:2481:13" my-argnr="1"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:25:8" call-funcname="strlen" call-argnr="1" filename="tools/bug.c" linenr="2490" my-id="tools/bug.c:2481:13" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="charsets" size="3"/>
    <ArraySize array="pca_translate" size="1"/>
    <ArraySize array="pca_xgettext" size="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/bug.c:157:15" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="159"/>
    <unsafe-usage my-id="tools/bug.c:172:13" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="174"/>
    <unsafe-usage my-id="tools/bug.c:172:13" my-argnr="2" my-argname="b" filename="tools/bug.c" linenr="175"/>
    <unsafe-usage my-id="tools/bug.c:229:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="231"/>
    <unsafe-usage my-id="tools/bug.c:251:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="253"/>
    <unsafe-usage my-id="tools/bug.c:257:12" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="259"/>
    <unsafe-usage my-id="tools/bug.c:262:15" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="264"/>
    <unsafe-usage my-id="tools/bug.c:267:13" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="269"/>
    <unsafe-usage my-id="tools/bug.c:295:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="297"/>
    <unsafe-usage my-id="tools/bug.c:309:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="311"/>
    <unsafe-usage my-id="tools/bug.c:317:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="319"/>
    <unsafe-usage my-id="tools/bug.c:325:13" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="327"/>
    <unsafe-usage my-id="tools/bug.c:332:15" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="334"/>
    <unsafe-usage my-id="tools/bug.c:379:21" my-argnr="1" my-argname="t" filename="tools/bug.c" linenr="383"/>
    <unsafe-usage my-id="tools/bug.c:391:15" my-argnr="1" my-argname="h" filename="tools/bug.c" linenr="398"/>
    <unsafe-usage my-id="tools/bug.c:412:13" my-argnr="1" my-argname="h" filename="tools/bug.c" linenr="417"/>
    <unsafe-usage my-id="tools/bug.c:449:15" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="451"/>
    <unsafe-usage my-id="tools/bug.c:454:13" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="456"/>
    <unsafe-usage my-id="tools/bug.c:460:13" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="462"/>
    <unsafe-usage my-id="tools/bug.c:465:12" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="467"/>
    <unsafe-usage my-id="tools/bug.c:470:15" my-argnr="1" my-argname="o" filename="tools/bug.c" linenr="472"/>
    <unsafe-usage my-id="tools/bug.c:536:13" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="538"/>
    <unsafe-usage my-id="tools/bug.c:544:15" my-argnr="1" my-argname="a" filename="tools/bug.c" linenr="547"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="1" my-argname="cc" filename="tools/bug.c" linenr="561"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="2" my-argname="start" filename="tools/bug.c" linenr="559"/>
    <unsafe-usage my-id="tools/bug.c:631:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="633"/>
    <unsafe-usage my-id="tools/bug.c:660:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="662"/>
    <unsafe-usage my-id="tools/bug.c:666:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="668"/>
    <unsafe-usage my-id="tools/bug.c:676:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="678"/>
    <unsafe-usage my-id="tools/bug.c:683:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="685"/>
    <unsafe-usage my-id="tools/bug.c:1213:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="1217"/>
    <unsafe-usage my-id="tools/bug.c:1580:13" my-argnr="2" my-argname="lang" filename="tools/bug.c" linenr="1599"/>
    <unsafe-usage my-id="tools/bug.c:1580:13" my-argnr="3" my-argname="key" filename="tools/bug.c" linenr="1599"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="1671"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="1653"/>
    <unsafe-usage my-id="tools/bug.c:2131:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2137"/>
    <unsafe-usage my-id="tools/bug.c:2196:20" my-argnr="1" my-argname="from" filename="tools/bug.c" linenr="2201"/>
    <unsafe-usage my-id="tools/bug.c:2196:20" my-argnr="2" my-argname="to" filename="tools/bug.c" linenr="2201"/>
    <unsafe-usage my-id="tools/bug.c:2261:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2263"/>
    <unsafe-usage my-id="tools/bug.c:2481:13" my-argnr="2" my-argname="from" filename="tools/bug.c" linenr="2490"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
    <unsafe-usage my-id="tools/bug.c:257:12" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="259"/>
    <unsafe-usage my-id="tools/bug.c:262:15" my-argnr="1" my-argname="d" filename="tools/bug.c" linenr="264"/>
    <unsafe-usage my-id="tools/bug.c:325:13" my-argnr="2" my-argname="t" filename="tools/bug.c" linenr="327"/>
    <unsafe-usage my-id="tools/bug.c:379:21" my-argnr="1" my-argname="t" filename="tools/bug.c" linenr="383"/>
    <unsafe-usage my-id="tools/bug.c:556:12" my-argnr="1" my-argname="cc" filename="tools/bug.c" linenr="561"/>
    <unsafe-usage my-id="tools/bug.c:676:13" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="678"/>
    <unsafe-usage my-id="tools/bug.c:1213:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="1217"/>
    <unsafe-usage my-id="tools/bug.c:1019:12" my-argnr="1" my-argname="f" filename="tools/bug.c" linenr="1671"/>
    <unsafe-usage my-id="tools/bug.c:2131:13" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2137"/>
    <unsafe-usage my-id="tools/bug.c:2261:12" my-argnr="1" my-argname="s" filename="tools/bug.c" linenr="2263"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="warn" lineNumber="112"/>
    <functiondecl functionName="fatal" lineNumber="122"/>
    <functiondecl functionName="xmalloc" lineNumber="137"/>
    <functiondecl functionName="xrealloc" lineNumber="145"/>
    <functiondecl functionName="xstrdup" lineNumber="157"/>
    <functiondecl functionName="difftm" lineNumber="172"/>
    <functiondecl functionName="now" lineNumber="192"/>
    <functiondecl functionName="da_grow" lineNumber="229"/>
    <functiondecl functionName="da_new" lineNumber="243"/>
    <functiondecl functionName="da_free" lineNumber="251"/>
    <functiondecl functionName="da_len" lineNumber="257"/>
    <functiondecl functionName="da_nth" lineNumber="262"/>
    <functiondecl functionName="da_add" lineNumber="267"/>
    <functiondecl functionName="s_new" lineNumber="287"/>
    <functiondecl functionName="s_grow" lineNumber="295"/>
    <functiondecl functionName="s_free" lineNumber="309"/>
    <functiondecl functionName="s_addch" lineNumber="317"/>
    <functiondecl functionName="s_addstr" lineNumber="325"/>
    <functiondecl functionName="s_close" lineNumber="332"/>
    <functiondecl functionName="s_detach" lineNumber="345"/>
    <functiondecl functionName="h_new" lineNumber="372"/>
    <functiondecl functionName="compute_hash" lineNumber="379"/>
    <functiondecl functionName="h_find" lineNumber="391"/>
    <functiondecl functionName="h_insert" lineNumber="412"/>
    <functiondecl functionName="o_new" lineNumber="435"/>
    <functiondecl functionName="o_free" lineNumber="443"/>
    <functiondecl functionName="o_find" lineNumber="449"/>
    <functiondecl functionName="o_insert" lineNumber="454"/>
    <functiondecl functionName="o_add" lineNumber="460"/>
    <functiondecl functionName="o_len" lineNumber="465"/>
    <functiondecl functionName="o_nth" lineNumber="470"/>
    <functiondecl functionName="ref_new" lineNumber="484"/>
    <functiondecl functionName="poe_new" lineNumber="511"/>
    <functiondecl functionName="fill_pot_ae" lineNumber="536"/>
    <functiondecl functionName="ae_to_string" lineNumber="544"/>
    <functiondecl functionName="ae_check_line" lineNumber="556"/>
    <functiondecl functionName="parse_ae" lineNumber="582"/>
    <functiondecl functionName="irefill" lineNumber="631"/>
    <functiondecl functionName="ifopen" lineNumber="642"/>
    <functiondecl functionName="ifclose" lineNumber="660"/>
    <functiondecl functionName="iback" lineNumber="666"/>
    <functiondecl functionName="ibackn" lineNumber="676"/>
    <functiondecl functionName="igetc" lineNumber="683"/>
    <functiondecl functionName="inextsh" lineNumber="703"/>
    <functiondecl functionName="inextc" lineNumber="730"/>
    <functiondecl functionName="try_eof" lineNumber="769"/>
    <functiondecl functionName="try_c_comment" lineNumber="779"/>
    <functiondecl functionName="try_white" lineNumber="828"/>
    <functiondecl functionName="try_c_white" lineNumber="849"/>
    <functiondecl functionName="get_c_string" lineNumber="866"/>
    <functiondecl functionName="pca_xgettext_gstring" lineNumber="974"/>
    <functiondecl functionName="pca_xgettext_string" lineNumber="1001"/>
    <functiondecl functionName="pca_xgettext_other" lineNumber="1007"/>
    <functiondecl functionName="pca_translate_gstring" lineNumber="1029"/>
    <functiondecl functionName="pca_translate_string" lineNumber="1053"/>
    <functiondecl functionName="pca_translate_other" lineNumber="1063"/>
    <functiondecl functionName="parse_c_file" lineNumber="1088"/>
    <functiondecl functionName="underscore_length" lineNumber="1213"/>
    <functiondecl functionName="check_match" lineNumber="1235"/>
    <functiondecl functionName="accumulate_strings" lineNumber="1264"/>
    <functiondecl functionName="parse_po_file" lineNumber="1290"/>
    <functiondecl functionName="parse_oipl_file" lineNumber="1498"/>
    <functiondecl functionName="alert_check" lineNumber="1554"/>
    <functiondecl functionName="print_alert_warning" lineNumber="1580"/>
    <functiondecl functionName="print_canon" lineNumber="1631"/>
    <functiondecl functionName="refs_to_str" lineNumber="1754"/>
    <functiondecl functionName="po_convert_refs" lineNumber="1806"/>
    <functiondecl functionName="print_po_file" lineNumber="1828"/>
    <functiondecl functionName="update" lineNumber="1864"/>
    <functiondecl functionName="xgettext" lineNumber="1992"/>
    <functiondecl functionName="get_canon_cset_name" lineNumber="2052"/>
    <functiondecl functionName="latin1_to_atarist" lineNumber="2131"/>
    <functiondecl functionName="converter_noop" lineNumber="2178"/>
    <functiondecl functionName="get_converter" lineNumber="2196"/>
    <functiondecl functionName="compute_th_value" lineNumber="2232"/>
    <functiondecl functionName="parse_linguas_item" lineNumber="2261"/>
    <functiondecl functionName="make" lineNumber="2278"/>
    <functiondecl functionName="translate" lineNumber="2481"/>
    <functiondecl functionName="usage" lineNumber="2560"/>
    <functiondecl functionName="main" lineNumber="2574"/>
    <functiondecl functionName="warn" lineNumber="112"/>
    <functiondecl functionName="fatal" lineNumber="122"/>
    <functiondecl functionName="xmalloc" lineNumber="137"/>
    <functiondecl functionName="xrealloc" lineNumber="145"/>
    <functiondecl functionName="xstrdup" lineNumber="157"/>
    <functiondecl functionName="difftm" lineNumber="172"/>
    <functiondecl functionName="now" lineNumber="192"/>
    <functiondecl functionName="da_grow" lineNumber="229"/>
    <functiondecl functionName="da_new" lineNumber="243"/>
    <functiondecl functionName="da_free" lineNumber="251"/>
    <functiondecl functionName="da_len" lineNumber="257"/>
    <functiondecl functionName="da_nth" lineNumber="262"/>
    <functiondecl functionName="da_add" lineNumber="267"/>
    <functiondecl functionName="s_new" lineNumber="287"/>
    <functiondecl functionName="s_grow" lineNumber="295"/>
    <functiondecl functionName="s_free" lineNumber="309"/>
    <functiondecl functionName="s_addch" lineNumber="317"/>
    <functiondecl functionName="s_addstr" lineNumber="325"/>
    <functiondecl functionName="s_close" lineNumber="332"/>
    <functiondecl functionName="s_detach" lineNumber="345"/>
    <functiondecl functionName="h_new" lineNumber="372"/>
    <functiondecl functionName="compute_hash" lineNumber="379"/>
    <functiondecl functionName="h_find" lineNumber="391"/>
    <functiondecl functionName="h_insert" lineNumber="412"/>
    <functiondecl functionName="o_new" lineNumber="435"/>
    <functiondecl functionName="o_free" lineNumber="443"/>
    <functiondecl functionName="o_find" lineNumber="449"/>
    <functiondecl functionName="o_insert" lineNumber="454"/>
    <functiondecl functionName="o_add" lineNumber="460"/>
    <functiondecl functionName="o_len" lineNumber="465"/>
    <functiondecl functionName="o_nth" lineNumber="470"/>
    <functiondecl functionName="ref_new" lineNumber="484"/>
    <functiondecl functionName="poe_new" lineNumber="511"/>
    <functiondecl functionName="fill_pot_ae" lineNumber="536"/>
    <functiondecl functionName="ae_to_string" lineNumber="544"/>
    <functiondecl functionName="ae_check_line" lineNumber="556"/>
    <functiondecl functionName="parse_ae" lineNumber="582"/>
    <functiondecl functionName="irefill" lineNumber="631"/>
    <functiondecl functionName="ifopen" lineNumber="642"/>
    <functiondecl functionName="ifclose" lineNumber="660"/>
    <functiondecl functionName="iback" lineNumber="666"/>
    <functiondecl functionName="ibackn" lineNumber="676"/>
    <functiondecl functionName="igetc" lineNumber="683"/>
    <functiondecl functionName="inextsh" lineNumber="703"/>
    <functiondecl functionName="inextc" lineNumber="730"/>
    <functiondecl functionName="try_eof" lineNumber="769"/>
    <functiondecl functionName="try_c_comment" lineNumber="779"/>
    <functiondecl functionName="try_white" lineNumber="828"/>
    <functiondecl functionName="try_c_white" lineNumber="849"/>
    <functiondecl functionName="get_c_string" lineNumber="866"/>
    <functiondecl functionName="pca_xgettext_gstring" lineNumber="974"/>
    <functiondecl functionName="pca_xgettext_string" lineNumber="1001"/>
    <functiondecl functionName="pca_xgettext_other" lineNumber="1007"/>
    <functiondecl functionName="pca_translate_gstring" lineNumber="1029"/>
    <functiondecl functionName="pca_translate_string" lineNumber="1053"/>
    <functiondecl functionName="pca_translate_other" lineNumber="1063"/>
    <functiondecl functionName="parse_c_file" lineNumber="1088"/>
    <functiondecl functionName="underscore_length" lineNumber="1213"/>
    <functiondecl functionName="check_match" lineNumber="1235"/>
    <functiondecl functionName="accumulate_strings" lineNumber="1264"/>
    <functiondecl functionName="parse_po_file" lineNumber="1290"/>
    <functiondecl functionName="parse_oipl_file" lineNumber="1498"/>
    <functiondecl functionName="alert_check" lineNumber="1554"/>
    <functiondecl functionName="print_alert_warning" lineNumber="1580"/>
    <functiondecl functionName="print_canon" lineNumber="1631"/>
    <functiondecl functionName="refs_to_str" lineNumber="1754"/>
    <functiondecl functionName="po_convert_refs" lineNumber="1806"/>
    <functiondecl functionName="print_po_file" lineNumber="1828"/>
    <functiondecl functionName="update" lineNumber="1864"/>
    <functiondecl functionName="xgettext" lineNumber="1992"/>
    <functiondecl functionName="get_canon_cset_name" lineNumber="2052"/>
    <functiondecl functionName="latin1_to_atarist" lineNumber="2131"/>
    <functiondecl functionName="converter_noop" lineNumber="2178"/>
    <functiondecl functionName="get_converter" lineNumber="2196"/>
    <functiondecl functionName="compute_th_value" lineNumber="2232"/>
    <functiondecl functionName="parse_linguas_item" lineNumber="2261"/>
    <functiondecl functionName="make" lineNumber="2278"/>
    <functiondecl functionName="translate" lineNumber="2481"/>
    <functiondecl functionName="usage" lineNumber="2560"/>
    <functiondecl functionName="main" lineNumber="2574"/>
    <functioncall functionName="EXIT_FAILURE"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="a"/>
    <functioncall functionName="a1"/>
    <functioncall functionName="a2"/>
    <functioncall functionName="accumulate_strings"/>
    <functioncall functionName="ae_check_line"/>
    <functioncall functionName="ae_to_string"/>
    <functioncall functionName="alert_check"/>
    <functioncall functionName="alert_lines"/>
    <functioncall functionName="alias"/>
    <functioncall functionName="ap"/>
    <functioncall functionName="argc"/>
    <functioncall functionName="argv"/>
    <functioncall functionName="ascii"/>
    <functioncall functionName="b"/>
    <functioncall functionName="bfname"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buf"/>
    <functioncall functionName="by"/>
    <functioncall functionName="c"/>
    <functioncall functionName="calloc"/>
    <functioncall functionName="char"/>
    <functioncall functionName="charset"/>
    <functioncall functionName="charsets"/>
    <functioncall functionName="check_match"/>
    <functioncall functionName="code"/>
    <functioncall functionName="comment"/>
    <functioncall functionName="compute_hash"/>
    <functioncall functionName="compute_th_value"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="conv"/>
    <functioncall functionName="converter"/>
    <functioncall functionName="converters"/>
    <functioncall functionName="d"/>
    <functioncall functionName="da_add"/>
    <functioncall functionName="da_free"/>
    <functioncall functionName="da_grow"/>
    <functioncall functionName="da_len"/>
    <functioncall functionName="da_new"/>
    <functioncall functionName="da_nth"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="difftm"/>
    <functioncall functionName="e"/>
    <functioncall functionName="e1"/>
    <functioncall functionName="e2"/>
    <functioncall functionName="elem"/>
    <functioncall functionName="eref"/>
    <functioncall functionName="err"/>
    <functioncall functionName="exit"/>
    <functioncall functionName="f"/>
    <functioncall functionName="fail"/>
    <functioncall functionName="fatal"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="fh"/>
    <functioncall functionName="fill_pot_ae"/>
    <functioncall functionName="fmt"/>
    <functioncall functionName="fname"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="fputc"/>
    <functioncall functionName="fputs"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="free"/>
    <functioncall functionName="from"/>
    <functioncall functionName="from_charset"/>
    <functioncall functionName="func"/>
    <functioncall functionName="g"/>
    <functioncall functionName="gem_alert"/>
    <functioncall functionName="gem_button"/>
    <functioncall functionName="get_c_string"/>
    <functioncall functionName="get_canon_cset_name"/>
    <functioncall functionName="get_converter"/>
    <functioncall functionName="getopt"/>
    <functioncall functionName="gmtime"/>
    <functioncall functionName="gstring"/>
    <functioncall functionName="h"/>
    <functioncall functionName="h_find"/>
    <functioncall functionName="h_insert"/>
    <functioncall functionName="h_new"/>
    <functioncall functionName="i"/>
    <functioncall functionName="i1"/>
    <functioncall functionName="i2"/>
    <functioncall functionName="iback"/>
    <functioncall functionName="ibackn"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ifclose"/>
    <functioncall functionName="ifopen"/>
    <functioncall functionName="igetc"/>
    <functioncall functionName="ii"/>
    <functioncall functionName="index"/>
    <functioncall functionName="inextc"/>
    <functioncall functionName="inextsh"/>
    <functioncall functionName="int"/>
    <functioncall functionName="irefill"/>
    <functioncall functionName="j"/>
    <functioncall functionName="k"/>
    <functioncall functionName="key"/>
    <functioncall functionName="l"/>
    <functioncall functionName="lang"/>
    <functioncall functionName="langs"/>
    <functioncall functionName="langteam"/>
    <functioncall functionName="lasttrans"/>
    <functioncall functionName="latin1_to_atarist"/>
    <functioncall functionName="len"/>
    <functioncall functionName="line"/>
    <functioncall functionName="line_start"/>
    <functioncall functionName="lineno"/>
    <functioncall functionName="lines"/>
    <functioncall functionName="local_time"/>
    <functioncall functionName="localtime"/>
    <functioncall functionName="long"/>
    <functioncall functionName="m"/>
    <functioncall functionName="make"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="memmove"/>
    <functioncall functionName="msg"/>
    <functioncall functionName="msgid"/>
    <functioncall functionName="msgstr"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="newc"/>
    <functioncall functionName="now"/>
    <functioncall functionName="numold"/>
    <functioncall functionName="numtransl"/>
    <functioncall functionName="numuntransl"/>
    <functioncall functionName="o"/>
    <functioncall functionName="o1"/>
    <functioncall functionName="o2"/>
    <functioncall functionName="o_add"/>
    <functioncall functionName="o_find"/>
    <functioncall functionName="o_free"/>
    <functioncall functionName="o_insert"/>
    <functioncall functionName="o_len"/>
    <functioncall functionName="o_new"/>
    <functioncall functionName="o_nth"/>
    <functioncall functionName="oldname"/>
    <functioncall functionName="optind"/>
    <functioncall functionName="oref"/>
    <functioncall functionName="other"/>
    <functioncall functionName="otherstr"/>
    <functioncall functionName="p"/>
    <functioncall functionName="parse_ae"/>
    <functioncall functionName="parse_c_file"/>
    <functioncall functionName="parse_linguas_item"/>
    <functioncall functionName="parse_oipl_file"/>
    <functioncall functionName="parse_po_file"/>
    <functioncall functionName="pca_translate"/>
    <functioncall functionName="pca_translate_gstring"/>
    <functioncall functionName="pca_translate_other"/>
    <functioncall functionName="pca_translate_string"/>
    <functioncall functionName="pca_xgettext"/>
    <functioncall functionName="pca_xgettext_gstring"/>
    <functioncall functionName="pca_xgettext_other"/>
    <functioncall functionName="pca_xgettext_string"/>
    <functioncall functionName="po"/>
    <functioncall functionName="po_convert_refs"/>
    <functioncall functionName="poe_new"/>
    <functioncall functionName="prefix"/>
    <functioncall functionName="print_alert_warning"/>
    <functioncall functionName="print_canon"/>
    <functioncall functionName="print_po_file"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="putc"/>
    <functioncall functionName="r"/>
    <functioncall functionName="rc"/>
    <functioncall functionName="realloc"/>
    <functioncall functionName="ref_new"/>
    <functioncall functionName="refs"/>
    <functioncall functionName="refs_to_str"/>
    <functioncall functionName="refstr"/>
    <functioncall functionName="rename"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="s_addch"/>
    <functioncall functionName="s_addstr"/>
    <functioncall functionName="s_close"/>
    <functioncall functionName="s_detach"/>
    <functioncall functionName="s_free"/>
    <functioncall functionName="s_grow"/>
    <functioncall functionName="s_new"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="start"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="strchr"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="string"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strncmp"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="text"/>
    <functioncall functionName="this"/>
    <functioncall functionName="time"/>
    <functioncall functionName="tm_hour"/>
    <functioncall functionName="tm_mday"/>
    <functioncall functionName="tm_min"/>
    <functioncall functionName="tmp"/>
    <functioncall functionName="to"/>
    <functioncall functionName="to_charset"/>
    <functioncall functionName="translate"/>
    <functioncall functionName="try_c_comment"/>
    <functioncall functionName="try_c_white"/>
    <functioncall functionName="try_eof"/>
    <functioncall functionName="try_white"/>
    <functioncall functionName="tz_min"/>
    <functioncall functionName="tz_sign"/>
    <functioncall functionName="underscore_length"/>
    <functioncall functionName="update"/>
    <functioncall functionName="usage"/>
    <functioncall functionName="usagemsg"/>
    <functioncall functionName="userstr"/>
    <functioncall functionName="va_end"/>
    <functioncall functionName="va_start"/>
    <functioncall functionName="vfprintf"/>
    <functioncall functionName="void"/>
    <functioncall functionName="wants_linenum_xrefs"/>
    <functioncall functionName="warn"/>
    <functioncall functionName="warned"/>
    <functioncall functionName="while"/>
    <functioncall functionName="xgettext"/>
    <functioncall functionName="xmalloc"/>
    <functioncall functionName="xrealloc"/>
    <functioncall functionName="xstrdup"/>
  </FileInfo>
</analyzerinfo>
