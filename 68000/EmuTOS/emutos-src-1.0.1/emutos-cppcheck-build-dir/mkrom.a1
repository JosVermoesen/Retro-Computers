<?xml version="1.0"?>
<analyzerinfo checksum="2148815007">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;towrite&apos; can be reduced." verbose="The scope of the variable &apos;towrite&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="177"/>
            <symbol>towrite</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;written&apos; can be reduced." verbose="The scope of the variable &apos;written&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="178"/>
            <symbol>written</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;toread&apos; can be reduced." verbose="The scope of the variable &apos;toread&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="202"/>
            <symbol>toread</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;towrite&apos; can be reduced." verbose="The scope of the variable &apos;towrite&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="203"/>
            <symbol>towrite</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;written&apos; can be reduced." verbose="The scope of the variable &apos;written&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="204"/>
            <symbol>written</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="351"/>
            <symbol>value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nread&apos; can be reduced." verbose="The scope of the variable &apos;nread&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="353"/>
            <symbol>nread</symbol>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;1024*1024&apos;." verbose="Signed integer overflow for expression &apos;1024*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="119" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;1024*1024&apos;." verbose="Signed integer overflow for expression &apos;1024*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="121" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;1024*1024*1024&apos;." verbose="Signed integer overflow for expression &apos;1024*1024*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="121" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;128*1024&apos;." verbose="Signed integer overflow for expression &apos;128*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="300" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;256*1024&apos;." verbose="Signed integer overflow for expression &apos;256*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="399" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;256*1024&apos;." verbose="Signed integer overflow for expression &apos;256*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="492" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;880*1024&apos;." verbose="Signed integer overflow for expression &apos;880*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="493" info="Integer overflow"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &apos;880*1024&apos;." verbose="Signed integer overflow for expression &apos;880*1024&apos;." cwe="190">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="542" info="Integer overflow"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;u.b[3]&apos; is assigned a value that is never used." verbose="Variable &apos;u.b[3]&apos; is assigned a value that is never used." cwe="563">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="74"/>
            <symbol>u.b[3]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;u.b[1]&apos; is assigned a value that is never used." verbose="Variable &apos;u.b[1]&apos; is assigned a value that is never used." cwe="563">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="89"/>
            <symbol>u.b[1]</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="267" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="285" call-argexpr="source_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="319" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="330" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="428" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:63:13" call-funcname="write_big_endian_long" call-argnr="2" filename="tools/mkrom.c" linenr="434" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:348:12" call-funcname="compute_amiga_checksum" call-argnr="4" filename="tools/mkrom.c" linenr="448" call-argexpr="checksum" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="526" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="555" call-argexpr="boot_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="560" call-argexpr="ramtos_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:63:13" call-funcname="write_big_endian_long" call-argnr="1" filename="tools/mkrom.c" linenr="574" call-argexpr="big_endian_long" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:348:12" call-funcname="compute_amiga_checksum" call-argnr="4" filename="tools/mkrom.c" linenr="583" call-argexpr="checksum" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="249" my-id="tools/mkrom.c:241:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="2" filename="tools/mkrom.c" linenr="249" my-id="tools/mkrom.c:241:12" my-argnr="2"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="285" my-id="tools/mkrom.c:275:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="3" filename="tools/mkrom.c" linenr="285" my-id="tools/mkrom.c:275:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="307" my-id="tools/mkrom.c:296:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="1" filename="tools/mkrom.c" linenr="319" my-id="tools/mkrom.c:296:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="410" my-id="tools/mkrom.c:393:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:198:12" call-funcname="copy_stream" call-argnr="3" filename="tools/mkrom.c" linenr="422" my-id="tools/mkrom.c:393:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="499" my-id="tools/mkrom.c:485:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="555" my-id="tools/mkrom.c:536:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="560" my-id="tools/mkrom.c:536:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="3" filename="tools/mkrom.c" linenr="555" my-id="tools/mkrom.c:536:12" my-argnr="5"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/mkrom.c:46:17" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="54"/>
    <unsafe-usage my-id="tools/mkrom.c:63:13" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="76"/>
    <unsafe-usage my-id="tools/mkrom.c:80:13" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="91"/>
    <unsafe-usage my-id="tools/mkrom.c:132:15" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="139"/>
    <unsafe-usage my-id="tools/mkrom.c:241:12" my-argnr="6" my-argname="psource_size" filename="tools/mkrom.c" linenr="249"/>
    <unsafe-usage my-id="tools/mkrom.c:275:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="283"/>
    <unsafe-usage my-id="tools/mkrom.c:275:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="283"/>
    <unsafe-usage my-id="tools/mkrom.c:296:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="304"/>
    <unsafe-usage my-id="tools/mkrom.c:296:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="304"/>
    <unsafe-usage my-id="tools/mkrom.c:348:12" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="358"/>
    <unsafe-usage my-id="tools/mkrom.c:393:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="407"/>
    <unsafe-usage my-id="tools/mkrom.c:393:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="407"/>
    <unsafe-usage my-id="tools/mkrom.c:485:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="496"/>
    <unsafe-usage my-id="tools/mkrom.c:485:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="496"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="2" my-argname="bootfilename" filename="tools/mkrom.c" linenr="552"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="4" my-argname="ramtosfilename" filename="tools/mkrom.c" linenr="552"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="6" my-argname="outfilename" filename="tools/mkrom.c" linenr="552"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="tools/mkrom.c:46:17" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="54"/>
    <unsafe-usage my-id="tools/mkrom.c:132:15" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="139"/>
    <unsafe-usage my-id="tools/mkrom.c:348:12" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="358"/>
  </FileInfo>
        <error id="resourceLeak" severity="error" msg="Resource leak: infile" verbose="Resource leak: infile" cwe="775">
            <location file0="tools\mkrom.c" file="tools\mkrom.c" line="723"/>
            <symbol>infile</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="267" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="285" call-argexpr="source_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="319" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="330" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="428" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:63:13" call-funcname="write_big_endian_long" call-argnr="2" filename="tools/mkrom.c" linenr="434" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:348:12" call-funcname="compute_amiga_checksum" call-argnr="4" filename="tools/mkrom.c" linenr="448" call-argexpr="checksum" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="3" filename="tools/mkrom.c" linenr="526" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="555" call-argexpr="boot_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="6" filename="tools/mkrom.c" linenr="560" call-argexpr="ramtos_size" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:63:13" call-funcname="write_big_endian_long" call-argnr="1" filename="tools/mkrom.c" linenr="574" call-argexpr="big_endian_long" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:348:12" call-funcname="compute_amiga_checksum" call-argnr="4" filename="tools/mkrom.c" linenr="583" call-argexpr="checksum" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="249" my-id="tools/mkrom.c:241:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="2" filename="tools/mkrom.c" linenr="249" my-id="tools/mkrom.c:241:12" my-argnr="2"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="285" my-id="tools/mkrom.c:275:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="3" filename="tools/mkrom.c" linenr="285" my-id="tools/mkrom.c:275:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="307" my-id="tools/mkrom.c:296:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:175:12" call-funcname="write_byte_block" call-argnr="1" filename="tools/mkrom.c" linenr="319" my-id="tools/mkrom.c:296:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="410" my-id="tools/mkrom.c:393:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:198:12" call-funcname="copy_stream" call-argnr="3" filename="tools/mkrom.c" linenr="422" my-id="tools/mkrom.c:393:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:132:15" call-funcname="get_file_size" call-argnr="1" filename="tools/mkrom.c" linenr="499" my-id="tools/mkrom.c:485:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="555" my-id="tools/mkrom.c:536:12" my-argnr="1"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="1" filename="tools/mkrom.c" linenr="560" my-id="tools/mkrom.c:536:12" my-argnr="3"/>
<function-call call-id="tools/mkrom.c:241:12" call-funcname="append_and_pad" call-argnr="3" filename="tools/mkrom.c" linenr="555" my-id="tools/mkrom.c:536:12" my-argnr="5"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="tools/mkrom.c:46:17" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="54"/>
    <unsafe-usage my-id="tools/mkrom.c:63:13" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="76"/>
    <unsafe-usage my-id="tools/mkrom.c:80:13" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="91"/>
    <unsafe-usage my-id="tools/mkrom.c:132:15" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="139"/>
    <unsafe-usage my-id="tools/mkrom.c:241:12" my-argnr="6" my-argname="psource_size" filename="tools/mkrom.c" linenr="249"/>
    <unsafe-usage my-id="tools/mkrom.c:275:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="283"/>
    <unsafe-usage my-id="tools/mkrom.c:275:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="283"/>
    <unsafe-usage my-id="tools/mkrom.c:296:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="304"/>
    <unsafe-usage my-id="tools/mkrom.c:296:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="304"/>
    <unsafe-usage my-id="tools/mkrom.c:348:12" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="358"/>
    <unsafe-usage my-id="tools/mkrom.c:393:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="407"/>
    <unsafe-usage my-id="tools/mkrom.c:393:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="407"/>
    <unsafe-usage my-id="tools/mkrom.c:485:12" my-argnr="2" my-argname="infilename" filename="tools/mkrom.c" linenr="496"/>
    <unsafe-usage my-id="tools/mkrom.c:485:12" my-argnr="4" my-argname="outfilename" filename="tools/mkrom.c" linenr="496"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="2" my-argname="bootfilename" filename="tools/mkrom.c" linenr="552"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="4" my-argname="ramtosfilename" filename="tools/mkrom.c" linenr="552"/>
    <unsafe-usage my-id="tools/mkrom.c:536:12" my-argnr="6" my-argname="outfilename" filename="tools/mkrom.c" linenr="552"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
    <unsafe-usage my-id="tools/mkrom.c:46:17" my-argnr="1" my-argname="p" filename="tools/mkrom.c" linenr="54"/>
    <unsafe-usage my-id="tools/mkrom.c:132:15" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="139"/>
    <unsafe-usage my-id="tools/mkrom.c:348:12" my-argnr="1" my-argname="file" filename="tools/mkrom.c" linenr="358"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="read_big_endian_long" lineNumber="46"/>
    <functiondecl functionName="write_big_endian_long" lineNumber="63"/>
    <functiondecl functionName="write_big_endian_short" lineNumber="80"/>
    <functiondecl functionName="add_with_carry" lineNumber="95"/>
    <functiondecl functionName="get_size_value" lineNumber="106"/>
    <functiondecl functionName="get_file_size" lineNumber="132"/>
    <functiondecl functionName="write_byte_block" lineNumber="175"/>
    <functiondecl functionName="copy_stream" lineNumber="198"/>
    <functiondecl functionName="append_and_pad" lineNumber="241"/>
    <functiondecl functionName="cmd_pad" lineNumber="275"/>
    <functiondecl functionName="cmd_stc" lineNumber="296"/>
    <functiondecl functionName="compute_amiga_checksum" lineNumber="348"/>
    <functiondecl functionName="cmd_amiga" lineNumber="393"/>
    <functiondecl functionName="cmd_amiga_kickdisk" lineNumber="485"/>
    <functiondecl functionName="cmd_amiga_floppy" lineNumber="536"/>
    <functiondecl functionName="main" lineNumber="628"/>
    <functiondecl functionName="read_big_endian_long" lineNumber="46"/>
    <functiondecl functionName="write_big_endian_long" lineNumber="63"/>
    <functiondecl functionName="write_big_endian_short" lineNumber="80"/>
    <functiondecl functionName="add_with_carry" lineNumber="95"/>
    <functiondecl functionName="get_size_value" lineNumber="106"/>
    <functiondecl functionName="get_file_size" lineNumber="132"/>
    <functiondecl functionName="write_byte_block" lineNumber="175"/>
    <functiondecl functionName="copy_stream" lineNumber="198"/>
    <functiondecl functionName="append_and_pad" lineNumber="241"/>
    <functiondecl functionName="cmd_pad" lineNumber="275"/>
    <functiondecl functionName="cmd_stc" lineNumber="296"/>
    <functiondecl functionName="compute_amiga_checksum" lineNumber="348"/>
    <functiondecl functionName="cmd_amiga" lineNumber="393"/>
    <functiondecl functionName="cmd_amiga_kickdisk" lineNumber="485"/>
    <functiondecl functionName="cmd_amiga_floppy" lineNumber="536"/>
    <functiondecl functionName="main" lineNumber="628"/>
    <functioncall functionName="CMD_AMIGA"/>
    <functioncall functionName="CMD_AMIGA_FLOPPY"/>
    <functioncall functionName="CMD_AMIGA_KICKDISK"/>
    <functioncall functionName="CMD_NONE"/>
    <functioncall functionName="CMD_PAD"/>
    <functioncall functionName="CMD_STC"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="SEEK_END"/>
    <functioncall functionName="SEEK_SET"/>
    <functioncall functionName="abort"/>
    <functioncall functionName="add_with_carry"/>
    <functioncall functionName="append_and_pad"/>
    <functioncall functionName="b"/>
    <functioncall functionName="big_endian_long"/>
    <functioncall functionName="big_endian_val"/>
    <functioncall functionName="boot_size"/>
    <functioncall functionName="bootblock_size"/>
    <functioncall functionName="bootfile"/>
    <functioncall functionName="bootfilename"/>
    <functioncall functionName="break"/>
    <functioncall functionName="checksum"/>
    <functioncall functionName="checksum_fixup"/>
    <functioncall functionName="cmd_amiga"/>
    <functioncall functionName="cmd_amiga_floppy"/>
    <functioncall functionName="cmd_amiga_kickdisk"/>
    <functioncall functionName="cmd_pad"/>
    <functioncall functionName="cmd_stc"/>
    <functioncall functionName="compute_amiga_checksum"/>
    <functioncall functionName="copy_stream"/>
    <functioncall functionName="count"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="end_pos"/>
    <functioncall functionName="errno"/>
    <functioncall functionName="fclose"/>
    <functioncall functionName="ferror"/>
    <functioncall functionName="file"/>
    <functioncall functionName="filename"/>
    <functioncall functionName="footer"/>
    <functioncall functionName="fopen"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="fread"/>
    <functioncall functionName="free_size"/>
    <functioncall functionName="fseek"/>
    <functioncall functionName="ftell"/>
    <functioncall functionName="fwrite"/>
    <functioncall functionName="g_argv0"/>
    <functioncall functionName="g_buffer"/>
    <functioncall functionName="get_file_size"/>
    <functioncall functionName="get_size_value"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="infile"/>
    <functioncall functionName="infilename"/>
    <functioncall functionName="initial_pos"/>
    <functioncall functionName="l"/>
    <functioncall functionName="long"/>
    <functioncall functionName="max_ramtos_size"/>
    <functioncall functionName="max_size"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="op"/>
    <functioncall functionName="outfile"/>
    <functioncall functionName="outfilename"/>
    <functioncall functionName="outmode"/>
    <functioncall functionName="pad_size"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="ramtos_size"/>
    <functioncall functionName="ramtosfile"/>
    <functioncall functionName="ramtosfilename"/>
    <functioncall functionName="read_big_endian_long"/>
    <functioncall functionName="remove"/>
    <functioncall functionName="ret"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rom_size"/>
    <functioncall functionName="romsize"/>
    <functioncall functionName="s"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="source_size"/>
    <functioncall functionName="sscanf"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strerror"/>
    <functioncall functionName="strncpy"/>
    <functioncall functionName="strsize"/>
    <functioncall functionName="suffix"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="tail"/>
    <functioncall functionName="target_size"/>
    <functioncall functionName="toread"/>
    <functioncall functionName="towrite"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="val"/>
    <functioncall functionName="value"/>
    <functioncall functionName="while"/>
    <functioncall functionName="write_big_endian_long"/>
    <functioncall functionName="write_big_endian_short"/>
    <functioncall functionName="write_byte_block"/>
  </FileInfo>
</analyzerinfo>
