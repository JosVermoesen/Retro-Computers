<?xml version="1.0"?>
<analyzerinfo checksum="3457371740">
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%lu in format string (no. 1) requires &apos;unsigned long&apos; but the argument type is &apos;signed long&apos;." verbose="%lu in format string (no. 1) requires &apos;unsigned long&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="973"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="279"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buf&apos; can be reduced." verbose="The scope of the variable &apos;buf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="377"/>
            <symbol>buf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="378"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;old&apos; can be reduced." verbose="The scope of the variable &apos;old&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="378"/>
            <symbol>old</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;res&apos; can be reduced." verbose="The scope of the variable &apos;res&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="379"/>
            <symbol>res</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rate&apos; can be reduced." verbose="The scope of the variable &apos;rate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="379"/>
            <symbol>rate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;delay&apos; can be reduced." verbose="The scope of the variable &apos;delay&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="379"/>
            <symbol>delay</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bpc&apos; can be reduced." verbose="The scope of the variable &apos;bpc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="549"/>
            <symbol>bpc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;id&apos; can be reduced." verbose="The scope of the variable &apos;id&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="550"/>
            <symbol>id</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="624"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="880"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;drive&apos; can be reduced." verbose="The scope of the variable &apos;drive&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="916"/>
            <symbol>drive</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1091"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1092"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cprev&apos; can be reduced." verbose="The scope of the variable &apos;cprev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1092"/>
            <symbol>cprev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;response&apos; can be reduced." verbose="The scope of the variable &apos;response&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1092"/>
            <symbol>response</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="220" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="323" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable n shadows outer variable" verbose="Local variable n shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="324" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="437" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="484" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="527" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="548" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable n shadows outer variable" verbose="Local variable n shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="581" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable bufsize shadows outer variable" verbose="Local variable bufsize shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="621" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>bufsize</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable n shadows outer variable" verbose="Local variable n shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="621" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="621" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable iobuf shadows outer variable" verbose="Local variable iobuf shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="624" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="677" info="Shadowed declaration"/>
            <symbol>iobuf</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable outname shadows outer variable" verbose="Local variable outname shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="674" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="674" info="Shadowed declaration"/>
            <symbol>outname</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable inptr shadows outer variable" verbose="Local variable inptr shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="675" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="675" info="Shadowed declaration"/>
            <symbol>inptr</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable outptr shadows outer variable" verbose="Local variable outptr shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="675" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="675" info="Shadowed declaration"/>
            <symbol>outptr</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable in shadows outer variable" verbose="Local variable in shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadowed declaration"/>
            <symbol>in</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable out shadows outer variable" verbose="Local variable out shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadowed declaration"/>
            <symbol>out</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable output_is_dir shadows outer variable" verbose="Local variable output_is_dir shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="676" info="Shadowed declaration"/>
            <symbol>output_is_dir</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable iobuf shadows outer variable" verbose="Local variable iobuf shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="677" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="677" info="Shadowed declaration"/>
            <symbol>iobuf</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable bufsize shadows outer variable" verbose="Local variable bufsize shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>bufsize</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable n shadows outer variable" verbose="Local variable n shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="803" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="822" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="879" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1004" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable n shadows outer variable" verbose="Local variable n shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1091" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable rc shadows outer variable" verbose="Local variable rc shadows outer variable" cwe="398">
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="1091" info="Shadow variable"/>
            <location file0="cli\cmdint.c" file="cli\cmdint.c" line="678" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="3" filename="cli/cmdint.c" linenr="207" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="3" filename="cli/cmdint.c" linenr="258" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:35:13" call-funcname="jmp_xbios" call-argnr="2" filename="cli/cmdint.c" linenr="412" call-argexpr="(short)(delay)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="411" info="Assuming that condition 'delay>=0' is not redundant"/>
</function-call><function-call call-id="cli/cmd.h:35:13" call-funcname="jmp_xbios" call-argnr="3" filename="cli/cmdint.c" linenr="412" call-argexpr="(short)(rate)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="411" info="Assuming that condition 'rate>=0' is not redundant"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="478" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="635" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="641" call-argexpr="(short)(handle)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="636" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="638" info="Assignment 'handle=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="650" call-argexpr="(short)(handle)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="636" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="638" info="Assignment 'handle=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="741" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="746" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="764" call-argexpr="(short)(out)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="747" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="751" info="Assignment 'out=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="771" call-argexpr="(short)(out)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="747" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="751" info="Assignment 'out=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="806" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="2" filename="cli/cmdint.c" linenr="207" my-id="cli/cmdint.c:48:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="2" filename="cli/cmdint.c" linenr="258" my-id="cli/cmdint.c:52:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="2" filename="cli/cmdint.c" linenr="425" my-id="cli/cmdint.c:57:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="2" filename="cli/cmdint.c" linenr="430" my-id="cli/cmdint.c:61:14" my-argnr="2"/>
<function-call call-id="cli/cmd.h:242:6" call-funcname="strequal" call-argnr="1" filename="cli/cmdint.c" linenr="902" my-id="cli/cmdint.c:36:14" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="cli/cmdint.c" linenr="1059" my-id="cli/cmdint.c:44:14" my-argnr="1"/>
<function-call call-id="cli/cmd.h:239:6" call-funcname="message" call-argnr="1" filename="cli/cmdint.c" linenr="1072" my-id="cli/cmdint.c:38:14" my-argnr="1"/>
<function-call call-id="cli/cmdint.c:38:14" call-funcname="output" call-argnr="1" filename="cli/cmdint.c" linenr="1081" my-id="cli/cmdint.c:39:14" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="user_path" size="128"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="cli/cmdint.c:50:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="224"/>
    <unsafe-usage my-id="cli/cmdint.c:56:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="372"/>
    <unsafe-usage my-id="cli/cmdint.c:62:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="478"/>
    <unsafe-usage my-id="cli/cmdint.c:64:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="529"/>
    <unsafe-usage my-id="cli/cmdint.c:65:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="536"/>
    <unsafe-usage my-id="cli/cmdint.c:28:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="680"/>
    <unsafe-usage my-id="cli/cmdint.c:33:14" my-argnr="1" my-argname="p" filename="cli/cmdint.c" linenr="852"/>
    <unsafe-usage my-id="cli/cmdint.c:31:14" my-argnr="1" my-argname="filespec" filename="cli/cmdint.c" linenr="918"/>
    <unsafe-usage my-id="cli/cmdint.c:42:14" my-argnr="2" my-argname="name" filename="cli/cmdint.c" linenr="954"/>
    <unsafe-usage my-id="cli/cmdint.c:27:14" my-argnr="1" my-argname="component" filename="cli/cmdint.c" linenr="1010"/>
    <unsafe-usage my-id="cli/cmdint.c:44:14" my-argnr="1" my-argname="title" filename="cli/cmdint.c" linenr="1059"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/cygwin/home/czietz/emutos-code/include/string.h:38:25" my-argnr="2" my-argname="src" filename="C:/cygwin/home/czietz/emutos-code/include/string.h" linenr="42"/>
    <unsafe-usage my-id="cli/cmdint.c:42:14" my-argnr="2" my-argname="name" filename="cli/cmdint.c" linenr="954"/>
    <unsafe-usage my-id="cli/cmdint.c:27:14" my-argnr="1" my-argname="component" filename="cli/cmdint.c" linenr="1010"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="3" filename="cli/cmdint.c" linenr="207" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="3" filename="cli/cmdint.c" linenr="258" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:35:13" call-funcname="jmp_xbios" call-argnr="2" filename="cli/cmdint.c" linenr="412" call-argexpr="(short)(delay)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="411" info="Assuming that condition 'delay>=0' is not redundant"/>
</function-call><function-call call-id="cli/cmd.h:35:13" call-funcname="jmp_xbios" call-argnr="3" filename="cli/cmdint.c" linenr="412" call-argexpr="(short)(rate)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="411" info="Assuming that condition 'rate>=0' is not redundant"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="478" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="635" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="641" call-argexpr="(short)(handle)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="636" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="638" info="Assignment 'handle=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="650" call-argexpr="(short)(handle)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="636" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="638" info="Assignment 'handle=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="741" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="746" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="764" call-argexpr="(short)(out)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="747" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="751" info="Assignment 'out=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="2" filename="cli/cmdint.c" linenr="771" call-argexpr="(short)(out)" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="cli\cmdint.c" linenr="747" info="Assuming that condition 'rc<0L' is not redundant"/>
  <path filename="cli\cmdint.c" linenr="751" info="Assignment 'out=(unsigned short)(unsigned long)(rc)', assigned value is 0"/>
</function-call><function-call call-id="cli/cmd.h:33:13" call-funcname="jmp_gemdos" call-argnr="3" filename="cli/cmdint.c" linenr="806" call-argexpr="(short)(0)" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="2" filename="cli/cmdint.c" linenr="207" my-id="cli/cmdint.c:48:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="2" filename="cli/cmdint.c" linenr="258" my-id="cli/cmdint.c:52:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:41:14" call-funcname="output_files" call-argnr="2" filename="cli/cmdint.c" linenr="425" my-id="cli/cmdint.c:57:14" my-argnr="2"/>
<function-call call-id="cli/cmdint.c:28:14" call-funcname="copy_move" call-argnr="2" filename="cli/cmdint.c" linenr="430" my-id="cli/cmdint.c:61:14" my-argnr="2"/>
<function-call call-id="cli/cmd.h:242:6" call-funcname="strequal" call-argnr="1" filename="cli/cmdint.c" linenr="902" my-id="cli/cmdint.c:36:14" my-argnr="2"/>
<function-call call-id="C:/cygwin/home/czietz/emutos-code/include/string.h:33:5" call-funcname="sprintf" call-argnr="3" filename="cli/cmdint.c" linenr="1059" my-id="cli/cmdint.c:44:14" my-argnr="1"/>
<function-call call-id="cli/cmd.h:239:6" call-funcname="message" call-argnr="1" filename="cli/cmdint.c" linenr="1072" my-id="cli/cmdint.c:38:14" my-argnr="1"/>
<function-call call-id="cli/cmdint.c:38:14" call-funcname="output" call-argnr="1" filename="cli/cmdint.c" linenr="1081" my-id="cli/cmdint.c:39:14" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="outname" size="256"/>
    <ArraySize array="user_path" size="256"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="cli/cmdint.c:50:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="224"/>
    <unsafe-usage my-id="cli/cmdint.c:56:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="372"/>
    <unsafe-usage my-id="cli/cmdint.c:62:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="478"/>
    <unsafe-usage my-id="cli/cmdint.c:64:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="529"/>
    <unsafe-usage my-id="cli/cmdint.c:65:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="536"/>
    <unsafe-usage my-id="cli/cmdint.c:28:14" my-argnr="2" my-argname="argv" filename="cli/cmdint.c" linenr="680"/>
    <unsafe-usage my-id="cli/cmdint.c:33:14" my-argnr="1" my-argname="p" filename="cli/cmdint.c" linenr="852"/>
    <unsafe-usage my-id="cli/cmdint.c:31:14" my-argnr="1" my-argname="filespec" filename="cli/cmdint.c" linenr="918"/>
    <unsafe-usage my-id="cli/cmdint.c:42:14" my-argnr="2" my-argname="name" filename="cli/cmdint.c" linenr="954"/>
    <unsafe-usage my-id="cli/cmdint.c:27:14" my-argnr="1" my-argname="component" filename="cli/cmdint.c" linenr="1010"/>
    <unsafe-usage my-id="cli/cmdint.c:44:14" my-argnr="1" my-argname="title" filename="cli/cmdint.c" linenr="1059"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="cli/cmdint.c:42:14" my-argnr="2" my-argname="name" filename="cli/cmdint.c" linenr="954"/>
    <unsafe-usage my-id="cli/cmdint.c:27:14" my-argnr="1" my-argname="component" filename="cli/cmdint.c" linenr="1010"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="lookup_builtin" lineNumber="168"/>
    <functiondecl functionName="run_cat" lineNumber="205"/>
    <functiondecl functionName="run_cd" lineNumber="210"/>
    <functiondecl functionName="run_chmod" lineNumber="218"/>
    <functiondecl functionName="run_cls" lineNumber="249"/>
    <functiondecl functionName="run_cp" lineNumber="256"/>
    <functiondecl functionName="run_echo" lineNumber="261"/>
    <functiondecl functionName="run_help" lineNumber="275"/>
    <functiondecl functionName="run_ls" lineNumber="319"/>
    <functiondecl functionName="run_mkdir" lineNumber="370"/>
    <functiondecl functionName="run_mode" lineNumber="375"/>
    <functiondecl functionName="run_more" lineNumber="423"/>
    <functiondecl functionName="run_mv" lineNumber="428"/>
    <functiondecl functionName="run_path" lineNumber="433"/>
    <functiondecl functionName="run_pwd" lineNumber="467"/>
    <functiondecl functionName="run_ren" lineNumber="476"/>
    <functiondecl functionName="run_rm" lineNumber="481"/>
    <functiondecl functionName="run_rmdir" lineNumber="525"/>
    <functiondecl functionName="run_setdrv" lineNumber="534"/>
    <functiondecl functionName="run_show" lineNumber="545"/>
    <functiondecl functionName="run_version" lineNumber="579"/>
    <functiondecl functionName="run_wrap" lineNumber="592"/>
    <functiondecl functionName="output_files" lineNumber="619"/>
    <functiondecl functionName="copy_move" lineNumber="672"/>
    <functiondecl functionName="pathout_base" lineNumber="801"/>
    <functiondecl functionName="pathout" lineNumber="820"/>
    <functiondecl functionName="extract_path" lineNumber="833"/>
    <functiondecl functionName="help_display" lineNumber="848"/>
    <functiondecl functionName="help_lines" lineNumber="866"/>
    <functiondecl functionName="help_pause" lineNumber="877"/>
    <functiondecl functionName="help_wanted" lineNumber="900"/>
    <functiondecl functionName="fixup_filespec" lineNumber="913"/>
    <functiondecl functionName="padname" lineNumber="950"/>
    <functiondecl functionName="display_dta_detail" lineNumber="963"/>
    <functiondecl functionName="is_valid_drive" lineNumber="987"/>
    <functiondecl functionName="check_path_component" lineNumber="1000"/>
    <functiondecl functionName="getyn" lineNumber="1044"/>
    <functiondecl functionName="show_line" lineNumber="1055"/>
    <functiondecl functionName="output" lineNumber="1069"/>
    <functiondecl functionName="outputnl" lineNumber="1079"/>
    <functiondecl functionName="outputbuf" lineNumber="1089"/>
    <functiondecl functionName="user_break" lineNumber="1142"/>
    <functiondecl functionName="user_input" lineNumber="1159"/>
    <functiondecl functionName="lookup_builtin" lineNumber="168"/>
    <functiondecl functionName="run_cat" lineNumber="205"/>
    <functiondecl functionName="run_cd" lineNumber="210"/>
    <functiondecl functionName="run_chmod" lineNumber="218"/>
    <functiondecl functionName="run_cls" lineNumber="249"/>
    <functiondecl functionName="run_cp" lineNumber="256"/>
    <functiondecl functionName="run_echo" lineNumber="261"/>
    <functiondecl functionName="run_help" lineNumber="275"/>
    <functiondecl functionName="run_ls" lineNumber="319"/>
    <functiondecl functionName="run_mkdir" lineNumber="370"/>
    <functiondecl functionName="run_mode" lineNumber="375"/>
    <functiondecl functionName="run_more" lineNumber="423"/>
    <functiondecl functionName="run_mv" lineNumber="428"/>
    <functiondecl functionName="run_path" lineNumber="433"/>
    <functiondecl functionName="run_pwd" lineNumber="467"/>
    <functiondecl functionName="run_ren" lineNumber="476"/>
    <functiondecl functionName="run_rm" lineNumber="481"/>
    <functiondecl functionName="run_rmdir" lineNumber="525"/>
    <functiondecl functionName="run_setdrv" lineNumber="534"/>
    <functiondecl functionName="run_show" lineNumber="545"/>
    <functiondecl functionName="run_version" lineNumber="579"/>
    <functiondecl functionName="run_wrap" lineNumber="592"/>
    <functiondecl functionName="output_files" lineNumber="619"/>
    <functiondecl functionName="copy_move" lineNumber="672"/>
    <functiondecl functionName="pathout_base" lineNumber="801"/>
    <functiondecl functionName="pathout" lineNumber="820"/>
    <functiondecl functionName="extract_path" lineNumber="833"/>
    <functiondecl functionName="help_display" lineNumber="848"/>
    <functiondecl functionName="help_lines" lineNumber="866"/>
    <functiondecl functionName="help_pause" lineNumber="877"/>
    <functiondecl functionName="help_wanted" lineNumber="900"/>
    <functiondecl functionName="fixup_filespec" lineNumber="913"/>
    <functiondecl functionName="padname" lineNumber="950"/>
    <functiondecl functionName="display_dta_detail" lineNumber="963"/>
    <functiondecl functionName="is_valid_drive" lineNumber="987"/>
    <functiondecl functionName="check_path_component" lineNumber="1000"/>
    <functiondecl functionName="getyn" lineNumber="1044"/>
    <functiondecl functionName="show_line" lineNumber="1055"/>
    <functiondecl functionName="output" lineNumber="1069"/>
    <functiondecl functionName="outputnl" lineNumber="1079"/>
    <functiondecl functionName="outputbuf" lineNumber="1089"/>
    <functiondecl functionName="user_break" lineNumber="1142"/>
    <functiondecl functionName="user_input" lineNumber="1159"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="argc"/>
    <functioncall functionName="argv"/>
    <functioncall functionName="attr"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buf"/>
    <functioncall functionName="bufsize"/>
    <functioncall functionName="c"/>
    <functioncall functionName="char"/>
    <functioncall functionName="check_path_component"/>
    <functioncall functionName="cmd"/>
    <functioncall functionName="cmdtable"/>
    <functioncall functionName="component"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="copy_move"/>
    <functioncall functionName="current_res"/>
    <functioncall functionName="d_date"/>
    <functioncall functionName="d_fname"/>
    <functioncall functionName="d_length"/>
    <functioncall functionName="d_time"/>
    <functioncall functionName="decode_date_time"/>
    <functioncall functionName="default"/>
    <functioncall functionName="delay"/>
    <functioncall functionName="dest"/>
    <functioncall functionName="detail"/>
    <functioncall functionName="display_dta_detail"/>
    <functioncall functionName="escape"/>
    <functioncall functionName="extract_path"/>
    <functioncall functionName="filespec"/>
    <functioncall functionName="fixup"/>
    <functioncall functionName="fixup_filespec"/>
    <functioncall functionName="for"/>
    <functioncall functionName="func"/>
    <functioncall functionName="get_path_component"/>
    <functioncall functionName="getword"/>
    <functioncall functionName="getyn"/>
    <functioncall functionName="handle"/>
    <functioncall functionName="has_wildcard"/>
    <functioncall functionName="help_cat"/>
    <functioncall functionName="help_cd"/>
    <functioncall functionName="help_chmod"/>
    <functioncall functionName="help_cls"/>
    <functioncall functionName="help_cp"/>
    <functioncall functionName="help_display"/>
    <functioncall functionName="help_echo"/>
    <functioncall functionName="help_edit"/>
    <functioncall functionName="help_exit"/>
    <functioncall functionName="help_help"/>
    <functioncall functionName="help_lines"/>
    <functioncall functionName="help_ls"/>
    <functioncall functionName="help_mkdir"/>
    <functioncall functionName="help_mode"/>
    <functioncall functionName="help_more"/>
    <functioncall functionName="help_mv"/>
    <functioncall functionName="help_path"/>
    <functioncall functionName="help_pause"/>
    <functioncall functionName="help_pwd"/>
    <functioncall functionName="help_ren"/>
    <functioncall functionName="help_rm"/>
    <functioncall functionName="help_rmdir"/>
    <functioncall functionName="help_show"/>
    <functioncall functionName="help_version"/>
    <functioncall functionName="help_wanted"/>
    <functioncall functionName="help_wrap"/>
    <functioncall functionName="i"/>
    <functioncall functionName="id"/>
    <functioncall functionName="if"/>
    <functioncall functionName="in"/>
    <functioncall functionName="info"/>
    <functioncall functionName="inname"/>
    <functioncall functionName="inptr"/>
    <functioncall functionName="iobuf"/>
    <functioncall functionName="is_valid_drive"/>
    <functioncall functionName="jmp_bios"/>
    <functioncall functionName="jmp_gemdos"/>
    <functioncall functionName="jmp_xbios"/>
    <functioncall functionName="len"/>
    <functioncall functionName="linewrap"/>
    <functioncall functionName="long"/>
    <functioncall functionName="maxargs"/>
    <functioncall functionName="message"/>
    <functioncall functionName="messagenl"/>
    <functioncall functionName="minargs"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="old"/>
    <functioncall functionName="out"/>
    <functioncall functionName="outname"/>
    <functioncall functionName="outptr"/>
    <functioncall functionName="output"/>
    <functioncall functionName="output_files"/>
    <functioncall functionName="output_is_dir"/>
    <functioncall functionName="outputbuf"/>
    <functioncall functionName="outputnl"/>
    <functioncall functionName="p"/>
    <functioncall functionName="padname"/>
    <functioncall functionName="paging"/>
    <functioncall functionName="pathout"/>
    <functioncall functionName="pathout_base"/>
    <functioncall functionName="prompt"/>
    <functioncall functionName="rate"/>
    <functioncall functionName="rc"/>
    <functioncall functionName="redir_handle"/>
    <functioncall functionName="res"/>
    <functioncall functionName="response"/>
    <functioncall functionName="return"/>
    <functioncall functionName="run_cat"/>
    <functioncall functionName="run_cd"/>
    <functioncall functionName="run_chmod"/>
    <functioncall functionName="run_cls"/>
    <functioncall functionName="run_cp"/>
    <functioncall functionName="run_echo"/>
    <functioncall functionName="run_help"/>
    <functioncall functionName="run_ls"/>
    <functioncall functionName="run_mkdir"/>
    <functioncall functionName="run_mode"/>
    <functioncall functionName="run_more"/>
    <functioncall functionName="run_mv"/>
    <functioncall functionName="run_path"/>
    <functioncall functionName="run_pwd"/>
    <functioncall functionName="run_ren"/>
    <functioncall functionName="run_rm"/>
    <functioncall functionName="run_rmdir"/>
    <functioncall functionName="run_show"/>
    <functioncall functionName="run_version"/>
    <functioncall functionName="run_wrap"/>
    <functioncall functionName="s"/>
    <functioncall functionName="short"/>
    <functioncall functionName="show_line"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="src"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strequal"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strlower"/>
    <functioncall functionName="strncasecmp"/>
    <functioncall functionName="strupper"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="synonym"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="title"/>
    <functioncall functionName="user_break"/>
    <functioncall functionName="user_input"/>
    <functioncall functionName="user_path"/>
    <functioncall functionName="valid_res"/>
    <functioncall functionName="version"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
