<?xml version="1.0"?>
<analyzerinfo checksum="3869740747">
        <error id="redundantAssignment" severity="style" msg="Variable &apos;p&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;p&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="bdos\iumem.c" file="bdos\iumem.c" line="90"/>
            <location file0="bdos\iumem.c" file="bdos\iumem.c" line="57"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;maxval&apos; can be reduced." verbose="The scope of the variable &apos;maxval&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="bdos\iumem.c" file="bdos\iumem.c" line="39"/>
            <symbol>maxval</symbol>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="bufl" size="2"/>
    <ArraySize array="errbuf" size="13"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="bdos/mem.h:97:6" my-argnr="2" my-argname="mp" filename="bdos/iumem.c" linenr="165"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="bufl" size="2"/>
    <ArraySize array="errbuf" size="13"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="bdos/mem.h:97:6" my-argnr="1" my-argname="m" filename="bdos/iumem.c" linenr="156"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="bufl" size="2"/>
    <ArraySize array="errbuf" size="13"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="bdos/mem.h:97:6" my-argnr="2" my-argname="mp" filename="bdos/iumem.c" linenr="165"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="bufl" size="2"/>
    <ArraySize array="errbuf" size="13"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="bdos/mem.h:97:6" my-argnr="2" my-argname="mp" filename="bdos/iumem.c" linenr="165"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="ffit" lineNumber="36"/>
    <functiondecl functionName="freeit" lineNumber="142"/>
    <functiondecl functionName="shrinkit" lineNumber="226"/>
    <functiondecl functionName="ffit" lineNumber="36"/>
    <functiondecl functionName="freeit" lineNumber="142"/>
    <functiondecl functionName="shrinkit" lineNumber="226"/>
    <functiondecl functionName="ffit" lineNumber="36"/>
    <functiondecl functionName="freeit" lineNumber="142"/>
    <functiondecl functionName="shrinkit" lineNumber="226"/>
    <functiondecl functionName="ffit" lineNumber="36"/>
    <functiondecl functionName="freeit" lineNumber="142"/>
    <functiondecl functionName="shrinkit" lineNumber="226"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="amount"/>
    <functioncall functionName="break"/>
    <functioncall functionName="f"/>
    <functioncall functionName="for"/>
    <functioncall functionName="if"/>
    <functioncall functionName="kprintf"/>
    <functioncall functionName="m"/>
    <functioncall functionName="m_length"/>
    <functioncall functionName="m_link"/>
    <functioncall functionName="m_start"/>
    <functioncall functionName="maxval"/>
    <functioncall functionName="mp"/>
    <functioncall functionName="mp_mal"/>
    <functioncall functionName="mp_mfl"/>
    <functioncall functionName="newlen"/>
    <functioncall functionName="p"/>
    <functioncall functionName="p1"/>
    <functioncall functionName="q"/>
    <functioncall functionName="return"/>
    <functioncall functionName="run"/>
    <functioncall functionName="while"/>
    <functioncall functionName="xmfremd"/>
    <functioncall functionName="xmgetmd"/>
  </FileInfo>
</analyzerinfo>
