From 29d02ac95d9a478b8a26ec8053236313a7965936 Mon Sep 17 00:00:00 2001
From: Christian Zietz <czietz@gmx.net>
Date: Tue, 26 Dec 2017 11:58:30 +0000
Subject: [PATCH 3/3] Unroll loops in ide_get_data/ide_put_data to
 significantly increase IDE speed.

---
 bios/ide.c | 74 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 72 insertions(+), 2 deletions(-)

diff --git a/bios/ide.c b/bios/ide.c
index c89db38..a2c1d6f 100644
--- a/bios/ide.c
+++ b/bios/ide.c
@@ -739,13 +739,48 @@ static void ide_get_data(volatile struct IDE *interface,UBYTE *buffer,UWORD nums
     if (need_byteswap) {
         while (p < end) {
             XFERWIDTH temp;
+
+            /* Unroll the loop 4 times, transferring 8/16 bytes in a row. */
+            temp = interface->data;
+            xferswap(temp);
+            *p++ = temp;
+
+            temp = interface->data;
+            xferswap(temp);
+            *p++ = temp;
+
+            temp = interface->data;
+            xferswap(temp);
+            *p++ = temp;
+
             temp = interface->data;
             xferswap(temp);
             *p++ = temp;
         }
     } else {
         while (p < end) {
-            /* Note that the pointer p gets incremented implicitly. */
+            /* Unroll the loop 16 times, transferring 32/64 bytes in a row.
+             * We always transfer multiples of SECTOR_SIZE (512 bytes).
+             * Note that the pointer p gets incremented implicitly.
+             */
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
+            ide_get_and_incr(&(interface->data), p);
             ide_get_and_incr(&(interface->data), p);
         }
     }
@@ -838,13 +873,48 @@ static void ide_put_data(volatile struct IDE *interface,UBYTE *buffer,UWORD nums
     if (need_byteswap) {
         while (p < end) {
             XFERWIDTH temp;
+
+            /* Unroll the loop 4 times, transferring 8/16 bytes in a row. */
+            temp = *p++;
+            xferswap(temp);
+            interface->data = temp;
+
             temp = *p++;
             xferswap(temp);
             interface->data = temp;
+
+            temp = *p++;
+            xferswap(temp);
+            interface->data = temp;
+
+            temp = *p++;
+            xferswap(temp);
+            interface->data = temp;            
         }
     } else {
         while (p < end) {
-            /* Note that the pointer p gets incremented implicitly. */
+            /* Unroll the loop 16 times, transferring 32/64 bytes in a row.
+             * We always transfer multiples of SECTOR_SIZE (512 bytes).
+             * Note that the pointer p gets incremented implicitly.
+             */
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
+            ide_put_and_incr(p, &(interface->data));
             ide_put_and_incr(p, &(interface->data));
         }
     }
-- 
2.8.2.windows.1

