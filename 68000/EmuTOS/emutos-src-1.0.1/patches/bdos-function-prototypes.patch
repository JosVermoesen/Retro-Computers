From 57a7bc72b6b79fc188547422808fbe955951742a Mon Sep 17 00:00:00 2001
From: Christian Zietz <czietz@gmx.net>
Date: Sun, 13 Nov 2016 11:19:16 +0000
Subject: [PATCH] Add proper function prototypes

---
 bdos/bdosmain.c | 136 ++++++++++++++++++++++++++++++--------------------------
 1 file changed, 74 insertions(+), 62 deletions(-)

diff --git a/bdos/bdosmain.c b/bdos/bdosmain.c
index ac4ea96..8437e55 100644
--- a/bdos/bdosmain.c
+++ b/bdos/bdosmain.c
@@ -110,6 +110,18 @@ static const SPECNAME specname_table[] =
 };
 #define SN_ENTRIES  ARRAY_SIZE(specname_table)
 
+/* 
+ * typedefs for function calls with 0 to 7 int parameters 
+*/
+typedef long (*fnproto0)(void);
+typedef long (*fnproto1)(int);
+typedef long (*fnproto2)(int,int);
+typedef long (*fnproto3)(int,int,int);
+typedef long (*fnproto4)(int,int,int,int);
+typedef long (*fnproto5)(int,int,int,int,int);
+typedef long (*fnproto6)(int,int,int,int,int,int);
+typedef long (*fnproto7)(int,int,int,int,int,int,int);
+
 
 /*
  * FND - Function Descriptor
@@ -120,7 +132,7 @@ static const SPECNAME specname_table[] =
  */
 typedef struct
 {
-    long  (*fncall)();
+    fnproto0 fncall;    /* Even though it may take parameters */
     UBYTE stdio_typ;    /* Standard I/O channel (highest bit must be set, too) */
     UBYTE wparms;       /* Size of parameters in WORDs */
 } FND;
@@ -134,7 +146,7 @@ typedef struct
  */
 static const FND funcs[] =
 {
-     { (long(*)()) x0term, 0, 0 }, /* 0x00 */
+     { (fnproto0) x0term, 0, 0 },       /* 0x00 */
 
     /*
      * console functions
@@ -143,17 +155,17 @@ static const FND funcs[] =
      * 0x80 is std in, 0x81 is stdout, 0x82 is stdaux, 0x83 stdprn
      */
 
-    { xconin,   0x80, 0 },   /* 0x01 */
-    { xconout,  0x81, 1 },   /* 0x02 */
-    { xauxin,   0x82, 0 },   /* 0x03 */
-    { xauxout,  0x82, 1 },   /* 0x04 */
-    { xprtout,  0x83, 1 },   /* 0x05 */
-    { xrawio,   0,    1 },   /* 0x06 */
-    { xrawcin,  0x80, 0 },   /* 0x07 */
-    { xnecin,   0x80, 0 },   /* 0x08 */
-    { (long(*)()) xconws, 0x81, 2 }, /* 0x09 */
-    { (long(*)()) xconrs, 0x80, 2 }, /* 0x0A */
-    { xconstat, 0x80, 0 },   /* 0x0B */
+    { (fnproto0) xconin,   0x80, 0 },   /* 0x01 */
+    { (fnproto0) xconout,  0x81, 1 },   /* 0x02 */
+    { (fnproto0) xauxin,   0x82, 0 },   /* 0x03 */
+    { (fnproto0) xauxout,  0x82, 1 },   /* 0x04 */
+    { (fnproto0) xprtout,  0x83, 1 },   /* 0x05 */
+    { (fnproto0) xrawio,   0,    1 },   /* 0x06 */
+    { (fnproto0) xrawcin,  0x80, 0 },   /* 0x07 */
+    { (fnproto0) xnecin,   0x80, 0 },   /* 0x08 */
+    { (fnproto0) xconws,   0x81, 2 },   /* 0x09 */
+    { (fnproto0) xconrs,   0x80, 2 },   /* 0x0A */
+    { (fnproto0) xconstat, 0x80, 0 },   /* 0x0B */
 
     /*
      * disk functions
@@ -166,7 +178,7 @@ static const FND funcs[] =
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xsetdrv,  0, 1 },      /* 0x0E */
+    { (fnproto0) xsetdrv,  0, 1 },      /* 0x0E */
 
     { ni,       0, 0 },
 
@@ -176,23 +188,23 @@ static const FND funcs[] =
      * Here the 0x80 flag indicates std file used, as above
      */
 
-    { xconostat, 0x81, 0 },  /* 0x10 */
-    { xprtostat, 0x83, 0 },  /* 0x11 */
-    { xauxistat, 0x82, 0 },  /* 0x12 */
-    { xauxostat, 0x82, 0 },  /* 0x13 */
+    { (fnproto0) xconostat, 0x81, 0 },  /* 0x10 */
+    { (fnproto0) xprtostat, 0x83, 0 },  /* 0x11 */
+    { (fnproto0) xauxistat, 0x82, 0 },  /* 0x12 */
+    { (fnproto0) xauxostat, 0x82, 0 },  /* 0x13 */
 
 #if CONF_WITH_ALT_RAM
-    { xmaddalt, 0, 4 },      /* 0x14 */
+    { (fnproto0) xmaddalt,  0, 4 },     /* 0x14 */
 #else
-    { ni,       0, 0 },      /* 0x14 */
+    { ni,       0, 0 },                 /* 0x14 */
 #endif
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xgetdrv,  0, 0 },      /* 0x19 */
-    { (long(*)()) xsetdta, 0, 2 }, /* 0x1A */
+    { (fnproto0) xgetdrv,  0, 0 },      /* 0x19 */
+    { (fnproto0) xsetdta,  0, 2 },      /* 0x1A */
 
     { ni,       0, 0 },
     { ni,       0, 0 },
@@ -202,7 +214,7 @@ static const FND funcs[] =
 
     /* xgsps */
 
-    { ni,       0, 0 },      /* 0x20 */
+    { ni,       0, 0 },                 /* 0x20 */
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
@@ -213,62 +225,62 @@ static const FND funcs[] =
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xgetdate, 0, 0 },      /* 0x2A */
-    { (long(*)()) xsetdate, 0, 1 }, /* 0x2B */
-    { xgettime, 0, 0 },      /* 0x2C */
-    { (long(*)()) xsettime, 0, 1 }, /* 0x2D */
+    { (fnproto0) xgetdate, 0, 0 },      /* 0x2A */
+    { (fnproto0) xsetdate, 0, 1 },      /* 0x2B */
+    { (fnproto0) xgettime, 0, 0 },      /* 0x2C */
+    { (fnproto0) xsettime, 0, 1 },      /* 0x2D */
 
     { ni,       0, 0 },
 
-    { (long(*)()) xgetdta, 0, 0 }, /* 0x2F */
-    { xgetver,  0, 0 },      /* 0x30 */
-    { (long(*)()) xtermres, 0, 3 }, /* 0x31 */
+    { (fnproto0) xgetdta,  0, 0 },      /* 0x2F */
+    { (fnproto0) xgetver,  0, 0 },      /* 0x30 */
+    { (fnproto0) xtermres, 0, 3 },      /* 0x31 */
 
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xgetfree, 0, 3 },      /* 0x36 */
+    { (fnproto0) xgetfree, 0, 3 },      /* 0x36 */
 
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xmkdir,   0, 2 },      /* 0x39 */
-    { xrmdir,   0, 2 },      /* 0x3A */
-    { xchdir,   0, 2 },      /* 0x3B */
-    { (long(*)()) xcreat, 0, 3 },  /* 0x3C */
-    { xopen,    0, 3 },      /* 0x3D */
-    { xclose,   0, 1 },      /* 0x3E - will handle its own redirection */
-    { xread,    0x82, 5 },   /* 0x3F */
-    { xwrite,   0x82, 5 },   /* 0x40 */
-    { xunlink,  0, 2 },      /* 0x41 */
-    { xlseek,   0x81, 4 },   /* 0x42 */
-    { (long(*)()) xchmod, 0, 4 },  /* 0x43 */
-    { (long(*)()) xmxalloc, 0, 3 }, /* 0x44 */
-    { xdup,     0, 1 },      /* 0x45 */
-    { xforce,   0, 2 },      /* 0x46 */
-    { xgetdir,  0, 3 },      /* 0x47 */
-    { (long(*)()) xmalloc,  0, 2 }, /* 0x48 */
-    { xmfree,   0, 2 },      /* 0x49 */
-    { xsetblk,  0, 5 },      /* 0x4A */
-    { (long(*)()) xexec, 0, 7 },   /* 0x4B */
-    { (long(*)()) xterm, 0, 1 },   /* 0x4C */
+    { (fnproto0) xmkdir,   0, 2 },      /* 0x39 */
+    { (fnproto0) xrmdir,   0, 2 },      /* 0x3A */
+    { (fnproto0) xchdir,   0, 2 },      /* 0x3B */
+    { (fnproto0) xcreat,   0, 3 },      /* 0x3C */
+    { (fnproto0) xopen,    0, 3 },      /* 0x3D */
+    { (fnproto0) xclose,   0, 1 },      /* 0x3E - will handle its own redirection */
+    { (fnproto0) xread,    0x82, 5 },   /* 0x3F */
+    { (fnproto0) xwrite,   0x82, 5 },   /* 0x40 */
+    { (fnproto0) xunlink,  0, 2 },      /* 0x41 */
+    { (fnproto0) xlseek,   0x81, 4 },   /* 0x42 */
+    { (fnproto0) xchmod,   0, 4 },      /* 0x43 */
+    { (fnproto0) xmxalloc, 0, 3 },      /* 0x44 */
+    { (fnproto0) xdup,     0, 1 },      /* 0x45 */
+    { (fnproto0) xforce,   0, 2 },      /* 0x46 */
+    { (fnproto0) xgetdir,  0, 3 },      /* 0x47 */
+    { (fnproto0) xmalloc,  0, 2 },      /* 0x48 */
+    { (fnproto0) xmfree,   0, 2 },      /* 0x49 */
+    { (fnproto0) xsetblk,  0, 5 },      /* 0x4A */
+    { (fnproto0) xexec,    0, 7 },      /* 0x4B */
+    { (fnproto0) xterm,    0, 1 },      /* 0x4C */
 
     { ni,       0, 0 },
 
-    { xsfirst,  0, 3 },      /* 0x4E */
-    { xsnext,   0, 0 },      /* 0x4F */
+    { (fnproto0) xsfirst,  0, 3 },      /* 0x4E */
+    { (fnproto0) xsnext,   0, 0 },      /* 0x4F */
 
-    { ni,       0, 0 },    /* 0x50 */
+    { ni,       0, 0 },                 /* 0x50 */
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
     { ni,       0, 0 },
 
-    { xrename,  0, 5 },    /* 0x56 */
-    { xgsdtof,  0, 4 }       /* 0x57 */
+    { (fnproto0) xrename,  0, 5 },      /* 0x56 */
+    { (fnproto0) xgsdtof,  0, 4 }       /* 0x57 */
 };
 #define MAX_FNCALL (ARRAY_SIZE(funcs) - 1)
 
@@ -625,27 +637,27 @@ restrt:
             break;
 
         case 1:
-            rc = (*f->fncall)(pw[1]);
+            rc = ((fnproto1)(*f->fncall))(pw[1]);
             break;
 
         case 2:
-            rc = (*f->fncall)(pw[1],pw[2]);
+            rc = ((fnproto2)(*f->fncall))(pw[1],pw[2]);
             break;
 
         case 3:
-            rc = (*f->fncall)(pw[1],pw[2],pw[3]);
+            rc = ((fnproto3)(*f->fncall))(pw[1],pw[2],pw[3]);
             break;
 
         case 4:
-            rc = (*f->fncall)(pw[1],pw[2],pw[3],pw[4]);
+            rc = ((fnproto4)(*f->fncall))(pw[1],pw[2],pw[3],pw[4]);
             break;
 
         case 5:
-            rc = (*f->fncall)(pw[1],pw[2],pw[3],pw[4],pw[5]);
+            rc = ((fnproto5)(*f->fncall))(pw[1],pw[2],pw[3],pw[4],pw[5]);
             break;
 
         case 7:
-            rc = (*f->fncall)(pw[1],pw[2],pw[3],pw[4],pw[5],pw[6],pw[7]);
+            rc = ((fnproto7)(*f->fncall))(pw[1],pw[2],pw[3],pw[4],pw[5],pw[6],pw[7]);
             break;
 
         default:
-- 
2.8.2.windows.1

