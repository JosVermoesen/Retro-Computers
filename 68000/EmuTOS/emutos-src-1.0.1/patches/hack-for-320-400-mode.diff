diff --git a/bios/screen.c b/bios/screen.c
index 007d3aeb..deb98534 100644
--- a/bios/screen.c
+++ b/bios/screen.c
@@ -524,8 +524,9 @@ static void screen_init_mode(void)
          * is displaying, otherwise the plane shift bug may appear. */
         vsync();
 
-        rez = monitor_type?ST_LOW:ST_HIGH;
-        *(volatile BYTE *) ST_SHIFTER = rez;
+        rez = monitor_type?ST_MEDIUM:ST_HIGH;
+        *(volatile BYTE *)(ST_SHIFTER) = ST_HIGH;
+        *(volatile BYTE *)(ST_SHIFTER+1) = rez;
     }
 
 #if CONF_WITH_VIDEL
@@ -655,8 +656,8 @@ struct video_mode {
 };
 
 static const struct video_mode video_mode[] = {
-    { 4,  320, 200},            /* rez=0: ST low */
-    { 2,  640, 200},            /* rez=1: ST medium */
+    { 4,  160, 400},            /* rez=0: ST low */
+    { 2,  320, 400},            /* rez=1: ST medium */
     { 1,  640, 400},            /* rez=2: ST high */
 #if CONF_WITH_TT_SHIFTER
     { 0,    0,   0},            /* rez=3: invalid */
@@ -826,7 +827,7 @@ static WORD atari_getrez(void)
     else
 #endif
     {
-        rez = *(volatile UBYTE *)ST_SHIFTER & 0x03;
+        rez = sshiftmod; // *(volatile UBYTE *)ST_SHIFTER & 0x03;
     }
 
     return rez;
@@ -855,7 +856,12 @@ static void atari_setrez(WORD rez, WORD videlmode)
     }
 #endif
     else if (rez < 3) {         /* ST resolution */
-        *(volatile UBYTE *)ST_SHIFTER = sshiftmod = rez;
+        if (rez < 2) {
+            *(volatile UBYTE *)ST_SHIFTER = 2; // Glue to mono
+            *(volatile UBYTE *)(ST_SHIFTER+1) = sshiftmod = rez; // Shifter to color
+        } else {
+            *(volatile UBYTE *)ST_SHIFTER = sshiftmod = rez;
+        }
     }
 }
 
