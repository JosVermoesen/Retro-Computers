 100 REM OSISDOS READ DIR FROM SD CARD IN BASIC
 110 SAVE:REM TURN ON LOGGING TO SERIAL PORT
 120 REM SDCARD BASE ADDRESS = $F010 (61456 DEC)
 130 DT=61456:ST=61457:A0=61458:A1=61459:A2=61460:REM SD I/F
 140 DIM MA(512):REM ARRAY SPACE FOR SD CARD DATA
 150 GOSUB 2200:REM CHECK CARD STATUS
 160 REM READ FIRST LBA
 170 L0=0:L1=0:L2=0
 180 GOSUB 4800:REM READ FIRST BLOCK
 190 REM GOSUB 3000:REM DUMP FIRST BLOCK
 200 GOSUB 3600:REM FIND PARTITION TABLE START
 210 GOSUB 4800:REM READ PARTITION TABLE BLOCK
 220 PRINT "BOOT SECTOR/BPB BLOCK"
 230 REM GOSUB 3000:REM DUMP ARRAY
 240 REM GOSUB 4000:REM PRINT RESERVED SECTOR KEY VALUES
 250 REM CALCULATE DIR SECTOR VALUES
 260 GOSUB 4200:REM PROCESS BOOT/BPB FIELDS
 270 INPUT Q$
 280 FS=0
 290 GOSUB 5200:REM PRINT DIRECTORY
 300 IF FS<>0 THEN GOTO 360
 310 INPUT "FILE OFFSET";FS
 360 GOSUB 5000:REM PRINT FILE AT FS
 1990 END
 2200 REM CHECK CARD INIT STATUS
 2210 IF PEEK(ST)=128 THEN RETURN
 2220 PRINT "BAD INIT STATUS"
 2230 PRINT PEEK(ST)
 2240 END
 2400 REM READ BLOCK TO ARRAY
 2410 POKE ST,0
 2420 REM WAIT FOR READ VALUE READY
 2430 FOR MO=0 TO 511
 2440 SV=PEEK(ST)
 2450 IF SV <> 224 GOTO 2440
 2460 MA(MO)=PEEK(DT)
 2470 NEXT MO
 2480 RETURN
 3000 REM DUMP BLOCK TO SCREEN
 3010 FOR I=0 TO 31
 3020 DV=I
 3030 GOSUB 3200
 3040 PRINT "0 ";
 3050 SA=(I*16)
 3060 FOR J=0 TO 15
 3070 DV=MA(SA+J)
 3080 GOSUB 3200
 3090 PRINT " ";
 3100 NEXT J
 3110 GOSUB 3400 
 3120 NEXT I
 3130 RETURN
 3200 REM PRINT DECIMAL NUMBER AS TWO HEX DIGITS
 3210 NB=(DV AND 240)/16
 3220 GOSUB 3300
 3230 NB=DV AND 15
 3240 GOSUB 3300
 3250 RETURN
 3300 REM PRINT NIBBLE
 3310 IF NB>9 GOTO 3350
 3320 VL=NB+48
 3330 PRINT CHR$(VL);
 3340 RETURN
 3350 REM CHARACTER IS LETTER A-F
 3360 VL=NB+55
 3370 PRINT CHR$(VL);
 3380 RETURN
 3400 REM PRINT THE ASCII TABLE TO THE RIGHT
 3410 PRINT " ";
 3420 FOR OF=SA TO (SA+15)
 3430 IF MA(OF)<32 THEN PRINT ".";
 3450 IF MA(OF)>126 THEN PRINT ".";
 3460 IF MA(OF)>31 AND MA(OF)<127 THEN PRINT CHR$(MA(OF));
 3470 NEXT OF
 3480 PRINT
 3490 RETURN
 3600 REM FIND PARTITION TABLE START
 3610 REM PARTITION TABLE POINTER IS AT MA(454-457)
 3620 L0=MA(454):REM SETUP LBA TO SD CONTROLLER
 3630 L1=MA(455)
 3640 L2=MA(456)
 3660 REM PT VAR IS LBA OF PARTITION TABLE
 3680 PT=MA(454)+(256*MA(455))+(65536*MA(456))
 3690 PRINT "PARTITION TABLE IS AT LBA";:PRINT PT
 3700 RETURN
 3800 REM POKE LBA VALUES, L0-L2 MUST BE SET BEFORE CALL
 3810 POKE A0,L0:REM POKE THE SD CONTROLLER LBA VALUES
 3820 POKE A1,L1
 3830 POKE A2,L2
 3840 REM PRINT "SET LBA IN SD CTRLR TO";:PRINT ((65536*L2)+(L1*256)+L0)
 3850 RETURN
 4000 REM PRINT RESERVED SECTOR KEY VALUES
 4010 PRINT "ID S/B FAT32, IS: ";
 4020 FOR I=82 TO 86
 4030 PRINT CHR$(MA(I));
 4040 NEXT I
 4050 PRINT
 4100 RETURN
 4200 REM PROCESS BOOT SECTOR AND BPB STRUCTURE
 4210 SC=MA(13):REM BPB_SecPerClus
 4220 RS=((256*MA(15))+MA(14)):REM BPB_RsvdSecCnt
 4230 NF=MA(16):REM BPB_NumFATs
 4250 SZ=((65536*MA(38))+(256*MA(37))+MA(36)):REM BPB_FATSz32
 4260 DS=PT+RS+(NF*SZ)
 4270 PRINT "BPB_SecPerClus ";:PRINT SC
 4280 PRINT "BPB_RsvdSecCnt ";:PRINT RS
 4290 PRINT "BPB_NumFATs    ";:PRINT NF
 4300 PRINT "BPB_FATSz32    ";:PRINT SZ
 4310 PRINT "DIR SECTOR #   ";:PRINT DS
 4320 RETURN
 4400 REM PRINT DIR ENTRY
 4405 GOSUB 6000:REM FILE NAME MATCHED?
 4410 SP=0
 4420 FOR I=0 TO 7
 4430 IF MA(DF+I)<>32 THEN PRINT CHR$(MA(DF+I));
 4440 IF MA(DF+I)=32 THEN SP=SP+1
 4450 NEXT I
 4460 PRINT ".";
 4470 FOR I=8 TO 10
 4480 IF MA(DF+I)<> 32 THEN PRINT CHR$(MA(DF+I));
 4490 IF MA(DF+I)=32 THEN SP=SP+1
 4500 NEXT I
 4510 REM PRINT
 4520 FOR CT=0 TO SP
 4530 PRINT " ";
 4540 NEXT CT
 4550 PRINT " ";:PRINT ((MA(DF+30)*65536)+(MA(DF+29)*256)+MA(DF+28));
 4560 AC=(65536*MA(DF+21))+(256*MA(DF+27))+MA(DF+26)
 4570 PRINT "CLUSTER OFFSET";:PRINT AC
 4572 IF CM=1 THEN FS=AC
 4580 RETURN
 4600 REM PRINT DIRECTORY
 4610 DF=0:REM START AT FIRST ENTRY
 4620 IF MA(DF+2)<>0 THEN GOSUB 4400:REM PRINT CURRENT DIR ENTRY
 4630 DF=DF+32:REM ADVANCE TO NEXT DIR ENTRY
 4640 IF DF<512 GOTO 4620:REM BLOCKS ARE 512 BYTES
 4660 RETURN
 4800 REM POKE LBA, CHECK STAT, READ BLOCK TO MA()
 4810 GOSUB 3800:REM POKE LBA VALS
 4820 GOSUB 2200:REM CHECK CARD INIT STATUS
 4830 GOSUB 2400:REM READ IN BLOCK
 4840 RETURN
 5000 FF=DS+((FS-2)*SC):REM MANUALLY ADDING FILE OFFSET
 5010 PRINT "FILE OFFSET SECTOR";:PRINT FF
 5012 IF CM=1 THEN 
 5020 L0=FF AND 255:L1=FF/256:L2=FF/65536
 5030 GOSUB 4800:REM READ BLOCK
 5040 GOSUB 3000:REM DUMP ARRAY
 5050 RETURN
 5200 REM READ/PRINT ROOT DIRECTORY
 5210 BO=0
 5220 PRINT "*** DIRECTORY START ***"
 5230 L0=(DS+BO) AND 255:L1=(DS+BO)/256:L2=(DS+BO)/65536
 5240 GOSUB 4800:REM READ BLOCK
 5250 IF MA(0)=0 THEN GOTO 5300
 5260 REM GOSUB 3000:REM DUMP ARRAY
 5270 GOSUB 4600:REM PRINT DIRECTORY
 5280 BO=BO+1
 5290 GOTO 5230
 5300 PRINT "*** DIRECTORY END ***"
 5310 RETURN
 6000 REM CHECK IF FILE NAME MATCHES
 6010 CM=1
 6020 FOR I=1 TO 10
 6030 SE=ASC(MID$(Q$,I,1))
 6040 IF MA(DF+I-1)<>SE THEN CM=0
 6050 NEXT I
 6060 IF CM=1 THEN PRINT "FILE FOUND"
 6190 RETURN
