                      ; ramTest.asm
                      ; Assembled with asm6809
                      ; Land Boards, LLC
                      ; Test RAM using LB-6809-01 on LB-MEM-02 card
                      ; Takes about 2 secs
                      
0000                  RAMSTART        EQU $0000
0007                  RAMEND          EQU $0007
8000                  RAMENDPL1       EQU $8000
A000                  ACIABASE        EQU $A000
0000                  ACIA_ST_CMD     EQU $00
0001                  ACIA_DAT        EQU $01
                      
C000                                  ORG $C000
                      ; SET LED = LOW
C000  12              RESVEC  NOP
C001  CE7F00                          LDU     #$7F00  ; SET USER STACK POINTER
C004  10CE7E00                        LDS     #$7E00  ; SET HARDWARE STACK POINTER
                      ; TEST WITH WRTE/READ OF ADDRESS $0000 AND VALUE OF $55
C008  8655                            LDA     #$55
C00A  B70000                          STA     RAMSTART
C00D  12                              NOP
C00E  F60000                          LDB     RAMSTART
C011  C155                            CMPB #$55
C013  102600A1                        LBNE    FASTBLINK
                      ; TEST WITH WRITE/READ OF ADDRESS $0000 AND VALUE OF $AA
C017  86AA                            LDA     #$AA
C019  B70000                          STA     RAMSTART
C01C  12                              NOP
C01D  F60000                          LDB     RAMSTART
C020  C1AA                            CMPB #$AA
C022  10260092                        LBNE    FASTBLINK
                      ; BOUNCE A BIT ACROSS THE DATA LINES OF ADDR $0000
C026  8601                            LDA #$01
C028                  LOOP1ADR
C028  B70000                          STA RAMSTART
C02B  12                              NOP
C02C  B10000                          CMPA    RAMSTART
C02F  10260085                        LBNE    FASTBLINK
C033  48                              ASLA
C034  8100                            CMPA #$00
C036  26F0                            BNE     LOOP1ADR
                      ; Fill memory with a ramp value
C038  8E0000                          LDX #RAMSTART
C03B  8600                            LDA #0
C03D  C601                            LDB #1
C03F                  LPSTORE
C03F  A784                            STA 0,X
C041  3A                              ABX
C042  4C                              INCA
C043  8C8000                          CMPX    #RAMENDPL1
C046  26F7                            BNE     LPSTORE
                      ; CHECK RAMP VALUES
C048  8E0000                          LDX #RAMSTART
C04B  8600                            LDA #0
C04D  C601                            LDB #1
C04F                  LPCHECK
C04F  A184                            CMPA    0,X
C051  2665                            BNE     FASTBLINK
C053  3A                              ABX
C054  4C                              INCA
C055  8C8000                          CMPX    #RAMENDPL1
C058  26F5                            BNE     LPCHECK
                      ;
                      ; CHECK UPPER ADDRESS LINES
                      ;
C05A  8601                            LDA     #1                      ; UPPER BYTE OF D
C05C  C600                            LDB     #0                      ; LOWER BYTE OF D
C05E                  LOOPBITWR
C05E  1F01                            TFR     D,X
C060  A784                            STA     0,X
C062  8B01                            ADDA    #1
C064  8150                            CMPA    #80
C066  26F6                            BNE             LOOPBITWR
                      ; 
C068  8601                            LDA     #1                      ; UPPER BYTE OF D
C06A  C600                            LDB     #0                      ; LOWER BYTE OF D
C06C                  LOOPBITRD
C06C  1F01                            TFR     D,X
C06E  A184                            CMPA    0,X
C070  2646                            BNE     FASTBLINK
C072  8B01                            ADDA    #1
C074  8150                            CMPA    #80
C076  26F4                            BNE             LOOPBITRD
                                      
                      ;
                      ; Test ACIA - Code written bu Microsoft Pilot with Human interaction
                      ;
C078  8D0C                            BSR INITACIA
C07A  863E                            LDA #'>'
C07C  8D2A                            BSR WRITE_SERIAL
C07E                  LOOPWR
C07E  8D18                            BSR     READ_SERIAL
C080  8D26                            BSR WRITE_SERIAL
C082  20FA                            BRA     LOOPWR
                                      
                      ; DEFAULT = PASS
C084  2053                            BRA     SLOWBLINK
                      
                              ; Initialize the ACIA
C086                  INITACIA
C086  3612                            PSHU    A,X            ; Push registers A and X onto the stack
C088  8EA000                          LDX     #ACIABASE      ; Base address of the 6850 ACIA
C08B  8603                    LDA     #$03           ; Reset transmitter and receiver
C08D  A784                    STA     ACIA_ST_CMD,X  ; Write to control register
C08F  8615                    LDA     #$15           ; Control register value: 8N1, 115200 baud
C091  A784                    STA     ACIA_ST_CMD,X  ; Write to control register
C093  A601                            LDA             ACIA_DAT,X         ; READ RECEIVER TO FLUSH ERRORS
C095  3712                            PULU    A,X            ; Pull registers A and B from the stack
C097  39                              RTS
                      
                      ; Subroutine to read serial data
                      ; Uses A, X registers
                      ; Returns data in register A
C098                  READ_SERIAL
C098  3610                            PSHU    X               ; Push register X onto the stack
C09A  8EA000                          LDX     #ACIABASE       ; Base address of the 6850 ACIA
C09D                  RDSERLP
C09D  A684                            LDA     ACIA_ST_CMD,X   ; Read status register
C09F  8401                    ANDA    #$01            ; Check if data is available
C0A1  27FA                    BEQ     RDSERLP             ; If not, loop until data is available
C0A3  A601                    LDA     ACIA_DAT,X      ; Read received data
C0A5  3710                            PULU    X               ; Pull registers A and B from the stack
C0A7  39                      RTS                     ; Return from subroutine
                      
                      ; Subroutine to write serial data
                      ; Uses A, B, X registers
                      ; Writes data from register A
C0A8                  WRITE_SERIAL
C0A8  3614                            PSHU    B,X             ; Push registers B and X onto the stack
C0AA  8EA000                          LDX     #ACIABASE       ; Base address of the 6850 ACIA
C0AD                  WRSERLP
C0AD  E684                    LDB     ACIA_ST_CMD,X   ; Read status register
C0AF  C402                    ANDB    #$02            ; Check if transmitter is ready
C0B1  27FA                    BEQ     WRSERLP         ; If not, loop until transmitter is ready
C0B3  A701                    STA     ACIA_DAT,X      ; Write data to transmit register
C0B5  3714                            PULU    B,X             ; Pull registers B and X from the stack
C0B7  39                      RTS                     ; Return from subroutine
                      
                      
                      ;
                      ; Slowly blink LED
                      ;
C0B8                  FASTBLINK
C0B8  4F                              CLRA
C0B9  B7F000                          STA     $F000
                      ; WAIT LOOP
C0BC  8640                            LDA     #$40
C0BE                  LOOPX1
C0BE  C6FF                            LDB     #$FF
C0C0                  LOOPX1B
C0C0  12                              NOP
C0C1  5A                              DECB
C0C2  26FC                            BNE LOOPX1B
C0C4  4A                              DECA
C0C5  26F7                            BNE     LOOPX1
                      ; SET LED = HIGH
C0C7  8601                            LDA     #$1
C0C9  B7F000                          STA     $F000
                      ; WAIT LOOP
C0CC  86FF                            LDA     #$FF
C0CE                  LOOPX2
C0CE  C640                            LDB     #$40
C0D0                  LOOPX2B
C0D0  12                              NOP
C0D1  5A                              DECB
C0D2  26FC                            BNE LOOPX2B
C0D4  4A                              DECA
C0D5  26F7                            BNE     LOOPX2
                      ; LOOP FOREVER
C0D7  20DF                            BRA     FASTBLINK
                      
                      ;
                      ; Slowly blink LED
                      ;
C0D9                  SLOWBLINK
C0D9  4F                              CLRA
C0DA  B7F000                          STA     $F000
                      ; WAIT LOOP
C0DD  86FF                            LDA     #$FF
C0DF                  LOOP1
C0DF  C6FF                            LDB     #$FF
C0E1                  LOOP1B
C0E1  12                              NOP
C0E2  5A                              DECB
C0E3  26FC                            BNE LOOP1B
C0E5  4A                              DECA
C0E6  26F7                            BNE     LOOP1
                      ; SET LED = HIGH
C0E8  8601                            LDA     #$1
C0EA  B7F000                          STA     $F000
                      ; WAIT LOOP
C0ED  86FF                            LDA     #$FF
C0EF                  LOOP2
C0EF  C6FF                            LDB     #$FF
C0F1                  LOOP2B
C0F1  12                              NOP
C0F2  5A                              DECB
C0F3  26FC                            BNE LOOP2B
C0F5  4A                              DECA
C0F6  26F7                            BNE     LOOP2
                      ; LOOP FOREVER
C0F8  20DF                            BRA     SLOWBLINK
                      
                      ; Reset vector
FFFE                                  ORG     $FFFE
FFFE  C000            LBFFE   FDB     RESVEC  ; RESET 
